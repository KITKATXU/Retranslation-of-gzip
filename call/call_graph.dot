digraph G {
    // 图的全局属性
    graph [
        rankdir=LR,          // 从左到右布局
        splines=ortho,       // 正交连线
        concentrate=true,    // 合并平行边
        compound=true,       // 允许跨子图连线
        ranksep=2,          // 层级间距
        nodesep=0.4         // 节点间距
    ];
    
    // 节点默认属性
    node [
        shape=box,
        style="rounded,filled",
        fontname="Arial",
        fontsize=10,
        height=0.3,
        margin="0.2,0.1"
    ];
    
    // 边的默认属性
    edge [
        fontsize=8,
        arrowsize=0.6,
        penwidth=0.8
    ];
        "NULL\n(inflate.c:494)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:562)" [fillcolor="lightgreen"];
    "STDIN_FILENO\n(gzip.c:792)" [fillcolor="lightgreen"];
    "get_byte\n(unzip.c:176)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:537)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:924)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:755)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1564)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:639)" [fillcolor="lightgreen"];
    "MAX_MATCH\n(deflate.c:572)" [fillcolor="lightgreen"];
    "__GETOPT_XCONCAT\n(gzip.c:510)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:1315)" [fillcolor="lightgreen"];
    "head\n(deflate.c:763)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:756)" [fillcolor="lightgreen"];
    "make_ofname\n(gzip.c:1380)" [fillcolor="lightblue"];
    "NC\n(unlzh.c:359)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:648)" [fillcolor="lightgreen"];
    "try_help\n(gzip.c:327)" [fillcolor="lightblue"];
    "head\n(deflate.c:810)" [fillcolor="lightgreen"];
    "STORED\n(unzip.c:140)" [fillcolor="lightgreen"];
    "get_byte\n(unzip.c:150)" [fillcolor="lightgreen"];
    "HASH_BITS\n(deflate.c:701)" [fillcolor="lightgreen"];
    "MAX\n(trees.c:674)" [fillcolor="lightgreen"];
    "get_byte\n(gzip.c:1551)" [fillcolor="lightgreen"];
    "AT_FDCWD\n(gzip.c:1228)" [fillcolor="lightgreen"];
    "inflate_codes\n(inflate.c:509)" [fillcolor="lightblue"];
    "stderr\n(gzip.c:625)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(bits.c:175)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1415)" [fillcolor="lightgreen"];
    "Len\n(trees.c:1064)" [fillcolor="lightgreen"];
    "INSERT_STRING\n(deflate.c:671)" [fillcolor="lightgreen"];
    "STDIN_FILENO\n(gzip.c:764)" [fillcolor="lightgreen"];
    "MAX_SUFFIX\n(gzip.c:629)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:367)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:590)" [fillcolor="lightgreen"];
    "WSIZE\n(unpack.c:258)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:572)" [fillcolor="lightgreen"];
    "STORED\n(unzip.c:79)" [fillcolor="lightgreen"];
    "EXTRA_FIELD\n(gzip.c:1587)" [fillcolor="lightgreen"];
    "__S_IFMT\n(gzip.c:714)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1397)" [fillcolor="lightgreen"];
    "MAX_MATCH\n(deflate.c:873)" [fillcolor="lightgreen"];
    "CHAR_BIT\n(unlzh.c:303)" [fillcolor="lightgreen"];
    "DICBIT\n(unlzh.c:308)" [fillcolor="lightgreen"];
    "strequ\n(gzip.c:428)" [fillcolor="lightgreen"];
    "strequ\n(gzip.c:1404)" [fillcolor="lightgreen"];
    "WARN\n(gzip.c:932)" [fillcolor="lightgreen"];
    "H_SHIFT\n(deflate.c:814)" [fillcolor="lightgreen"];
    "EXTERN\n(gzip.h:111)" [fillcolor="lightgreen"];
    "DYN_TREES\n(trees.c:943)" [fillcolor="lightgreen"];
    "fcntl\n(util.c:256)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:950)" [fillcolor="lightgreen"];
    "TYPE_SIGNED\n(gzip.c:1557)" [fillcolor="lightgreen"];
    "Code\n(trees.c:779)" [fillcolor="lightgreen"];
    "LOCFLG\n(unzip.c:96)" [fillcolor="lightgreen"];
    "OK\n(unzip.c:197)" [fillcolor="lightgreen"];
    "BINARY\n(trees.c:1082)" [fillcolor="lightgreen"];
    "get_byte\n(gzip.c:1573)" [fillcolor="lightgreen"];
    "fprintf\n(lzw.c:18)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:676)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:907)" [fillcolor="lightgreen"];
    "errno\n(util.c:122)" [fillcolor="lightgreen"];
    "xunlink\n(util.c:360)" [fillcolor="lightblue"];
    "OK\n(gzip.c:899)" [fillcolor="lightgreen"];
    "read_pt_len\n(unlzh.c:200)" [fillcolor="lightblue"];
    "CBIT\n(unlzh.c:240)" [fillcolor="lightgreen"];
    "SH\n(unzip.c:195)" [fillcolor="lightgreen"];
    "false\n(gzip.c:1051)" [fillcolor="lightgreen"];
    "MAX_PATH_LEN\n(gzip.c:2124)" [fillcolor="lightgreen"];
    "CODE_BIT\n(unlzh.c:279)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:638)" [fillcolor="lightgreen"];
    "DICSIZ\n(unlzh.c:371)" [fillcolor="lightgreen"];
    "fprintf\n(unzip.c:146)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:771)" [fillcolor="lightgreen"];
    "c_len\n(unlzh.c:266)" [fillcolor="lightgreen"];
    "optarg\n(gzip.c:566)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1705)" [fillcolor="lightgreen"];
    "DIST_BUFSIZE\n(unlzw.c:266)" [fillcolor="lightgreen"];
    "BITBUFSIZ\n(unlzh.c:216)" [fillcolor="lightgreen"];
    "decode_c\n(unlzh.c:270)" [fillcolor="lightblue"];
    "send_all_trees\n(trees.c:832)" [fillcolor="lightblue"];
    "STDOUT_FILENO\n(gzip.c:792)" [fillcolor="lightgreen"];
    "NULL\n(inflate.c:418)" [fillcolor="lightgreen"];
    "WMASK\n(deflate.c:808)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:583)" [fillcolor="lightgreen"];
    "NULL\n(util.c:457)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:813)" [fillcolor="lightgreen"];
    "__GETOPT_ID\n(gzip.c:511)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:773)" [fillcolor="lightgreen"];
    "read_tree\n(unpack.c:113)" [fillcolor="lightblue"];
    "__GETOPT_CONCAT\n(gzip.c:511)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:535)" [fillcolor="lightgreen"];
    "fprintf\n(util.c:486)" [fillcolor="lightgreen"];
    "license\n(gzip.c:388)" [fillcolor="lightblue"];
    "printf\n(gzip.c:1750)" [fillcolor="lightgreen"];
    "ERROR\n(unzip.c:75)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:997)" [fillcolor="lightgreen"];
    "DIST_BUFSIZE\n(trees.c:1011)" [fillcolor="lightgreen"];
    "LOCFLG\n(unzip.c:88)" [fillcolor="lightgreen"];
    "__GETOPT_ID\n(gzip.c:657)" [fillcolor="lightgreen"];
    "put_byte\n(zip.c:78)" [fillcolor="lightgreen"];
    "FLUSH_BLOCK\n(deflate.c:730)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:808)" [fillcolor="lightgreen"];
    "LOCHOW\n(unzip.c:78)" [fillcolor="lightgreen"];
    "__S_IFMT\n(gzip.c:881)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:679)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:813)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:913)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:1660)" [fillcolor="lightgreen"];
    "treat_file\n(gzip.c:864)" [fillcolor="lightblue"];
    "stderr\n(gzip.c:2038)" [fillcolor="lightgreen"];
    "try_byte\n(gzip.c:1513)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1060)" [fillcolor="lightgreen"];
    "HASH_SIZE\n(deflate.c:324)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:768)" [fillcolor="lightgreen"];
    "left\n(unlzh.c:289)" [fillcolor="lightgreen"];
    "HEADER_CRC\n(gzip.c:1633)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1564)" [fillcolor="lightgreen"];
    "tab_suffixof\n(unlzw.c:244)" [fillcolor="lightgreen"];
    "H_SHIFT\n(deflate.c:713)" [fillcolor="lightgreen"];
    "WARN\n(gzip.c:924)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:592)" [fillcolor="lightgreen"];
    "HASH_BITS\n(deflate.c:324)" [fillcolor="lightgreen"];
    "DEFLATED\n(unzip.c:79)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:636)" [fillcolor="lightgreen"];
    "de_stack\n(unlzw.c:266)" [fillcolor="lightgreen"];
    "ignore_value\n(gzip.c:1924)" [fillcolor="lightgreen"];
    "build_tree\n(trees.c:618)" [fillcolor="lightblue"];
    "wp\n(inflate.c:537)" [fillcolor="lightgreen"];
    "ENAMETOOLONG\n(gzip.c:1124)" [fillcolor="lightgreen"];
    "fprintf\n(util.c:474)" [fillcolor="lightgreen"];
    "INSERT_STRING\n(deflate.c:701)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:743)" [fillcolor="lightgreen"];
    "EOF\n(unlzh.c:109)" [fillcolor="lightgreen"];
    "__GETOPT_XCONCAT\n(gzip.c:565)" [fillcolor="lightgreen"];
    "TYPE_MAXIMUM\n(gzip.c:1567)" [fillcolor="lightgreen"];
    "Len\n(trees.c:355)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:324)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1895)" [fillcolor="lightgreen"];
    "STDOUT_FILENO\n(gzip.c:729)" [fillcolor="lightgreen"];
    "PART_SEP\n(gzip.c:1876)" [fillcolor="lightgreen"];
    "gzip_error\n(util.c:465)" [fillcolor="lightblue"];
    "MIN_MATCH\n(deflate.c:782)" [fillcolor="lightgreen"];
    "HASH_SIZE\n(deflate.c:367)" [fillcolor="lightgreen"];
    "fprintf\n(util.c:480)" [fillcolor="lightgreen"];
    "HASH_SIZE\n(deflate.c:713)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:648)" [fillcolor="lightgreen"];
    "read_c_len\n(unlzh.c:235)" [fillcolor="lightblue"];
    "NULL\n(deflate.c:834)" [fillcolor="lightgreen"];
    "MAXMATCH\n(unlzh.c:265)" [fillcolor="lightgreen"];
    "WARNING\n(util.c:480)" [fillcolor="lightgreen"];
    "BMAX\n(inflate.c:300)" [fillcolor="lightgreen"];
    "EINVAL\n(gzip.c:677)" [fillcolor="lightgreen"];
    "CLEAR\n(unlzw.c:203)" [fillcolor="lightgreen"];
    "L_CODES\n(trees.c:421)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(zip.c:102)" [fillcolor="lightgreen"];
    "HASH_BITS\n(deflate.c:814)" [fillcolor="lightgreen"];
    "SMALLEST\n(trees.c:684)" [fillcolor="lightgreen"];
    "LOCSIG\n(unzip.c:195)" [fillcolor="lightgreen"];
    "__GETOPT_ID\n(gzip.c:474)" [fillcolor="lightgreen"];
    "FLUSH_BLOCK\n(deflate.c:858)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:775)" [fillcolor="lightgreen"];
    "Dad\n(trees.c:517)" [fillcolor="lightgreen"];
    "EOF\n(gzip.c:1702)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:907)" [fillcolor="lightgreen"];
    "__GETOPT_CONCAT\n(gzip.c:566)" [fillcolor="lightgreen"];
    "de_stack\n(unlzw.c:211)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:639)" [fillcolor="lightgreen"];
    "D_CODES\n(trees.c:382)" [fillcolor="lightgreen"];
    "DIST_BUFSIZE\n(unlzw.c:250)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:677)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:756)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:607)" [fillcolor="lightgreen"];
    "H_SHIFT\n(deflate.c:810)" [fillcolor="lightgreen"];
    "DICSIZ\n(unlzh.c:392)" [fillcolor="lightgreen"];
    "clear_bitbuf\n(unpack.c:226)" [fillcolor="lightgreen"];
    "updcrc\n(util.c:141)" [fillcolor="lightblue"];
    "ENCRYPTED\n(gzip.c:1537)" [fillcolor="lightgreen"];
    "send_code\n(trees.c:776)" [fillcolor="lightgreen"];
    "HASH_BITS\n(deflate.c:367)" [fillcolor="lightgreen"];
    "stderr\n(unzip.c:73)" [fillcolor="lightgreen"];
    "EINVAL\n(gzip.c:1019)" [fillcolor="lightgreen"];
    "stderr\n(unlzw.c:125)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:915)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1528)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:754)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:1372)" [fillcolor="lightgreen"];
    "MAX_PEEK\n(unpack.c:195)" [fillcolor="lightgreen"];
    "treat_stdin\n(gzip.c:725)" [fillcolor="lightblue"];
    "write_buffer\n(util.c:272)" [fillcolor="lightblue"];
    "Freq\n(trees.c:727)" [fillcolor="lightgreen"];
    "INT_MAX\n(util.c:247)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:1531)" [fillcolor="lightgreen"];
    "put_long\n(zip.c:101)" [fillcolor="lightgreen"];
    "__S_ISUID\n(gzip.c:905)" [fillcolor="lightgreen"];
    "check_zipfile\n(unzip.c:62)" [fillcolor="lightblue"];
    "DUMPBITS\n(inflate.c:571)" [fillcolor="lightgreen"];
    "PBIT\n(unlzh.c:281)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:530)" [fillcolor="lightgreen"];
    "CHAR_BIT\n(unlzh.c:120)" [fillcolor="lightgreen"];
    "CHAR_BIT\n(unlzh.c:110)" [fillcolor="lightgreen"];
    "input\n(unlzw.c:192)" [fillcolor="lightgreen"];
    "Len\n(trees.c:779)" [fillcolor="lightgreen"];
    "strequ\n(gzip.c:464)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:1985)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:421)" [fillcolor="lightgreen"];
    "__GETOPT_XCONCAT\n(gzip.c:494)" [fillcolor="lightgreen"];
    "install_signal_handlers\n(gzip.c:2050)" [fillcolor="lightblue"];
    "c_table\n(unlzh.c:266)" [fillcolor="lightgreen"];
    "right\n(unlzh.c:183)" [fillcolor="lightgreen"];
    "INSERT_STRING\n(deflate.c:812)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:753)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:1754)" [fillcolor="lightgreen"];
    "gen_codes\n(trees.c:577)" [fillcolor="lightblue"];
    "FLUSH_BLOCK\n(deflate.c:740)" [fillcolor="lightgreen"];
    "SIG_BLOCK\n(gzip.c:1113)" [fillcolor="lightgreen"];
    "translate_eol\n(trees.c:1082)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:799)" [fillcolor="lightgreen"];
    "head\n(unlzh.c:305)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:410)" [fillcolor="lightgreen"];
    "CBIT\n(unlzh.c:242)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:583)" [fillcolor="lightgreen"];
    "RSYNC_ROLL\n(deflate.c:847)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:749)" [fillcolor="lightgreen"];
    "Code\n(trees.c:603)" [fillcolor="lightgreen"];
    "S_ISUID\n(gzip.c:905)" [fillcolor="lightgreen"];
    "SH\n(gzip.c:1784)" [fillcolor="lightgreen"];
    "WARN\n(gzip.c:890)" [fillcolor="lightgreen"];
    "MAX_BITS\n(trees.c:508)" [fillcolor="lightgreen"];
    "skip_bits\n(unpack.c:261)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:1243)" [fillcolor="lightgreen"];
    "CODE_BIT\n(unlzh.c:255)" [fillcolor="lightgreen"];
    "SMALLEST\n(trees.c:683)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1692)" [fillcolor="lightgreen"];
    "c_len\n(unlzh.c:265)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:701)" [fillcolor="lightgreen"];
    "left\n(unlzh.c:183)" [fillcolor="lightgreen"];
    "write_error\n(util.c:496)" [fillcolor="lightblue"];
    "prefix_len\n(unpack.c:202)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1961)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:1564)" [fillcolor="lightgreen"];
    "stderr\n(util.c:480)" [fillcolor="lightgreen"];
    "head\n(unlzh.c:252)" [fillcolor="lightgreen"];
    "LOCSIG\n(unzip.c:72)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:1152)" [fillcolor="lightgreen"];
    "STORED_BLOCK\n(trees.c:956)" [fillcolor="lightgreen"];
    "DICBIT\n(unlzh.c:281)" [fillcolor="lightgreen"];
    "SEEK_END\n(gzip.c:1776)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:753)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1453)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:1643)" [fillcolor="lightgreen"];
    "Buf_size\n(bits.c:145)" [fillcolor="lightgreen"];
    "get_byte\n(gzip.c:1552)" [fillcolor="lightgreen"];
    "Len\n(trees.c:1043)" [fillcolor="lightgreen"];
    "unpack\n(unpack.c:213)" [fillcolor="lightblue"];
    "c_len\n(unlzh.c:262)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:899)" [fillcolor="lightgreen"];
    "NULL\n(util.c:437)" [fillcolor="lightgreen"];
    "LENGTH_CODES\n(trees.c:632)" [fillcolor="lightgreen"];
    "put_byte\n(zip.c:83)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:562)" [fillcolor="lightgreen"];
    "put_byte\n(zip.c:50)" [fillcolor="lightgreen"];
    "fprintf\n(unzip.c:197)" [fillcolor="lightgreen"];
    "fprintf\n(unzip.c:73)" [fillcolor="lightgreen"];
    "F_GETFL\n(util.c:256)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:919)" [fillcolor="lightgreen"];
    "COMPRESSED\n(gzip.c:1670)" [fillcolor="lightgreen"];
    "stdout\n(gzip.c:1803)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:954)" [fillcolor="lightgreen"];
    "true\n(gzip.c:458)" [fillcolor="lightgreen"];
    "clear_tab_prefixof\n(unlzw.c:148)" [fillcolor="lightgreen"];
    "HEADER_CRC\n(gzip.c:1468)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:809)" [fillcolor="lightgreen"];
    "__GETOPT_CONCAT\n(gzip.c:620)" [fillcolor="lightgreen"];
    "flush_output\n(inflate.c:652)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:557)" [fillcolor="lightgreen"];
    "ERROR\n(unzip.c:91)" [fillcolor="lightgreen"];
    "put_byte\n(bits.c:208)" [fillcolor="lightgreen"];
    "INSERT_STRING\n(deflate.c:819)" [fillcolor="lightgreen"];
    "LG\n(unzip.c:146)" [fillcolor="lightgreen"];
    "Len\n(trees.c:529)" [fillcolor="lightgreen"];
    "__GETOPT_CONCAT\n(gzip.c:510)" [fillcolor="lightgreen"];
    "OPTIONS_VAR\n(gzip.c:433)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:537)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:493)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:2141)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:1987)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:890)" [fillcolor="lightgreen"];
    "NIL\n(deflate.c:588)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:588)" [fillcolor="lightgreen"];
    "NC\n(unlzh.c:291)" [fillcolor="lightgreen"];
    "BITBUFSIZ\n(unlzh.c:284)" [fillcolor="lightgreen"];
    "head\n(deflate.c:819)" [fillcolor="lightgreen"];
    "WMASK\n(deflate.c:810)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:819)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:792)" [fillcolor="lightgreen"];
    "MAX_MATCH\n(deflate.c:394)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:561)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:758)" [fillcolor="lightgreen"];
    "copy_stat\n(gzip.c:1935)" [fillcolor="lightblue"];
    "treat_dir\n(gzip.c:2000)" [fillcolor="lightblue"];
    "ERROR\n(lzw.c:22)" [fillcolor="lightgreen"];
    "MAXMATCH\n(unlzh.c:285)" [fillcolor="lightgreen"];
    "Code\n(trees.c:406)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:890)" [fillcolor="lightgreen"];
    "WARNING\n(unlzw.c:125)" [fillcolor="lightgreen"];
    "WARN\n(gzip.c:1985)" [fillcolor="lightgreen"];
    "optarg\n(gzip.c:509)" [fillcolor="lightgreen"];
    "NULL\n(deflate.c:846)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:671)" [fillcolor="lightgreen"];
    "LG\n(unzip.c:166)" [fillcolor="lightgreen"];
    "stderr\n(unzip.c:202)" [fillcolor="lightgreen"];
    "get_byte\n(gzip.c:1526)" [fillcolor="lightgreen"];
    "SH\n(unzip.c:126)" [fillcolor="lightgreen"];
    "S_IRUSR\n(gzip.c:1114)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:1454)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:913)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:767)" [fillcolor="lightgreen"];
    "BIT_MASK\n(unlzw.c:128)" [fillcolor="lightgreen"];
    "HASH_BITS\n(deflate.c:671)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(zip.c:83)" [fillcolor="lightgreen"];
    "EOF\n(gzip.c:1684)" [fillcolor="lightgreen"];
    "SH\n(unzip.c:146)" [fillcolor="lightgreen"];
    "MAX_MATCH\n(deflate.c:417)" [fillcolor="lightgreen"];
    "SH\n(unzip.c:72)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:2073)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:394)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:759)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:1116)" [fillcolor="lightgreen"];
    "HEADER_CRC\n(gzip.c:1575)" [fillcolor="lightgreen"];
    "main\n(gzip.c:414)" [fillcolor="lightblue"];
    "gen_bitlen\n(trees.c:492)" [fillcolor="lightblue"];
    "OUTBUFSIZ\n(bits.c:177)" [fillcolor="lightgreen"];
    "fcntl\n(util.c:261)" [fillcolor="lightgreen"];
    "WSIZE\n(unzip.c:151)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:569)" [fillcolor="lightgreen"];
    "bi_reverse\n(bits.c:157)" [fillcolor="lightblue"];
    "stderr\n(gzip.c:1039)" [fillcolor="lightgreen"];
    "rsync_roll\n(deflate.c:614)" [fillcolor="lightblue"];
    "CBIT\n(unlzh.c:261)" [fillcolor="lightgreen"];
    "put_short\n(bits.c:143)" [fillcolor="lightgreen"];
    "RSYNC_WIN\n(deflate.c:635)" [fillcolor="lightgreen"];
    "ERROR\n(unzip.c:210)" [fillcolor="lightgreen"];
    "init_getbits\n(unlzh.c:124)" [fillcolor="lightblue"];
    "flush_outbuf\n(util.c:286)" [fillcolor="lightblue"];
    "NEEDBITS\n(inflate.c:753)" [fillcolor="lightgreen"];
    "HASH_SIZE\n(deflate.c:586)" [fillcolor="lightgreen"];
    "UCHAR_MAX\n(unlzh.c:291)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:2131)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:753)" [fillcolor="lightgreen"];
    "deflate\n(deflate.c:748)" [fillcolor="lightblue"];
    "fdopendir\n(gzip.c:2010)" [fillcolor="lightgreen"];
    "stdout\n(gzip.c:1753)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:407)" [fillcolor="lightgreen"];
    "MIN_LOOKAHEAD\n(deflate.c:737)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:924)" [fillcolor="lightgreen"];
    "send_code\n(trees.c:769)" [fillcolor="lightgreen"];
    "OK\n(util.c:133)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:1134)" [fillcolor="lightgreen"];
    "l_buf\n(trees.c:1036)" [fillcolor="lightgreen"];
    "tab_suffix\n(unlzw.c:244)" [fillcolor="lightgreen"];
    "Buf_size\n(bits.c:144)" [fillcolor="lightgreen"];
    "flush_output\n(inflate.c:595)" [fillcolor="lightgreen"];
    "copy\n(util.c:117)" [fillcolor="lightblue"];
    "STORED\n(gzip.c:1679)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1058)" [fillcolor="lightgreen"];
    "fprintf\n(unzip.c:189)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:630)" [fillcolor="lightgreen"];
    "DEFLATED\n(gzip.c:1577)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:1035)" [fillcolor="lightgreen"];
    "FIRST\n(unlzw.c:203)" [fillcolor="lightgreen"];
    "make_simple_name\n(util.c:390)" [fillcolor="lightblue"];
    "OK\n(gzip.c:932)" [fillcolor="lightgreen"];
    "check_ofname\n(gzip.c:1888)" [fillcolor="lightblue"];
    "CHAR_BIT\n(unlzh.c:286)" [fillcolor="lightgreen"];
    "unlzw\n(unlzw.c:99)" [fillcolor="lightblue"];
    "__GETOPT_ID\n(gzip.c:494)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:406)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:546)" [fillcolor="lightgreen"];
    "HASH_MASK\n(deflate.c:763)" [fillcolor="lightgreen"];
    "LITERALS\n(trees.c:421)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:636)" [fillcolor="lightgreen"];
    "__GETOPT_CONCAT\n(gzip.c:509)" [fillcolor="lightgreen"];
    "N_MAX\n(inflate.c:301)" [fillcolor="lightgreen"];
    "put_byte\n(bits.c:177)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:1450)" [fillcolor="lightgreen"];
    "L_CODES\n(trees.c:632)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(unlzw.c:258)" [fillcolor="lightgreen"];
    "HASH_SIZE\n(deflate.c:814)" [fillcolor="lightgreen"];
    "put_byte\n(zip.c:51)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:602)" [fillcolor="lightgreen"];
    "NULL\n(deflate.c:740)" [fillcolor="lightgreen"];
    "ERROR\n(unzip.c:84)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:1366)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:329)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:1985)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:890)" [fillcolor="lightgreen"];
    "strequ\n(gzip.c:1210)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:572)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:763)" [fillcolor="lightgreen"];
    "HASH_SIZE\n(deflate.c:808)" [fillcolor="lightgreen"];
    "__GETOPT_ID\n(gzip.c:566)" [fillcolor="lightgreen"];
    "O_EXCL\n(gzip.c:1090)" [fillcolor="lightgreen"];
    "lm_init\n(deflate.c:311)" [fillcolor="lightblue"];
    "__GETOPT_ID\n(gzip.c:656)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:1705)" [fillcolor="lightgreen"];
    "BMAX\n(inflate.c:337)" [fillcolor="lightgreen"];
    "STDOUT_FILENO\n(gzip.c:678)" [fillcolor="lightgreen"];
    "CHAR_BIT\n(unlzh.c:284)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:834)" [fillcolor="lightgreen"];
    "HASH_SIZE\n(deflate.c:701)" [fillcolor="lightgreen"];
    "FAST\n(deflate.c:341)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:476)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:569)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:773)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:773)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:799)" [fillcolor="lightgreen"];
    "Len\n(trees.c:1054)" [fillcolor="lightgreen"];
    "TYPE_WIDTH\n(gzip.c:1557)" [fillcolor="lightgreen"];
    "ERROR\n(unzip.c:92)" [fillcolor="lightgreen"];
    "UPDATE_HASH\n(deflate.c:819)" [fillcolor="lightgreen"];
    "EINVAL\n(gzip.c:1018)" [fillcolor="lightgreen"];
    "INSERT_STRING\n(deflate.c:814)" [fillcolor="lightgreen"];
    "UCHAR_MAX\n(unlzh.c:363)" [fillcolor="lightgreen"];
    "MAX_SUFFIX\n(gzip.c:1199)" [fillcolor="lightgreen"];
    "SEPARATOR\n(util.c:432)" [fillcolor="lightgreen"];
    "WMASK\n(deflate.c:819)" [fillcolor="lightgreen"];
    "REPZ_3_10\n(trees.c:730)" [fillcolor="lightgreen"];
    "HEAP_SIZE\n(trees.c:632)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:809)" [fillcolor="lightgreen"];
    "__S_IREAD\n(gzip.c:1114)" [fillcolor="lightgreen"];
    "Z_SUFFIX\n(gzip.c:455)" [fillcolor="lightgreen"];
    "fill_inbuf\n(util.c:210)" [fillcolor="lightblue"];
    "fprintf\n(gzip.c:932)" [fillcolor="lightgreen"];
    "Len\n(trees.c:756)" [fillcolor="lightgreen"];
    "S_IRWXO\n(gzip.c:1938)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1545)" [fillcolor="lightgreen"];
    "INT_STRLEN_BOUND\n(gzip.c:1735)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:595)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:2059)" [fillcolor="lightgreen"];
    "__S_ISTYPE\n(gzip.c:714)" [fillcolor="lightgreen"];
    "get_method\n(gzip.c:1488)" [fillcolor="lightblue"];
    "GETBYTE\n(inflate.c:557)" [fillcolor="lightgreen"];
    "__GETOPT_XCONCAT\n(gzip.c:620)" [fillcolor="lightgreen"];
    "__GETOPT_ID\n(gzip.c:510)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:331)" [fillcolor="lightgreen"];
    "O_NONBLOCK\n(util.c:261)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:1796)" [fillcolor="lightgreen"];
    "stderr\n(unzip.c:189)" [fillcolor="lightgreen"];
    "fprintf\n(util.c:513)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:630)" [fillcolor="lightgreen"];
    "NULL\n(inflate.c:783)" [fillcolor="lightgreen"];
    "ERROR\n(unzip.c:191)" [fillcolor="lightgreen"];
    "Buf_size\n(bits.c:141)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:827)" [fillcolor="lightgreen"];
    "WSIZE\n(unlzh.c:288)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:636)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:567)" [fillcolor="lightgreen"];
    "get_byte\n(gzip.c:1610)" [fillcolor="lightgreen"];
    "getopt_long\n(gzip.c:468)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:1548)" [fillcolor="lightgreen"];
    "SIG_BLOCK\n(gzip.c:2120)" [fillcolor="lightgreen"];
    "HAVE_WORKING_O_NOFOLLOW\n(gzip.c:1234)" [fillcolor="lightgreen"];
    "CLEAR\n(unlzw.c:201)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:572)" [fillcolor="lightgreen"];
    "END_BLOCK\n(trees.c:1064)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:834)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:924)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:919)" [fillcolor="lightgreen"];
    "NIL\n(deflate.c:676)" [fillcolor="lightgreen"];
    "UCHAR_MAX\n(unlzh.c:367)" [fillcolor="lightgreen"];
    "put_short\n(bits.c:198)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:1834)" [fillcolor="lightgreen"];
    "INT_MAX\n(util.c:278)" [fillcolor="lightgreen"];
    "STDIN_FILENO\n(gzip.c:1894)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:1206)" [fillcolor="lightgreen"];
    "BITBUFSIZ\n(unlzh.c:250)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:751)" [fillcolor="lightgreen"];
    "tab_prefix\n(unlzw.c:148)" [fillcolor="lightgreen"];
    "Len\n(trees.c:712)" [fillcolor="lightgreen"];
    "UPDATE_HASH\n(deflate.c:808)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:737)" [fillcolor="lightgreen"];
    "HASH_BITS\n(deflate.c:763)" [fillcolor="lightgreen"];
    "SEPARATOR\n(util.c:429)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:1039)" [fillcolor="lightgreen"];
    "OK\n(util.c:480)" [fillcolor="lightgreen"];
    "progerror\n(gzip.c:404)" [fillcolor="lightblue"];
    "get_byte\n(gzip.c:1467)" [fillcolor="lightgreen"];
    "memzero\n(deflate.c:605)" [fillcolor="lightgreen"];
    "ERROR\n(unlzw.c:135)" [fillcolor="lightgreen"];
    "inflate_dynamic\n(inflate.c:722)" [fillcolor="lightblue"];
    "LITERALS\n(trees.c:632)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:1961)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:635)" [fillcolor="lightgreen"];
    "TYPE_MAXIMUM\n(gzip.c:1557)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1893)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:834)" [fillcolor="lightgreen"];
    "tab_prefix\n(unlzw.c:202)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:810)" [fillcolor="lightgreen"];
    "send_code\n(trees.c:1043)" [fillcolor="lightgreen"];
    "SIGPIPE\n(gzip.c:648)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:513)" [fillcolor="lightgreen"];
    "NP\n(unlzh.c:281)" [fillcolor="lightgreen"];
    "UNKNOWN\n(trees.c:871)" [fillcolor="lightgreen"];
    "THRESHOLD\n(unlzh.c:359)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:919)" [fillcolor="lightgreen"];
    "MAX_DIST\n(deflate.c:771)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:1214)" [fillcolor="lightgreen"];
    "NULL\n(util.c:394)" [fillcolor="lightgreen"];
    "MIN\n(unpack.c:195)" [fillcolor="lightgreen"];
    "SLOW\n(deflate.c:343)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:1711)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:1039)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1895)" [fillcolor="lightgreen"];
    "seekable\n(trees.c:906)" [fillcolor="lightgreen"];
    "stdout\n(gzip.c:2105)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:650)" [fillcolor="lightgreen"];
    "MAXMATCH\n(unlzh.c:359)" [fillcolor="lightgreen"];
    "THRESHOLD\n(unlzh.c:266)" [fillcolor="lightgreen"];
    "Len\n(trees.c:559)" [fillcolor="lightgreen"];
    "__GETOPT_ID\n(gzip.c:620)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:823)" [fillcolor="lightgreen"];
    "HASH_BITS\n(deflate.c:713)" [fillcolor="lightgreen"];
    "NC\n(unlzh.c:285)" [fillcolor="lightgreen"];
    "MAX_BITS\n(trees.c:391)" [fillcolor="lightgreen"];
    "__GETOPT_CONCAT\n(gzip.c:501)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:792)" [fillcolor="lightgreen"];
    "NIL\n(deflate.c:592)" [fillcolor="lightgreen"];
    "NC\n(unlzh.c:243)" [fillcolor="lightgreen"];
    "BMAX\n(inflate.c:303)" [fillcolor="lightgreen"];
    "Code\n(trees.c:1054)" [fillcolor="lightgreen"];
    "input_eof\n(gzip.c:686)" [fillcolor="lightblue"];
    "__GETOPT_CONCAT\n(gzip.c:565)" [fillcolor="lightgreen"];
    "do_chown\n(gzip.c:1921)" [fillcolor="lightblue"];
    "open\n(gzip.c:855)" [fillcolor="lightgreen"];
    "fprintf\n(zip.c:95)" [fillcolor="lightgreen"];
    "UCHAR_MAX\n(unlzh.c:243)" [fillcolor="lightgreen"];
    "BMAX\n(inflate.c:289)" [fillcolor="lightgreen"];
    "BITBUFSIZ\n(unlzh.c:120)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:1353)" [fillcolor="lightgreen"];
    "__tobody\n(util.c:339)" [fillcolor="lightgreen"];
    "THRESHOLD\n(unlzh.c:291)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:914)" [fillcolor="lightgreen"];
    "MAXMATCH\n(unlzh.c:243)" [fillcolor="lightgreen"];
    "MIN_LOOKAHEAD\n(deflate.c:676)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1893)" [fillcolor="lightgreen"];
    "get_byte\n(gzip.c:1589)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:639)" [fillcolor="lightgreen"];
    "LG\n(unzip.c:195)" [fillcolor="lightgreen"];
    "LITERALS\n(unpack.c:140)" [fillcolor="lightgreen"];
    "WARN\n(gzip.c:1711)" [fillcolor="lightgreen"];
    "LG\n(unzip.c:72)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:1397)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1711)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1711)" [fillcolor="lightgreen"];
    "put_short\n(zip.c:101)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:606)" [fillcolor="lightgreen"];
    "EOF\n(util.c:228)" [fillcolor="lightgreen"];
    "COMMENT\n(gzip.c:1629)" [fillcolor="lightgreen"];
    "O_NONBLOCK\n(util.c:259)" [fillcolor="lightgreen"];
    "UCHAR_MAX\n(unlzh.c:359)" [fillcolor="lightgreen"];
    "__GETOPT_XCONCAT\n(gzip.c:479)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:812)" [fillcolor="lightgreen"];
    "false\n(gzip.c:2140)" [fillcolor="lightgreen"];
    "LZH_MAGIC\n(gzip.c:1673)" [fillcolor="lightgreen"];
    "DEFLATED\n(unzip.c:130)" [fillcolor="lightgreen"];
    "clear_bufs\n(util.c:200)" [fillcolor="lightblue"];
    "write_buf\n(util.c:315)" [fillcolor="lightblue"];
    "BL_CODES\n(trees.c:423)" [fillcolor="lightgreen"];
    "put_long\n(zip.c:68)" [fillcolor="lightgreen"];
    "__GETOPT_CONCAT\n(gzip.c:474)" [fillcolor="lightgreen"];
    "LENGTH_CODES\n(trees.c:421)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:814)" [fillcolor="lightgreen"];
    "CHAR_BIT\n(unlzh.c:127)" [fillcolor="lightgreen"];
    "ASCII\n(trees.c:1081)" [fillcolor="lightgreen"];
    "H_SHIFT\n(deflate.c:701)" [fillcolor="lightgreen"];
    "FIRST\n(unlzw.c:146)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:569)" [fillcolor="lightgreen"];
    "SH\n(unzip.c:167)" [fillcolor="lightgreen"];
    "HASH_MASK\n(deflate.c:701)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:636)" [fillcolor="lightgreen"];
    "c_len\n(unlzh.c:293)" [fillcolor="lightgreen"];
    "WARN\n(util.c:480)" [fillcolor="lightgreen"];
    "max_insert_length\n(deflate.c:697)" [fillcolor="lightgreen"];
    "WSIZE\n(inflate.c:650)" [fillcolor="lightgreen"];
    "__GETOPT_XCONCAT\n(gzip.c:566)" [fillcolor="lightgreen"];
    "right\n(unlzh.c:186)" [fillcolor="lightgreen"];
    "UCHAR_MAX\n(unlzh.c:265)" [fillcolor="lightgreen"];
    "tolower\n(util.c:339)" [fillcolor="lightgreen"];
    "S_IRWXUGO\n(gzip.c:1938)" [fillcolor="lightgreen"];
    "pqremove\n(trees.c:666)" [fillcolor="lightgreen"];
    "LG\n(unzip.c:125)" [fillcolor="lightgreen"];
    "UPDATE_HASH\n(deflate.c:814)" [fillcolor="lightgreen"];
    "deflate_fast\n(deflate.c:660)" [fillcolor="lightblue"];
    "atdir_set\n(gzip.c:837)" [fillcolor="lightblue"];
    "decode\n(unlzh.c:336)" [fillcolor="lightblue"];
    "__GETOPT_CONCAT\n(gzip.c:479)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:627)" [fillcolor="lightgreen"];
    "stdout\n(gzip.c:1817)" [fillcolor="lightgreen"];
    "DICBIT\n(unlzh.c:354)" [fillcolor="lightgreen"];
    "stdout\n(gzip.c:672)" [fillcolor="lightgreen"];
    "GZIP_MAGIC\n(zip.c:50)" [fillcolor="lightgreen"];
    "MAX_MATCH\n(deflate.c:496)" [fillcolor="lightgreen"];
    "put_short\n(bits.c:175)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:425)" [fillcolor="lightgreen"];
    "prefix_len\n(unpack.c:196)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:527)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:815)" [fillcolor="lightgreen"];
    "__S_IREAD\n(gzip.c:1938)" [fillcolor="lightgreen"];
    "LITERALS\n(trees.c:1043)" [fillcolor="lightgreen"];
    "do_exit\n(gzip.c:2080)" [fillcolor="lightblue"];
    "errno\n(util.c:498)" [fillcolor="lightgreen"];
    "MAX_DIST\n(deflate.c:394)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:914)" [fillcolor="lightgreen"];
    "ORIG_NAME\n(zip.c:54)" [fillcolor="lightgreen"];
    "true\n(gzip.c:569)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:569)" [fillcolor="lightgreen"];
    "Code\n(trees.c:1064)" [fillcolor="lightgreen"];
    "MAXCODE\n(unlzw.c:206)" [fillcolor="lightgreen"];
    "__GETOPT_CONCAT\n(gzip.c:657)" [fillcolor="lightgreen"];
    "HEADER_CRC\n(gzip.c:1595)" [fillcolor="lightgreen"];
    "DEFLATED\n(zip.c:48)" [fillcolor="lightgreen"];
    "OK\n(unlzw.c:125)" [fillcolor="lightgreen"];
    "__GETOPT_ID\n(gzip.c:501)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:799)" [fillcolor="lightgreen"];
    "MAX_MATCH\n(deflate.c:497)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:605)" [fillcolor="lightgreen"];
    "HASH_MASK\n(deflate.c:808)" [fillcolor="lightgreen"];
    "fill_window\n(deflate.c:558)" [fillcolor="lightblue"];
    "get_input_size_and_time\n(gzip.c:704)" [fillcolor="lightblue"];
    "decode_p\n(unlzh.c:297)" [fillcolor="lightblue"];
    "INSERT_STRING\n(deflate.c:808)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:819)" [fillcolor="lightgreen"];
    "WARN\n(unlzw.c:125)" [fillcolor="lightgreen"];
    "RSYNC_ROLL\n(deflate.c:693)" [fillcolor="lightgreen"];
    "fprintf\n(util.c:491)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(zip.c:77)" [fillcolor="lightgreen"];
    "WMASK\n(deflate.c:812)" [fillcolor="lightgreen"];
    "MAX_METHODS\n(gzip.c:1728)" [fillcolor="lightgreen"];
    "WARN\n(gzip.c:907)" [fillcolor="lightgreen"];
    "SMALLEST\n(trees.c:688)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:660)" [fillcolor="lightgreen"];
    "INSERT_STRING\n(deflate.c:763)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:1541)" [fillcolor="lightgreen"];
    "Len\n(trees.c:600)" [fillcolor="lightgreen"];
    "memzero\n(unlzw.c:148)" [fillcolor="lightgreen"];
    "H_SHIFT\n(deflate.c:367)" [fillcolor="lightgreen"];
    "stderr\n(zip.c:95)" [fillcolor="lightgreen"];
    "NULL\n(inflate.c:426)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1538)" [fillcolor="lightgreen"];
    "LZHED\n(gzip.c:1675)" [fillcolor="lightgreen"];
    "__GETOPT_CONCAT\n(gzip.c:464)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:1711)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:913)" [fillcolor="lightgreen"];
    "discard_input_bytes\n(gzip.c:1461)" [fillcolor="lightblue"];
    "errno\n(gzip.c:1309)" [fillcolor="lightgreen"];
    "add_envopt\n(util.c:412)" [fillcolor="lightblue"];
    "NULL\n(inflate.c:324)" [fillcolor="lightgreen"];
    "ct_init\n(trees.c:341)" [fillcolor="lightblue"];
    "INIT_BITS\n(unlzw.c:206)" [fillcolor="lightgreen"];
    "NULL\n(deflate.c:730)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:805)" [fillcolor="lightgreen"];
    "SIG_DFL\n(gzip.c:2153)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:1901)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1065)" [fillcolor="lightgreen"];
    "decode_start\n(unlzh.c:327)" [fillcolor="lightblue"];
    "wp\n(inflate.c:557)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:919)" [fillcolor="lightgreen"];
    "DICBIT\n(unlzh.c:371)" [fillcolor="lightgreen"];
    "CRPFLG\n(unzip.c:88)" [fillcolor="lightgreen"];
    "LIT_BUFSIZE\n(trees.c:1011)" [fillcolor="lightgreen"];
    "__S_IEXEC\n(gzip.c:1938)" [fillcolor="lightgreen"];
    "OK\n(zip.c:106)" [fillcolor="lightgreen"];
    "strequ\n(gzip.c:1853)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:907)" [fillcolor="lightgreen"];
    "put_short\n(bits.c:199)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:725)" [fillcolor="lightgreen"];
    "LG\n(unzip.c:179)" [fillcolor="lightgreen"];
    "EBADF\n(gzip.c:679)" [fillcolor="lightgreen"];
    "DECLARE\n(gzip.c:136)" [fillcolor="lightgreen"];
    "ERROR\n(unzip.c:83)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:1042)" [fillcolor="lightgreen"];
    "read_byte\n(unpack.c:81)" [fillcolor="lightblue"];
    "OK\n(unlzh.c:397)" [fillcolor="lightgreen"];
    "INT_MAX\n(util.c:277)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:756)" [fillcolor="lightgreen"];
    "LOCHDR\n(unzip.c:70)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:2012)" [fillcolor="lightgreen"];
    "SMALLEST\n(trees.c:667)" [fillcolor="lightgreen"];
    "optind\n(gzip.c:656)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:1756)" [fillcolor="lightgreen"];
    "RSYNC_ROLL\n(deflate.c:862)" [fillcolor="lightgreen"];
    "ERROR\n(unlzw.c:136)" [fillcolor="lightgreen"];
    "Len\n(trees.c:519)" [fillcolor="lightgreen"];
    "H_SHIFT\n(deflate.c:812)" [fillcolor="lightgreen"];
    "DICBIT\n(unlzh.c:368)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:1694)" [fillcolor="lightgreen"];
    "S_ISREG\n(gzip.c:897)" [fillcolor="lightgreen"];
    "c_len\n(unlzh.c:243)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:517)" [fillcolor="lightgreen"];
    "DEFLATED\n(gzip.c:1527)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1955)" [fillcolor="lightgreen"];
    "L_CODES\n(trees.c:401)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:434)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:1079)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:924)" [fillcolor="lightgreen"];
    "PKZIP_MAGIC\n(gzip.c:1653)" [fillcolor="lightgreen"];
    "longest_match\n(deflate.c:387)" [fillcolor="lightblue"];
    "__S_IFMT\n(gzip.c:897)" [fillcolor="lightgreen"];
    "MAXCODE\n(unlzw.c:139)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:530)" [fillcolor="lightgreen"];
    "tab_suffixof\n(unlzw.c:241)" [fillcolor="lightgreen"];
    "O_SEARCH\n(gzip.c:855)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:730)" [fillcolor="lightgreen"];
    "WARN\n(gzip.c:1148)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:743)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:921)" [fillcolor="lightgreen"];
    "TYPE_SIGNED\n(gzip.c:1567)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:1804)" [fillcolor="lightgreen"];
    "shorten_name\n(gzip.c:1830)" [fillcolor="lightblue"];
    "O_NONBLOCK\n(gzip.c:1294)" [fillcolor="lightgreen"];
    "false\n(gzip.c:1177)" [fillcolor="lightgreen"];
    "HASH_BITS\n(deflate.c:810)" [fillcolor="lightgreen"];
    "tab_suffix\n(unlzw.c:151)" [fillcolor="lightgreen"];
    "__GETOPT_ID\n(gzip.c:565)" [fillcolor="lightgreen"];
    "put_byte\n(bits.c:175)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:1794)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:1287)" [fillcolor="lightgreen"];
    "put_byte\n(zip.c:101)" [fillcolor="lightgreen"];
    "INBUF_EXTRA\n(unlzw.c:168)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:1347)" [fillcolor="lightgreen"];
    "get_byte\n(gzip.c:1510)" [fillcolor="lightgreen"];
    "OS_CODE\n(zip.c:78)" [fillcolor="lightgreen"];
    "MIN_LOOKAHEAD\n(deflate.c:772)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:1818)" [fillcolor="lightgreen"];
    "__O_NOFOLLOW\n(gzip.c:1235)" [fillcolor="lightgreen"];
    "prefix_len\n(unpack.c:240)" [fillcolor="lightgreen"];
    "WMASK\n(deflate.c:517)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:1743)" [fillcolor="lightgreen"];
    "CHAR_BIT\n(gzip.c:1567)" [fillcolor="lightgreen"];
    "UPDATE_HASH\n(deflate.c:713)" [fillcolor="lightgreen"];
    "PACKED\n(gzip.c:1666)" [fillcolor="lightgreen"];
    "put_byte\n(zip.c:77)" [fillcolor="lightgreen"];
    "Len\n(trees.c:776)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:991)" [fillcolor="lightgreen"];
    "UPDATE_HASH\n(deflate.c:671)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:763)" [fillcolor="lightgreen"];
    "errno\n(util.c:488)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:761)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:2088)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:1762)" [fillcolor="lightgreen"];
    "CHAR_BIT\n(gzip.c:1557)" [fillcolor="lightgreen"];
    "optind\n(gzip.c:474)" [fillcolor="lightgreen"];
    "NP\n(unlzh.c:302)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(bits.c:208)" [fillcolor="lightgreen"];
    "get_byte\n(gzip.c:1553)" [fillcolor="lightgreen"];
    "O_NOCTTY\n(gzip.c:1294)" [fillcolor="lightgreen"];
    "BLOCK_MODE\n(unlzw.c:123)" [fillcolor="lightgreen"];
    "WARN\n(unzip.c:197)" [fillcolor="lightgreen"];
    "SH\n(unzip.c:125)" [fillcolor="lightgreen"];
    "slide\n(inflate.c:542)" [fillcolor="lightgreen"];
    "BITBUFSIZ\n(unlzh.c:286)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:899)" [fillcolor="lightgreen"];
    "de_stack\n(unlzw.c:250)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:812)" [fillcolor="lightgreen"];
    "fillbuf\n(unlzh.c:102)" [fillcolor="lightblue"];
    "true\n(gzip.c:1186)" [fillcolor="lightgreen"];
    "INBUFSIZ\n(util.c:225)" [fillcolor="lightgreen"];
    "compress_block\n(trees.c:1021)" [fillcolor="lightblue"];
    "unlinkat\n(gzip.c:1033)" [fillcolor="lightgreen"];
    "NP\n(unlzh.c:308)" [fillcolor="lightgreen"];
    "LOCEXT\n(unzip.c:70)" [fillcolor="lightgreen"];
    "stderr\n(util.c:491)" [fillcolor="lightgreen"];
    "HASH_SIZE\n(deflate.c:671)" [fillcolor="lightgreen"];
    "O_DIRECTORY\n(gzip.c:855)" [fillcolor="lightgreen"];
    "BITBUFSIZ\n(unlzh.c:301)" [fillcolor="lightgreen"];
    "head\n(deflate.c:588)" [fillcolor="lightgreen"];
    "EOF\n(gzip.c:1681)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(unlzw.c:250)" [fillcolor="lightgreen"];
    "INBUFSIZ\n(util.c:218)" [fillcolor="lightgreen"];
    "O_NOFOLLOW\n(gzip.c:1235)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:607)" [fillcolor="lightgreen"];
    "LOCSIZ\n(unzip.c:144)" [fillcolor="lightgreen"];
    "CHAR_BIT\n(unlzh.c:248)" [fillcolor="lightgreen"];
    "build_bl_tree\n(trees.c:799)" [fillcolor="lightblue"];
    "perror\n(util.c:489)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:808)" [fillcolor="lightgreen"];
    "WSIZE\n(inflate.c:579)" [fillcolor="lightgreen"];
    "send_tree\n(trees.c:749)" [fillcolor="lightblue"];
    "ERROR\n(unzip.c:205)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:983)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:991)" [fillcolor="lightgreen"];
    "S_ISVTX\n(gzip.c:922)" [fillcolor="lightgreen"];
    "__S_ISTYPE\n(gzip.c:881)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:1705)" [fillcolor="lightgreen"];
    "MAX_DIST\n(deflate.c:572)" [fillcolor="lightgreen"];
    "true\n(gzip.c:543)" [fillcolor="lightgreen"];
    "head\n(unlzh.c:183)" [fillcolor="lightgreen"];
    "WSIZE\n(inflate.c:544)" [fillcolor="lightgreen"];
    "H_SHIFT\n(deflate.c:808)" [fillcolor="lightgreen"];
    "HASH_BITS\n(deflate.c:808)" [fillcolor="lightgreen"];
    "fflush\n(gzip.c:672)" [fillcolor="lightgreen"];
    "EEXIST\n(gzip.c:1130)" [fillcolor="lightgreen"];
    "head\n(deflate.c:324)" [fillcolor="lightgreen"];
    "HASH_MASK\n(deflate.c:367)" [fillcolor="lightgreen"];
    "try_byte\n(unlzh.c:108)" [fillcolor="lightgreen"];
    "O_BINARY\n(gzip.c:1295)" [fillcolor="lightgreen"];
    "MAX_BITS\n(trees.c:581)" [fillcolor="lightgreen"];
    "put_long\n(zip.c:102)" [fillcolor="lightgreen"];
    "ORIG_NAME\n(gzip.c:1601)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:476)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:799)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:574)" [fillcolor="lightgreen"];
    "LOCSIZ\n(unzip.c:146)" [fillcolor="lightgreen"];
    "Len\n(trees.c:782)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:1264)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:383)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:759)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(bits.c:198)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:825)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:584)" [fillcolor="lightgreen"];
    "tab_suffixof\n(unlzw.c:276)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:899)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:796)" [fillcolor="lightgreen"];
    "__isctype\n(util.c:339)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:407)" [fillcolor="lightgreen"];
    "Len\n(trees.c:769)" [fillcolor="lightgreen"];
    "HASH_MASK\n(deflate.c:814)" [fillcolor="lightgreen"];
    "huft_build\n(inflate.c:273)" [fillcolor="lightblue"];
    "__GETOPT_ID\n(gzip.c:464)" [fillcolor="lightgreen"];
    "fprint_off\n(util.c:520)" [fillcolor="lightblue"];
    "LENGTH_CODES\n(trees.c:401)" [fillcolor="lightgreen"];
    "strequ\n(gzip.c:1327)" [fillcolor="lightgreen"];
    "Len\n(trees.c:846)" [fillcolor="lightgreen"];
    "WSIZE\n(unlzh.c:186)" [fillcolor="lightgreen"];
    "finish_out\n(gzip.c:2103)" [fillcolor="lightblue"];
    "STDIN_FILENO\n(gzip.c:662)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(zip.c:68)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:422)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:686)" [fillcolor="lightgreen"];
    "__S_ISVTX\n(gzip.c:922)" [fillcolor="lightgreen"];
    "NULL\n(unzip.c:122)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1592)" [fillcolor="lightgreen"];
    "ELOOP\n(gzip.c:1243)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:423)" [fillcolor="lightgreen"];
    "__S_IWRITE\n(gzip.c:1114)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(zip.c:101)" [fillcolor="lightgreen"];
    "EOF\n(deflate.c:567)" [fillcolor="lightgreen"];
    "STDIN_FILENO\n(gzip.c:729)" [fillcolor="lightgreen"];
    "lstat\n(gzip.c:1239)" [fillcolor="lightgreen"];
    "stdout\n(gzip.c:1758)" [fillcolor="lightgreen"];
    "tolow\n(util.c:339)" [fillcolor="lightgreen"];
    "HASH_SIZE\n(deflate.c:819)" [fillcolor="lightgreen"];
    "__GETOPT_XCONCAT\n(gzip.c:501)" [fillcolor="lightgreen"];
    "END_BLOCK\n(trees.c:425)" [fillcolor="lightgreen"];
    "LITERALS\n(trees.c:401)" [fillcolor="lightgreen"];
    "optarg\n(gzip.c:510)" [fillcolor="lightgreen"];
    "__GETOPT_XCONCAT\n(gzip.c:468)" [fillcolor="lightgreen"];
    "LOCLEN\n(unzip.c:126)" [fillcolor="lightgreen"];
    "tab_prefix\n(gzip.h:123)" [fillcolor="lightgreen"];
    "FLUSH_BLOCK\n(deflate.c:846)" [fillcolor="lightgreen"];
    "ERROR\n(lzw.c:16)" [fillcolor="lightgreen"];
    "INSERT_STRING\n(deflate.c:810)" [fillcolor="lightgreen"];
    "__O_DIRECTORY\n(gzip.c:855)" [fillcolor="lightgreen"];
    "CLEAR\n(unlzw.c:146)" [fillcolor="lightgreen"];
    "WMASK\n(deflate.c:701)" [fillcolor="lightgreen"];
    "INIT_BITS\n(unlzw.c:139)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1592)" [fillcolor="lightgreen"];
    "DIST_BUFSIZE\n(unlzw.c:211)" [fillcolor="lightgreen"];
    "INT_MAX\n(util.c:248)" [fillcolor="lightgreen"];
    "isupper\n(util.c:339)" [fillcolor="lightgreen"];
    "NT\n(unlzh.c:255)" [fillcolor="lightgreen"];
    "WMASK\n(deflate.c:671)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:580)" [fillcolor="lightgreen"];
    "MAX_PATH_LEN\n(gzip.c:2005)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:523)" [fillcolor="lightgreen"];
    "stderr\n(util.c:499)" [fillcolor="lightgreen"];
    "stderr\n(unzip.c:89)" [fillcolor="lightgreen"];
    "errno\n(util.c:230)" [fillcolor="lightgreen"];
    "make_table\n(unlzh.c:134)" [fillcolor="lightblue"];
    "LZW_MAGIC\n(gzip.c:1668)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(zip.c:78)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1415)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:393)" [fillcolor="lightgreen"];
    "TOO_FAR\n(deflate.c:782)" [fillcolor="lightgreen"];
    "BL_CODES\n(trees.c:817)" [fillcolor="lightgreen"];
    "fprintf\n(unzip.c:184)" [fillcolor="lightgreen"];
    "THRESHOLD\n(unlzh.c:285)" [fillcolor="lightgreen"];
    "flush_output\n(inflate.c:546)" [fillcolor="lightgreen"];
    "Len\n(trees.c:394)" [fillcolor="lightgreen"];
    "LG\n(unzip.c:142)" [fillcolor="lightgreen"];
    "Len\n(trees.c:721)" [fillcolor="lightgreen"];
    "Len\n(trees.c:639)" [fillcolor="lightgreen"];
    "INT_BITS_STRLEN_BOUND\n(gzip.c:1735)" [fillcolor="lightgreen"];
    "DICSIZ\n(unlzh.c:368)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1371)" [fillcolor="lightgreen"];
    "RSYNC_WIN\n(deflate.c:618)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:823)" [fillcolor="lightgreen"];
    "true\n(gzip.c:776)" [fillcolor="lightgreen"];
    "lzw\n(lzw.c:13)" [fillcolor="lightblue"];
    "left\n(unlzh.c:306)" [fillcolor="lightgreen"];
    "memzero\n(unlzw.c:202)" [fillcolor="lightgreen"];
    "MAX_BITS\n(trees.c:589)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(zip.c:51)" [fillcolor="lightgreen"];
    "UCHAR_MAX\n(unlzh.c:285)" [fillcolor="lightgreen"];
    "LG\n(unzip.c:167)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:676)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:631)" [fillcolor="lightgreen"];
    "SH\n(unzip.c:142)" [fillcolor="lightgreen"];
    "get_suffix\n(gzip.c:1165)" [fillcolor="lightblue"];
    "stderr\n(gzip.c:1961)" [fillcolor="lightgreen"];
    "errno\n(util.c:485)" [fillcolor="lightgreen"];
    "RSYNC_WIN\n(deflate.c:634)" [fillcolor="lightgreen"];
    "stderr\n(unzip.c:146)" [fillcolor="lightgreen"];
    "INBUFSIZ\n(unlzw.c:169)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:813)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:572)" [fillcolor="lightgreen"];
    "errno\n(util.c:254)" [fillcolor="lightgreen"];
    "warning\n(util.c:478)" [fillcolor="lightblue"];
    "LOCLEN\n(unzip.c:142)" [fillcolor="lightgreen"];
    "DEFLATED\n(gzip.c:1769)" [fillcolor="lightgreen"];
    "S_ISDIR\n(gzip.c:881)" [fillcolor="lightgreen"];
    "optind\n(gzip.c:657)" [fillcolor="lightgreen"];
    "RSYNC_WIN\n(deflate.c:625)" [fillcolor="lightgreen"];
    "WSIZE\n(unlzh.c:252)" [fillcolor="lightgreen"];
    "SH\n(gzip.c:1783)" [fillcolor="lightgreen"];
    "MIN_LOOKAHEAD\n(deflate.c:394)" [fillcolor="lightgreen"];
    "BITBUFSIZ\n(unlzh.c:303)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1148)" [fillcolor="lightgreen"];
    "head\n(deflate.c:808)" [fillcolor="lightgreen"];
    "LOCCRC\n(unzip.c:125)" [fillcolor="lightgreen"];
    "MAX_PATH_LEN\n(gzip.c:2031)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:582)" [fillcolor="lightgreen"];
    "Len\n(trees.c:773)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:1909)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:823)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:728)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1900)" [fillcolor="lightgreen"];
    "volatile_strcpy\n(gzip.c:1072)" [fillcolor="lightblue"];
    "unlink\n(util.c:363)" [fillcolor="lightgreen"];
    "perror\n(gzip.c:1988)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:909)" [fillcolor="lightgreen"];
    "RSYNC_ROLL\n(deflate.c:803)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:578)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:513)" [fillcolor="lightgreen"];
    "REPZ_3_10\n(trees.c:779)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:2107)" [fillcolor="lightgreen"];
    "left\n(unlzh.c:187)" [fillcolor="lightgreen"];
    "put_byte\n(bits.c:143)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:1901)" [fillcolor="lightgreen"];
    "MAXCODE\n(unlzw.c:187)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1148)" [fillcolor="lightgreen"];
    "EAGAIN\n(util.c:260)" [fillcolor="lightgreen"];
    "WARN\n(gzip.c:1453)" [fillcolor="lightgreen"];
    "scan_tree\n(trees.c:705)" [fillcolor="lightblue"];
    "c_table\n(unlzh.c:284)" [fillcolor="lightgreen"];
    "GZIP_MAGIC\n(zip.c:49)" [fillcolor="lightgreen"];
    "BITBUFSIZ\n(unlzh.c:218)" [fillcolor="lightgreen"];
    "stderr\n(unzip.c:80)" [fillcolor="lightgreen"];
    "UCHAR_MAX\n(unlzh.c:277)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:648)" [fillcolor="lightgreen"];
    "__GETOPT_XCONCAT\n(gzip.c:511)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:648)" [fillcolor="lightgreen"];
    "DICBIT\n(unlzh.c:392)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:773)" [fillcolor="lightgreen"];
    "O_RDONLY\n(gzip.c:1294)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:732)" [fillcolor="lightgreen"];
    "O_CREAT\n(gzip.c:1090)" [fillcolor="lightgreen"];
    "getbits\n(unlzh.c:115)" [fillcolor="lightblue"];
    "S_IRWXG\n(gzip.c:1938)" [fillcolor="lightgreen"];
    "UPDATE_HASH\n(deflate.c:701)" [fillcolor="lightgreen"];
    "copy_block\n(bits.c:190)" [fillcolor="lightblue"];
    "HASH_SIZE\n(deflate.c:810)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:673)" [fillcolor="lightgreen"];
    "optind\n(gzip.c:479)" [fillcolor="lightgreen"];
    "ERROR\n(unzip.c:76)" [fillcolor="lightgreen"];
    "send_code\n(trees.c:782)" [fillcolor="lightgreen"];
    "perror\n(gzip.c:1965)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:813)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:539)" [fillcolor="lightgreen"];
    "perror\n(util.c:501)" [fillcolor="lightgreen"];
    "UPDATE_HASH\n(deflate.c:810)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:587)" [fillcolor="lightgreen"];
    "do_list\n(gzip.c:1722)" [fillcolor="lightblue"];
    "Len\n(trees.c:652)" [fillcolor="lightgreen"];
    "__GETOPT_XCONCAT\n(gzip.c:657)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:932)" [fillcolor="lightgreen"];
    "NULL\n(deflate.c:858)" [fillcolor="lightgreen"];
    "tab_prefix\n(unlzw.c:242)" [fillcolor="lightgreen"];
    "look_bits\n(unpack.c:239)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:1961)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1640)" [fillcolor="lightgreen"];
    "strequ\n(gzip.c:1352)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:772)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:983)" [fillcolor="lightgreen"];
    "H_SHIFT\n(deflate.c:819)" [fillcolor="lightgreen"];
    "__GETOPT_CONCAT\n(gzip.c:656)" [fillcolor="lightgreen"];
    "BITS\n(unlzw.c:131)" [fillcolor="lightgreen"];
    "AT_FDCWD\n(gzip.c:1093)" [fillcolor="lightgreen"];
    "INBUFSIZ\n(util.c:126)" [fillcolor="lightgreen"];
    "try_byte\n(gzip.c:1501)" [fillcolor="lightgreen"];
    "LITERALS\n(trees.c:1080)" [fillcolor="lightgreen"];
    "Len\n(trees.c:513)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:975)" [fillcolor="lightgreen"];
    "Len\n(trees.c:396)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:873)" [fillcolor="lightgreen"];
    "BITBUFSIZ\n(unlzh.c:248)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:1964)" [fillcolor="lightgreen"];
    "SIG_SETMASK\n(gzip.c:2131)" [fillcolor="lightgreen"];
    "WSIZE\n(inflate.c:593)" [fillcolor="lightgreen"];
    "OK\n(unpack.c:268)" [fillcolor="lightgreen"];
    "sa_handler\n(gzip.c:2060)" [fillcolor="lightgreen"];
    "open_input_file\n(gzip.c:1281)" [fillcolor="lightblue"];
    "DUMPBITS\n(inflate.c:642)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:1115)" [fillcolor="lightgreen"];
    "smaller\n(trees.c:471)" [fillcolor="lightgreen"];
    "GZIP_MAGIC\n(gzip.c:1523)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:606)" [fillcolor="lightgreen"];
    "DECLARE\n(gzip.h:112)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:814)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:530)" [fillcolor="lightgreen"];
    "stderr\n(util.c:467)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(unlzw.c:252)" [fillcolor="lightgreen"];
    "WARN\n(gzip.c:1564)" [fillcolor="lightgreen"];
    "head\n(deflate.c:814)" [fillcolor="lightgreen"];
    "head\n(unlzh.c:186)" [fillcolor="lightgreen"];
    "S_IRWXU\n(gzip.c:1938)" [fillcolor="lightgreen"];
    "MAX_DIST\n(deflate.c:676)" [fillcolor="lightgreen"];
    "pqdownheap\n(trees.c:460)" [fillcolor="lightblue"];
    "O_WRONLY\n(gzip.c:1090)" [fillcolor="lightgreen"];
    "STORED_BLOCK\n(trees.c:928)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:537)" [fillcolor="lightgreen"];
    "inflate\n(inflate.c:945)" [fillcolor="lightblue"];
    "LITERALS\n(trees.c:515)" [fillcolor="lightgreen"];
    "SEPARATOR\n(util.c:452)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:801)" [fillcolor="lightgreen"];
    "RESERVED\n(gzip.c:1544)" [fillcolor="lightgreen"];
    "NC\n(unlzh.c:266)" [fillcolor="lightgreen"];
    "MIN_LOOKAHEAD\n(deflate.c:873)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:1148)" [fillcolor="lightgreen"];
    "SH\n(unzip.c:178)" [fillcolor="lightgreen"];
    "unlzh\n(unlzh.c:382)" [fillcolor="lightblue"];
    "NT\n(unlzh.c:279)" [fillcolor="lightgreen"];
    "SIG_IGN\n(gzip.c:2060)" [fillcolor="lightgreen"];
    "LOCFIL\n(unzip.c:70)" [fillcolor="lightgreen"];
    "STDOUT_FILENO\n(gzip.c:977)" [fillcolor="lightgreen"];
    "MAX_MATCH\n(deflate.c:772)" [fillcolor="lightgreen"];
    "BINARY\n(trees.c:1081)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:713)" [fillcolor="lightgreen"];
    "inflate_fixed\n(inflate.c:672)" [fillcolor="lightblue"];
    "S_IWUSR\n(gzip.c:1114)" [fillcolor="lightgreen"];
    "abort_gzip\n(gzip.c:2138)" [fillcolor="lightblue"];
    "MAX_MATCH\n(deflate.c:364)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1985)" [fillcolor="lightgreen"];
    "left\n(unlzh.c:253)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:980)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:1141)" [fillcolor="lightgreen"];
    "d_code\n(trees.c:1051)" [fillcolor="lightgreen"];
    "fprintf\n(util.c:467)" [fillcolor="lightgreen"];
    "HASH_MASK\n(deflate.c:810)" [fillcolor="lightgreen"];
    "THRESHOLD\n(unlzh.c:243)" [fillcolor="lightgreen"];
    "open_and_stat\n(gzip.c:1225)" [fillcolor="lightblue"];
    "optind\n(gzip.c:464)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:401)" [fillcolor="lightgreen"];
    "EXTERN\n(gzip.h:125)" [fillcolor="lightgreen"];
    "WARN\n(gzip.c:1705)" [fillcolor="lightgreen"];
    "try_byte\n(gzip.c:1700)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:1397)" [fillcolor="lightgreen"];
    "__S_IWRITE\n(gzip.c:1938)" [fillcolor="lightgreen"];
    "MAX_MATCH\n(deflate.c:676)" [fillcolor="lightgreen"];
    "WARNING\n(unzip.c:197)" [fillcolor="lightgreen"];
    "stderr\n(unzip.c:197)" [fillcolor="lightgreen"];
    "get_byte\n(gzip.c:1507)" [fillcolor="lightgreen"];
    "NO_FILE\n(bits.c:119)" [fillcolor="lightgreen"];
    "L_CODES\n(trees.c:515)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(zip.c:49)" [fillcolor="lightgreen"];
    "STDOUT_FILENO\n(gzip.c:677)" [fillcolor="lightgreen"];
    "THRESHOLD\n(unlzh.c:367)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1538)" [fillcolor="lightgreen"];
    "getopt_long\n(gzip.c:501)" [fillcolor="lightgreen"];
    "HASH_SIZE\n(deflate.c:763)" [fillcolor="lightgreen"];
    "MIN_LOOKAHEAD\n(deflate.c:364)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:1034)" [fillcolor="lightgreen"];
    "INBUFSIZ\n(gzip.c:693)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1955)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:604)" [fillcolor="lightgreen"];
    "S_ISGID\n(gzip.c:912)" [fillcolor="lightgreen"];
    "WMASK\n(deflate.c:814)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:1984)" [fillcolor="lightgreen"];
    "head\n(deflate.c:701)" [fillcolor="lightgreen"];
    "PART_SEP\n(gzip.c:1863)" [fillcolor="lightgreen"];
    "memzero\n(inflate.c:310)" [fillcolor="lightgreen"];
    "MAX_MATCH\n(deflate.c:677)" [fillcolor="lightgreen"];
    "bi_init\n(bits.c:106)" [fillcolor="lightblue"];
    "__S_ISTYPE\n(gzip.c:1241)" [fillcolor="lightgreen"];
    "xalloc_die\n(util.c:472)" [fillcolor="lightblue"];
    "gzip_base_name\n(util.c:349)" [fillcolor="lightblue"];
    "LENGTH_CODES\n(trees.c:515)" [fillcolor="lightgreen"];
    "get_byte\n(unpack.c:83)" [fillcolor="lightgreen"];
    "huft_free\n(inflate.c:487)" [fillcolor="lightblue"];
    "Code\n(trees.c:776)" [fillcolor="lightgreen"];
    "BITBUFSIZ\n(unlzh.c:127)" [fillcolor="lightgreen"];
    "unzip\n(unzip.c:110)" [fillcolor="lightblue"];
    "NEEDBITS\n(inflate.c:562)" [fillcolor="lightgreen"];
    "zip\n(zip.c:34)" [fillcolor="lightblue"];
    "clear_tab_prefixof\n(unlzw.c:202)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:701)" [fillcolor="lightgreen"];
    "TYPE_WIDTH\n(gzip.c:1735)" [fillcolor="lightgreen"];
    "NIL\n(deflate.c:770)" [fillcolor="lightgreen"];
    "put_byte\n(zip.c:49)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1453)" [fillcolor="lightgreen"];
    "RSYNC_WIN\n(deflate.c:626)" [fillcolor="lightgreen"];
    "__GETOPT_ID\n(gzip.c:479)" [fillcolor="lightgreen"];
    "HASH_MASK\n(deflate.c:812)" [fillcolor="lightgreen"];
    "_GL_SIGNED_TYPE_OR_EXPR\n(gzip.c:1735)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:486)" [fillcolor="lightgreen"];
    "atdir_eq\n(gzip.c:825)" [fillcolor="lightblue"];
    "right\n(unlzh.c:252)" [fillcolor="lightgreen"];
    "put_ubyte\n(unpack.c:258)" [fillcolor="lightgreen"];
    "ENOENT\n(gzip.c:1347)" [fillcolor="lightgreen"];
    "SH\n(unzip.c:70)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(zip.c:56)" [fillcolor="lightgreen"];
    "tab_suffixof\n(unlzw.c:151)" [fillcolor="lightgreen"];
    "head\n(deflate.c:812)" [fillcolor="lightgreen"];
    "EXTHDR\n(unzip.c:116)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:978)" [fillcolor="lightgreen"];
    "TYPE_WIDTH\n(gzip.c:1567)" [fillcolor="lightgreen"];
    "l_buf\n(trees.c:972)" [fillcolor="lightgreen"];
    "put_short\n(zip.c:102)" [fillcolor="lightgreen"];
    "fprintf\n(unzip.c:80)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(bits.c:199)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1067)" [fillcolor="lightgreen"];
    "REPZ_11_138\n(trees.c:782)" [fillcolor="lightgreen"];
    "LG\n(unzip.c:126)" [fillcolor="lightgreen"];
    "HASH_MASK\n(deflate.c:713)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:394)" [fillcolor="lightgreen"];
    "LG\n(unzip.c:178)" [fillcolor="lightgreen"];
    "true\n(gzip.c:2150)" [fillcolor="lightgreen"];
    "stdout\n(gzip.c:1755)" [fillcolor="lightgreen"];
    "OK\n(unzip.c:209)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1985)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:329)" [fillcolor="lightgreen"];
    "TBIT\n(unlzh.c:279)" [fillcolor="lightgreen"];
    "c_len\n(unlzh.c:263)" [fillcolor="lightgreen"];
    "DICSIZ\n(unlzh.c:354)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:1393)" [fillcolor="lightgreen"];
    "Code\n(trees.c:1043)" [fillcolor="lightgreen"];
    "OK\n(unzip.c:100)" [fillcolor="lightgreen"];
    "errno\n(util.c:260)" [fillcolor="lightgreen"];
    "Len\n(trees.c:1038)" [fillcolor="lightgreen"];
    "optind\n(gzip.c:494)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:1564)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:471)" [fillcolor="lightgreen"];
    "HEAP_SIZE\n(trees.c:515)" [fillcolor="lightgreen"];
    "SIG_BLOCK\n(gzip.c:1031)" [fillcolor="lightgreen"];
    "ERROR\n(unzip.c:186)" [fillcolor="lightgreen"];
    "head\n(unlzh.c:288)" [fillcolor="lightgreen"];
    "SH\n(unzip.c:166)" [fillcolor="lightgreen"];
    "ISSLASH\n(gzip.c:1209)" [fillcolor="lightgreen"];
    "SH\n(unzip.c:144)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:1870)" [fillcolor="lightgreen"];
    "Len\n(trees.c:765)" [fillcolor="lightgreen"];
    "__S_IFLNK\n(gzip.c:1241)" [fillcolor="lightgreen"];
    "optind\n(gzip.c:620)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:914)" [fillcolor="lightgreen"];
    "MAXMATCH\n(unlzh.c:266)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1065)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:932)" [fillcolor="lightgreen"];
    "right\n(unlzh.c:288)" [fillcolor="lightgreen"];
    "REPZ_11_138\n(trees.c:732)" [fillcolor="lightgreen"];
    "O_BINARY\n(gzip.c:1091)" [fillcolor="lightgreen"];
    "put_byte\n(bits.c:198)" [fillcolor="lightgreen"];
    "PKZIP_MAGIC\n(gzip.c:1654)" [fillcolor="lightgreen"];
    "S_ISLNK\n(gzip.c:1241)" [fillcolor="lightgreen"];
    "file_read\n(zip.c:115)" [fillcolor="lightblue"];
    "send_bits\n(bits.c:128)" [fillcolor="lightblue"];
    "NULL\n(gzip.c:1583)" [fillcolor="lightgreen"];
    "Len\n(trees.c:395)" [fillcolor="lightgreen"];
    "tab_suffix\n(unlzw.c:241)" [fillcolor="lightgreen"];
    "remove_output_file\n(gzip.c:2114)" [fillcolor="lightblue"];
    "NC\n(unlzh.c:265)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:834)" [fillcolor="lightgreen"];
    "STATIC_TREES\n(trees.c:939)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:632)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:759)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:1080)" [fillcolor="lightgreen"];
    "send_code\n(trees.c:1054)" [fillcolor="lightgreen"];
    "__GETOPT_CONCAT\n(gzip.c:494)" [fillcolor="lightgreen"];
    "get_byte\n(gzip.c:1637)" [fillcolor="lightgreen"];
    "bi_windup\n(bits.c:172)" [fillcolor="lightblue"];
    "stderr\n(util.c:486)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:1003)" [fillcolor="lightgreen"];
    "OK\n(unlzw.c:287)" [fillcolor="lightgreen"];
    "UCHAR_MAX\n(unlzh.c:266)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:400)" [fillcolor="lightgreen"];
    "NC\n(unlzh.c:277)" [fillcolor="lightgreen"];
    "optarg\n(gzip.c:511)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:677)" [fillcolor="lightgreen"];
    "strlwr\n(util.c:334)" [fillcolor="lightblue"];
    "get_byte\n(gzip.c:1572)" [fillcolor="lightgreen"];
    "SIG_SETMASK\n(gzip.c:1035)" [fillcolor="lightgreen"];
    "get_byte\n(gzip.c:1636)" [fillcolor="lightgreen"];
    "set_file_type\n(trees.c:1073)" [fillcolor="lightblue"];
    "OK\n(gzip.c:1148)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1062)" [fillcolor="lightgreen"];
    "slide\n(inflate.c:590)" [fillcolor="lightgreen"];
    "REP_3_6\n(trees.c:728)" [fillcolor="lightgreen"];
    "sa_handler\n(gzip.c:2064)" [fillcolor="lightgreen"];
    "help\n(gzip.c:335)" [fillcolor="lightblue"];
    "errno\n(gzip.c:1960)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:759)" [fillcolor="lightgreen"];
    "put_byte\n(bits.c:199)" [fillcolor="lightgreen"];
    "get_byte\n(gzip.c:1590)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(zip.c:50)" [fillcolor="lightgreen"];
    "__S_IFMT\n(gzip.c:1241)" [fillcolor="lightgreen"];
    "CHAR_BIT\n(unlzh.c:301)" [fillcolor="lightgreen"];
    "EOF\n(deflate.c:356)" [fillcolor="lightgreen"];
    "RSYNC_SUM_MATCH\n(deflate.c:635)" [fillcolor="lightgreen"];
    "__GETOPT_CONCAT\n(gzip.c:468)" [fillcolor="lightgreen"];
    "Code\n(trees.c:782)" [fillcolor="lightgreen"];
    "stderr\n(util.c:474)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:1453)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:1171)" [fillcolor="lightgreen"];
    "Len\n(trees.c:562)" [fillcolor="lightgreen"];
    "EAGAIN\n(util.c:254)" [fillcolor="lightgreen"];
    "EOF\n(deflate.c:602)" [fillcolor="lightgreen"];
    "optarg\n(gzip.c:565)" [fillcolor="lightgreen"];
    "perror\n(gzip.c:409)" [fillcolor="lightgreen"];
    "UPDATE_HASH\n(deflate.c:367)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:914)" [fillcolor="lightgreen"];
    "WSIZE\n(unlzh.c:183)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:1175)" [fillcolor="lightgreen"];
    "BITS\n(lzw.h:21)" [fillcolor="lightgreen"];
    "try_byte\n(gzip.c:1503)" [fillcolor="lightgreen"];
    "__S_ISTYPE\n(gzip.c:897)" [fillcolor="lightgreen"];
    "ISSLASH\n(gzip.c:2033)" [fillcolor="lightgreen"];
    "HASH_SIZE\n(deflate.c:812)" [fillcolor="lightgreen"];
    "DICBIT\n(unlzh.c:302)" [fillcolor="lightgreen"];
    "STDOUT_FILENO\n(gzip.c:1685)" [fillcolor="lightgreen"];
    "tab_prefix\n(unlzw.c:275)" [fillcolor="lightgreen"];
    "FLUSH_BLOCK\n(deflate.c:834)" [fillcolor="lightgreen"];
    "send_code\n(trees.c:1038)" [fillcolor="lightgreen"];
    "tab_prefixof\n(unlzw.c:242)" [fillcolor="lightgreen"];
    "EOF\n(gzip.c:693)" [fillcolor="lightgreen"];
    "Code\n(trees.c:773)" [fillcolor="lightgreen"];
    "display_ratio\n(util.c:508)" [fillcolor="lightblue"];
    "get_byte\n(gzip.c:1535)" [fillcolor="lightgreen"];
    "Code\n(trees.c:1038)" [fillcolor="lightgreen"];
    "stdout\n(gzip.c:1801)" [fillcolor="lightgreen"];
    "get_byte\n(gzip.c:1554)" [fillcolor="lightgreen"];
    "BMAX\n(inflate.c:343)" [fillcolor="lightgreen"];
    "MAX_BITLEN\n(unpack.c:127)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:562)" [fillcolor="lightgreen"];
    "LZW_RESERVED\n(unlzw.c:125)" [fillcolor="lightgreen"];
    "slide\n(inflate.c:583)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1545)" [fillcolor="lightgreen"];
    "flush_block\n(trees.c:859)" [fillcolor="lightblue"];
    "errno\n(gzip.c:1018)" [fillcolor="lightgreen"];
    "SIG_SETMASK\n(gzip.c:1116)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:890)" [fillcolor="lightgreen"];
    "MAX_MATCH\n(deflate.c:771)" [fillcolor="lightgreen"];
    "D_CODES\n(trees.c:1002)" [fillcolor="lightgreen"];
    "H_SHIFT\n(deflate.c:763)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:823)" [fillcolor="lightgreen"];
    "SH\n(unzip.c:179)" [fillcolor="lightgreen"];
    "HASH_MASK\n(deflate.c:819)" [fillcolor="lightgreen"];
    "MAXCODE\n(unlzw.c:129)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1039)" [fillcolor="lightgreen"];
    "read_buffer\n(util.c:241)" [fillcolor="lightblue"];
    "printf\n(gzip.c:1799)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:557)" [fillcolor="lightgreen"];
    "GETBYTE\n(inflate.c:572)" [fillcolor="lightgreen"];
    "TYPE_SIGNED\n(gzip.c:1735)" [fillcolor="lightgreen"];
    "create_outfile\n(gzip.c:1087)" [fillcolor="lightblue"];
    "REP_3_6\n(trees.c:776)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:1740)" [fillcolor="lightgreen"];
    "head\n(deflate.c:671)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:364)" [fillcolor="lightgreen"];
    "abort_gzip_signal\n(gzip.c:2148)" [fillcolor="lightblue"];
    "NT\n(unlzh.c:249)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:913)" [fillcolor="lightgreen"];
    "HASH_BITS\n(deflate.c:812)" [fillcolor="lightgreen"];
    "THRESHOLD\n(unlzh.c:277)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:907)" [fillcolor="lightgreen"];
    "slide\n(inflate.c:649)" [fillcolor="lightgreen"];
    "WARN\n(gzip.c:1397)" [fillcolor="lightgreen"];
    "WARN\n(gzip.c:1039)" [fillcolor="lightgreen"];
    "NEEDBITS\n(inflate.c:530)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:666)" [fillcolor="lightgreen"];
    "MAX_SUFFIX\n(gzip.c:1169)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:808)" [fillcolor="lightgreen"];
    "HASH_BITS\n(deflate.c:819)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1528)" [fillcolor="lightgreen"];
    "THRESHOLD\n(unlzh.c:265)" [fillcolor="lightgreen"];
    "CHAR_BIT\n(unlzh.c:250)" [fillcolor="lightgreen"];
    "put_byte\n(zip.c:68)" [fillcolor="lightgreen"];
    "__S_IFREG\n(gzip.c:714)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:2038)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1692)" [fillcolor="lightgreen"];
    "MAXMATCH\n(unlzh.c:277)" [fillcolor="lightgreen"];
    "NULL\n(inflate.c:384)" [fillcolor="lightgreen"];
    "__S_IFDIR\n(gzip.c:881)" [fillcolor="lightgreen"];
    "tab_suffix\n(unlzw.c:276)" [fillcolor="lightgreen"];
    "version\n(gzip.c:397)" [fillcolor="lightblue"];
    "DUMPBITS\n(inflate.c:655)" [fillcolor="lightgreen"];
    "__GETOPT_XCONCAT\n(gzip.c:656)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1896)" [fillcolor="lightgreen"];
    "D_CODES\n(trees.c:422)" [fillcolor="lightgreen"];
    "send_code\n(trees.c:1064)" [fillcolor="lightgreen"];
    "get_byte\n(unzip.c:164)" [fillcolor="lightgreen"];
    "inflate_block\n(inflate.c:898)" [fillcolor="lightblue"];
    "MAX_MATCH\n(deflate.c:737)" [fillcolor="lightgreen"];
    "fprintf\n(unzip.c:89)" [fillcolor="lightgreen"];
    "head\n(deflate.c:587)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1067)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:983)" [fillcolor="lightgreen"];
    "CHAR_BIT\n(unlzh.c:216)" [fillcolor="lightgreen"];
    "MIN_LOOKAHEAD\n(deflate.c:771)" [fillcolor="lightgreen"];
    "HEADER_CRC\n(gzip.c:1616)" [fillcolor="lightgreen"];
    "EXTHDR\n(unzip.c:175)" [fillcolor="lightgreen"];
    "H_SHIFT\n(deflate.c:671)" [fillcolor="lightgreen"];
    "strequ\n(gzip.c:868)" [fillcolor="lightgreen"];
    "NULL\n(util.c:184)" [fillcolor="lightgreen"];
    "stderr\n(unzip.c:184)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:354)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:805)" [fillcolor="lightgreen"];
    "Len\n(trees.c:393)" [fillcolor="lightgreen"];
    "LITERALS\n(trees.c:983)" [fillcolor="lightgreen"];
    "NULL\n(inflate.c:383)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:602)" [fillcolor="lightgreen"];
    "CHAR_BIT\n(util.c:525)" [fillcolor="lightgreen"];
    "WMASK\n(deflate.c:763)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:1453)" [fillcolor="lightgreen"];
    "Dad\n(trees.c:675)" [fillcolor="lightgreen"];
    "put_short\n(zip.c:68)" [fillcolor="lightgreen"];
    "WARN\n(gzip.c:1961)" [fillcolor="lightgreen"];
    "d_code\n(trees.c:984)" [fillcolor="lightgreen"];
    "UPDATE_HASH\n(deflate.c:763)" [fillcolor="lightgreen"];
    "send_code\n(trees.c:779)" [fillcolor="lightgreen"];
    "stderr\n(unlzw.c:132)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:392)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:1389)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:1266)" [fillcolor="lightgreen"];
    "SMALLEST\n(trees.c:666)" [fillcolor="lightgreen"];
    "STDIN_FILENO\n(gzip.c:775)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:1371)" [fillcolor="lightgreen"];
    "O_RDONLY\n(gzip.c:855)" [fillcolor="lightgreen"];
    "fprintf\n(unlzw.c:132)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:1902)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:1868)" [fillcolor="lightgreen"];
    "fprintf\n(unlzw.c:125)" [fillcolor="lightgreen"];
    "NULL\n(inflate.c:790)" [fillcolor="lightgreen"];
    "WARN\n(gzip.c:914)" [fillcolor="lightgreen"];
    "put_byte\n(zip.c:56)" [fillcolor="lightgreen"];
    "LENGTH_CODES\n(trees.c:359)" [fillcolor="lightgreen"];
    "stderr\n(lzw.c:18)" [fillcolor="lightgreen"];
    "S_ISREG\n(gzip.c:714)" [fillcolor="lightgreen"];
    "tab_prefixof\n(unlzw.c:275)" [fillcolor="lightgreen"];
    "flush_window\n(util.c:299)" [fillcolor="lightblue"];
    "fprintf\n(gzip.c:1397)" [fillcolor="lightgreen"];
    "NULL\n(util.c:424)" [fillcolor="lightgreen"];
    "MAXMATCH\n(unlzh.c:291)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:810)" [fillcolor="lightgreen"];
    "Len\n(trees.c:561)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:1802)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:2040)" [fillcolor="lightgreen"];
    "fprintf\n(gzip.c:625)" [fillcolor="lightgreen"];
    "EXTFLG\n(unzip.c:96)" [fillcolor="lightgreen"];
    "RSYNC_ROLL\n(deflate.c:722)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1058)" [fillcolor="lightgreen"];
    "printf\n(gzip.c:384)" [fillcolor="lightgreen"];
    "smaller\n(trees.c:468)" [fillcolor="lightgreen"];
    "Code\n(trees.c:769)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:639)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:771)" [fillcolor="lightgreen"];
    "openat\n(gzip.c:1114)" [fillcolor="lightgreen"];
    "MAX_SUFFIX\n(gzip.c:1202)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:579)" [fillcolor="lightgreen"];
    "__GETOPT_ID\n(gzip.c:468)" [fillcolor="lightgreen"];
    "MIN_LOOKAHEAD\n(deflate.c:677)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:604)" [fillcolor="lightgreen"];
    "right\n(unlzh.c:305)" [fillcolor="lightgreen"];
    "__GETOPT_ID\n(gzip.c:509)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:1078)" [fillcolor="lightgreen"];
    "__S_IFREG\n(gzip.c:897)" [fillcolor="lightgreen"];
    "get_byte\n(unlzw.c:122)" [fillcolor="lightgreen"];
    "inflate_stored\n(inflate.c:616)" [fillcolor="lightblue"];
    "Len\n(trees.c:718)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:652)" [fillcolor="lightgreen"];
    "LG\n(gzip.c:1784)" [fillcolor="lightgreen"];
    "STORED\n(trees.c:914)" [fillcolor="lightgreen"];
    "localtime\n(gzip.c:1793)" [fillcolor="lightgreen"];
    "c_table\n(unlzh.c:244)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:1400)" [fillcolor="lightgreen"];
    "fclose\n(gzip.c:2105)" [fillcolor="lightgreen"];
    "CODE_BIT\n(unlzh.c:249)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:486)" [fillcolor="lightgreen"];
    "fprintf\n(util.c:499)" [fillcolor="lightgreen"];
    "DEFLATED\n(zip.c:51)" [fillcolor="lightgreen"];
    "MIN_LOOKAHEAD\n(deflate.c:572)" [fillcolor="lightgreen"];
    "F_SETFL\n(util.c:261)" [fillcolor="lightgreen"];
    "OUTBUFSIZ\n(bits.c:143)" [fillcolor="lightgreen"];
    "PACK_MAGIC\n(gzip.c:1664)" [fillcolor="lightgreen"];
    "NULL\n(gzip.c:1354)" [fillcolor="lightgreen"];
    "Len\n(trees.c:405)" [fillcolor="lightgreen"];
    "__S_ISGID\n(gzip.c:912)" [fillcolor="lightgreen"];
    "HASH_BITS\n(deflate.c:586)" [fillcolor="lightgreen"];
    "strequ\n(gzip.c:1184)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:1019)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1640)" [fillcolor="lightgreen"];
    "RSYNC_WIN\n(deflate.c:620)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:572)" [fillcolor="lightgreen"];
    "wp\n(inflate.c:604)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:836)" [fillcolor="lightgreen"];
    "NULL\n(deflate.c:877)" [fillcolor="lightgreen"];
    "NEXTBYTE\n(inflate.c:756)" [fillcolor="lightgreen"];
    "build_tree\n(unpack.c:170)" [fillcolor="lightblue"];
    "Freq\n(trees.c:468)" [fillcolor="lightgreen"];
    "LG\n(gzip.c:1783)" [fillcolor="lightgreen"];
    "Freq\n(trees.c:984)" [fillcolor="lightgreen"];
    "read_error\n(util.c:483)" [fillcolor="lightblue"];
    "put_ubyte\n(unzip.c:151)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:671)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:2152)" [fillcolor="lightgreen"];
    "OK\n(gzip.c:1131)" [fillcolor="lightgreen"];
    "openat\n(gzip.c:1261)" [fillcolor="lightgreen"];
    "FLUSH_BLOCK\n(deflate.c:877)" [fillcolor="lightgreen"];
    "WARN\n(gzip.c:899)" [fillcolor="lightgreen"];
    "D_CODES\n(trees.c:404)" [fillcolor="lightgreen"];
    "look_bits\n(unpack.c:252)" [fillcolor="lightgreen"];
    "ct_tally\n(trees.c:968)" [fillcolor="lightblue"];
    "__GETOPT_XCONCAT\n(gzip.c:509)" [fillcolor="lightgreen"];
    "flush_output\n(inflate.c:978)" [fillcolor="lightgreen"];
    "init_block\n(trees.c:416)" [fillcolor="lightblue"];
    "stderr\n(gzip.c:1705)" [fillcolor="lightgreen"];
    "OLD_GZIP_MAGIC\n(gzip.c:1524)" [fillcolor="lightgreen"];
    "ERROR\n(gzip.c:1907)" [fillcolor="lightgreen"];
    "DUMPBITS\n(inflate.c:559)" [fillcolor="lightgreen"];
    "LG\n(unzip.c:144)" [fillcolor="lightgreen"];
    "Len\n(trees.c:818)" [fillcolor="lightgreen"];
    "Len\n(trees.c:517)" [fillcolor="lightgreen"];
    "WARNING\n(gzip.c:1418)" [fillcolor="lightgreen"];
    "strequ\n(gzip.c:2029)" [fillcolor="lightgreen"];
    "stderr\n(gzip.c:1900)" [fillcolor="lightgreen"];
    "WSIZE\n(deflate.c:597)" [fillcolor="lightgreen"];
    "__GETOPT_XCONCAT\n(gzip.c:464)" [fillcolor="lightgreen"];
    "RAND_HEAD_LEN\n(unzip.c:144)" [fillcolor="lightgreen"];
    "fprintf\n(unzip.c:202)" [fillcolor="lightgreen"];
    "errno\n(util.c:500)" [fillcolor="lightgreen"];
    "memzero\n(deflate.c:324)" [fillcolor="lightgreen"];
    "casemap\n(util.c:353)" [fillcolor="lightgreen"];
    "WSIZE\n(unlzh.c:305)" [fillcolor="lightgreen"];
    "send_code\n(trees.c:773)" [fillcolor="lightgreen"];
    "HASH_MASK\n(deflate.c:671)" [fillcolor="lightgreen"];
    "NIL\n(deflate.c:394)" [fillcolor="lightgreen"];
    "LZW_RESERVED\n(unlzw.c:124)" [fillcolor="lightgreen"];
    "CHAR_BIT\n(unlzh.c:218)" [fillcolor="lightgreen"];
    "perror\n(gzip.c:1043)" [fillcolor="lightgreen"];
    "MIN_MATCH\n(deflate.c:689)" [fillcolor="lightgreen"];
    "BITS\n(unlzw.c:134)" [fillcolor="lightgreen"];
    "__GETOPT_XCONCAT\n(gzip.c:474)" [fillcolor="lightgreen"];
    "errno\n(gzip.c:408)" [fillcolor="lightgreen"];
    "put_byte\n(zip.c:102)" [fillcolor="lightgreen"];
    "huf_decode_start\n(unlzh.c:315)" [fillcolor="lightblue"];
    "UPDATE_HASH\n(deflate.c:812)" [fillcolor="lightgreen"];
    "ENOENT\n(gzip.c:1309)" [fillcolor="lightgreen"];
    "fflush\n(gzip.c:1896)" [fillcolor="lightgreen"];
    "ERROR\n(lzw.c:20)" [fillcolor="lightgreen"];
    "main\n(gzip.c:414)" -> "getopt_long\n(gzip.c:468)";
    "main\n(gzip.c:414)" -> "fprintf\n(gzip.c:606)";
    "do_list\n(gzip.c:1722)" -> "printf\n(gzip.c:1762)";
    "decode_c\n(unlzh.c:270)" -> "THRESHOLD\n(unlzh.c:285)";
    "main\n(gzip.c:414)" -> "__GETOPT_CONCAT\n(gzip.c:501)";
    "put_short\n(bits.c:198)" -> "flush_outbuf\n(util.c:286)";
    "treat_dir\n(gzip.c:2000)" -> "strequ\n(gzip.c:2029)";
    "main\n(gzip.c:414)" -> "__GETOPT_CONCAT\n(gzip.c:566)";
    "inflate_codes\n(inflate.c:509)" -> "GETBYTE\n(inflate.c:562)";
    "deflate\n(deflate.c:748)" -> "WSIZE\n(deflate.c:763)";
    "flush_window\n(util.c:299)" -> "updcrc\n(util.c:141)";
    "fill_window\n(deflate.c:558)" -> "MIN_LOOKAHEAD\n(deflate.c:572)";
    "remove_output_file\n(gzip.c:2114)" -> "SIG_SETMASK\n(gzip.c:2131)";
    "get_method\n(gzip.c:1488)" -> "stderr\n(gzip.c:1528)";
    "make_ofname\n(gzip.c:1380)" -> "WARNING\n(gzip.c:1453)";
    "send_code\n(trees.c:779)" -> "send_bits\n(bits.c:128)";
    "get_method\n(gzip.c:1488)" -> "try_byte\n(gzip.c:1503)";
    "deflate\n(deflate.c:748)" -> "FLUSH_BLOCK\n(deflate.c:846)";
    "read_pt_len\n(unlzh.c:200)" -> "BITBUFSIZ\n(unlzh.c:216)";
    "copy_stat\n(gzip.c:1935)" -> "perror\n(gzip.c:1988)";
    "bi_windup\n(bits.c:172)" -> "OUTBUFSIZ\n(bits.c:177)";
    "compress_block\n(trees.c:1021)" -> "Len\n(trees.c:1064)";
    "send_tree\n(trees.c:749)" -> "Len\n(trees.c:769)";
    "gen_codes\n(trees.c:577)" -> "Len\n(trees.c:600)";
    "unlzw\n(unlzw.c:99)" -> "tab_suffix\n(unlzw.c:241)";
    "remove_output_file\n(gzip.c:2114)" -> "NULL\n(gzip.c:2131)";
    "treat_file\n(gzip.c:864)" -> "strequ\n(gzip.c:868)";
    "send_tree\n(trees.c:749)" -> "Len\n(trees.c:782)";
    "check_zipfile\n(unzip.c:62)" -> "stderr\n(unzip.c:73)";
    "send_code\n(trees.c:769)" -> "send_bits\n(bits.c:128)";
    "get_byte\n(gzip.c:1552)" -> "fill_inbuf\n(util.c:210)";
    "main\n(gzip.c:414)" -> "fprintf\n(gzip.c:476)";
    "shorten_name\n(gzip.c:1830)" -> "PART_SEP\n(gzip.c:1863)";
    "deflate\n(deflate.c:748)" -> "HASH_SIZE\n(deflate.c:808)";
    "main\n(gzip.c:414)" -> "EINVAL\n(gzip.c:677)";
    "finish_out\n(gzip.c:2103)" -> "fclose\n(gzip.c:2105)";
    "inflate_codes\n(inflate.c:509)" -> "wp\n(inflate.c:557)";
    "get_byte\n(gzip.c:1553)" -> "fill_inbuf\n(util.c:210)";
    "do_list\n(gzip.c:1722)" -> "printf\n(gzip.c:1754)";
    "get_method\n(gzip.c:1488)" -> "ERROR\n(gzip.c:1694)";
    "check_zipfile\n(unzip.c:62)" -> "ERROR\n(unzip.c:83)";
    "license\n(gzip.c:388)" -> "printf\n(gzip.c:393)";
    "treat_file\n(gzip.c:864)" -> "xunlink\n(util.c:360)";
    "ct_tally\n(trees.c:968)" -> "l_buf\n(trees.c:972)";
    "inflate_dynamic\n(inflate.c:722)" -> "wp\n(inflate.c:834)";
    "pqremove\n(trees.c:666)" -> "pqdownheap\n(trees.c:460)";
    "treat_file\n(gzip.c:864)" -> "WARNING\n(gzip.c:914)";
    "main\n(gzip.c:414)" -> "fprintf\n(gzip.c:513)";
    "flush_block\n(trees.c:859)" -> "STORED\n(trees.c:914)";
    "deflate\n(deflate.c:748)" -> "WMASK\n(deflate.c:808)";
    "shorten_name\n(gzip.c:1830)" -> "NULL\n(gzip.c:1870)";
    "NEXTBYTE\n(inflate.c:537)" -> "fill_inbuf\n(util.c:210)";
    "treat_dir\n(gzip.c:2000)" -> "ISSLASH\n(gzip.c:2033)";
    "unlzw\n(unlzw.c:99)" -> "tab_prefix\n(unlzw.c:242)";
    "read_byte\n(unpack.c:81)" -> "get_byte\n(unpack.c:83)";
    "copy\n(util.c:117)" -> "read_buffer\n(util.c:241)";
    "inflate_codes\n(inflate.c:509)" -> "wp\n(inflate.c:572)";
    "get_method\n(gzip.c:1488)" -> "STORED\n(gzip.c:1679)";
    "file_read\n(zip.c:115)" -> "read_error\n(util.c:483)";
    "main\n(gzip.c:414)" -> "stderr\n(gzip.c:606)";
    "make_ofname\n(gzip.c:1380)" -> "strequ\n(gzip.c:1404)";
    "decode_c\n(unlzh.c:270)" -> "head\n(unlzh.c:288)";
    "unlzw\n(unlzw.c:99)" -> "OUTBUFSIZ\n(unlzw.c:258)";
    "unlzw\n(unlzw.c:99)" -> "stderr\n(unlzw.c:132)";
    "read_tree\n(unpack.c:113)" -> "MAX_BITLEN\n(unpack.c:127)";
    "get_suffix\n(gzip.c:1165)" -> "strlwr\n(util.c:334)";
    "inflate_stored\n(inflate.c:616)" -> "DUMPBITS\n(inflate.c:638)";
    "open_and_stat\n(gzip.c:1225)" -> "__O_NOFOLLOW\n(gzip.c:1235)";
    "atdir_set\n(gzip.c:837)" -> "O_DIRECTORY\n(gzip.c:855)";
    "send_bits\n(bits.c:128)" -> "Buf_size\n(bits.c:144)";
    "do_list\n(gzip.c:1722)" -> "printf\n(gzip.c:1802)";
    "make_ofname\n(gzip.c:1380)" -> "WARNING\n(gzip.c:1397)";
    "unlzw\n(unlzw.c:99)" -> "read_buffer\n(util.c:241)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEEDBITS\n(inflate.c:759)";
    "longest_match\n(deflate.c:387)" -> "WSIZE\n(deflate.c:394)";
    "treat_file\n(gzip.c:864)" -> "OK\n(gzip.c:907)";
    "set_file_type\n(trees.c:1073)" -> "translate_eol\n(trees.c:1082)";
    "decode_c\n(unlzh.c:270)" -> "UCHAR_MAX\n(unlzh.c:291)";
    "unzip\n(unzip.c:110)" -> "ERROR\n(unzip.c:205)";
    "finish_out\n(gzip.c:2103)" -> "write_error\n(util.c:496)";
    "get_method\n(gzip.c:1488)" -> "OK\n(gzip.c:1705)";
    "ct_init\n(trees.c:341)" -> "D_CODES\n(trees.c:404)";
    "scan_tree\n(trees.c:705)" -> "REPZ_11_138\n(trees.c:732)";
    "gzip_error\n(util.c:465)" -> "fprintf\n(util.c:467)";
    "treat_file\n(gzip.c:864)" -> "__S_ISUID\n(gzip.c:905)";
    "ct_init\n(trees.c:341)" -> "L_CODES\n(trees.c:401)";
    "main\n(gzip.c:414)" -> "do_list\n(gzip.c:1722)";
    "deflate_fast\n(deflate.c:660)" -> "WSIZE\n(deflate.c:671)";
    "create_outfile\n(gzip.c:1087)" -> "O_WRONLY\n(gzip.c:1090)";
    "decode_c\n(unlzh.c:270)" -> "NT\n(unlzh.c:279)";
    "treat_file\n(gzip.c:864)" -> "__S_IFDIR\n(gzip.c:881)";
    "finish_out\n(gzip.c:2103)" -> "stdout\n(gzip.c:2105)";
    "zip\n(zip.c:34)" -> "deflate\n(deflate.c:748)";
    "set_file_type\n(trees.c:1073)" -> "BINARY\n(trees.c:1081)";
    "FLUSH_BLOCK\n(deflate.c:846)" -> "flush_block\n(trees.c:859)";
    "unpack\n(unpack.c:213)" -> "OK\n(unpack.c:268)";
    "get_method\n(gzip.c:1488)" -> "updcrc\n(util.c:141)";
    "inflate_codes\n(inflate.c:509)" -> "WSIZE\n(inflate.c:544)";
    "put_short\n(zip.c:101)" -> "flush_outbuf\n(util.c:286)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEEDBITS\n(inflate.c:753)";
    "deflate\n(deflate.c:748)" -> "MIN_MATCH\n(deflate.c:763)";
    "lzw\n(lzw.c:13)" -> "stderr\n(lzw.c:18)";
    "build_tree\n(trees.c:618)" -> "MAX\n(trees.c:674)";
    "longest_match\n(deflate.c:387)" -> "MAX_MATCH\n(deflate.c:496)";
    "inflate_block\n(inflate.c:898)" -> "wp\n(inflate.c:919)";
    "create_outfile\n(gzip.c:1087)" -> "ERROR\n(gzip.c:1141)";
    "deflate_fast\n(deflate.c:660)" -> "WMASK\n(deflate.c:671)";
    "NEEDBITS\n(inflate.c:799)" -> "fill_inbuf\n(util.c:210)";
    "inflate_block\n(inflate.c:898)" -> "NEXTBYTE\n(inflate.c:919)";
    "open_input_file\n(gzip.c:1281)" -> "O_BINARY\n(gzip.c:1295)";
    "abort_gzip_signal\n(gzip.c:2148)" -> "remove_output_file\n(gzip.c:2114)";
    "get_method\n(gzip.c:1488)" -> "stderr\n(gzip.c:1545)";
    "treat_file\n(gzip.c:864)" -> "fprintf\n(gzip.c:914)";
    "get_method\n(gzip.c:1488)" -> "get_byte\n(gzip.c:1589)";
    "GETBYTE\n(inflate.c:759)" -> "fill_inbuf\n(util.c:210)";
    "fill_window\n(deflate.c:558)" -> "MIN_MATCH\n(deflate.c:572)";
    "main\n(gzip.c:414)" -> "__GETOPT_ID\n(gzip.c:565)";
    "deflate\n(deflate.c:748)" -> "NULL\n(deflate.c:877)";
    "open_and_stat\n(gzip.c:1225)" -> "openat\n(gzip.c:1261)";
    "read_c_len\n(unlzh.c:235)" -> "MAXMATCH\n(unlzh.c:265)";
    "RSYNC_ROLL\n(deflate.c:847)" -> "rsync_roll\n(deflate.c:614)";
    "treat_stdin\n(gzip.c:725)" -> "true\n(gzip.c:776)";
    "inflate_stored\n(inflate.c:616)" -> "wp\n(inflate.c:639)";
    "deflate\n(deflate.c:748)" -> "WSIZE\n(deflate.c:771)";
    "check_zipfile\n(unzip.c:62)" -> "LG\n(unzip.c:72)";
    "treat_file\n(gzip.c:864)" -> "WARNING\n(gzip.c:907)";
    "check_zipfile\n(unzip.c:62)" -> "STORED\n(unzip.c:79)";
    "open_and_stat\n(gzip.c:1225)" -> "O_NOFOLLOW\n(gzip.c:1235)";
    "write_error\n(util.c:496)" -> "stderr\n(util.c:499)";
    "zip\n(zip.c:34)" -> "put_byte\n(zip.c:77)";
    "inflate_codes\n(inflate.c:509)" -> "NEEDBITS\n(inflate.c:562)";
    "read_error\n(util.c:483)" -> "abort_gzip\n(gzip.c:2138)";
    "read_error\n(util.c:483)" -> "stderr\n(util.c:486)";
    "decode\n(unlzh.c:336)" -> "DICBIT\n(unlzh.c:368)";
    "inflate_dynamic\n(inflate.c:722)" -> "DUMPBITS\n(inflate.c:755)";
    "unzip\n(unzip.c:110)" -> "fill_inbuf\n(util.c:210)";
    "deflate\n(deflate.c:748)" -> "MIN_LOOKAHEAD\n(deflate.c:873)";
    "getbits\n(unlzh.c:115)" -> "CHAR_BIT\n(unlzh.c:120)";
    "unlzw\n(unlzw.c:99)" -> "tab_prefix\n(unlzw.c:202)";
    "make_ofname\n(gzip.c:1380)" -> "get_suffix\n(gzip.c:1165)";
    "read_error\n(util.c:483)" -> "stderr\n(util.c:491)";
    "fill_inbuf\n(util.c:210)" -> "read_buffer\n(util.c:241)";
    "get_suffix\n(gzip.c:1165)" -> "MAX_SUFFIX\n(gzip.c:1199)";
    "flush_block\n(trees.c:859)" -> "build_bl_tree\n(trees.c:799)";
    "ct_init\n(trees.c:341)" -> "bi_reverse\n(bits.c:157)";
    "copy_stat\n(gzip.c:1935)" -> "__S_IEXEC\n(gzip.c:1938)";
    "copy_stat\n(gzip.c:1935)" -> "S_IRWXU\n(gzip.c:1938)";
    "zip\n(zip.c:34)" -> "gzip_base_name\n(util.c:349)";
    "deflate\n(deflate.c:748)" -> "WSIZE\n(deflate.c:808)";
    "get_suffix\n(gzip.c:1165)" -> "NULL\n(gzip.c:1175)";
    "main\n(gzip.c:414)" -> "optarg\n(gzip.c:511)";
    "build_tree\n(trees.c:618)" -> "LENGTH_CODES\n(trees.c:632)";
    "build_tree\n(trees.c:618)" -> "Freq\n(trees.c:673)";
    "unlzw\n(unlzw.c:99)" -> "WARNING\n(unlzw.c:125)";
    "read_pt_len\n(unlzh.c:200)" -> "getbits\n(unlzh.c:115)";
    "ct_tally\n(trees.c:968)" -> "LIT_BUFSIZE\n(trees.c:1011)";
    "unlzw\n(unlzw.c:99)" -> "ERROR\n(unlzw.c:135)";
    "inflate_codes\n(inflate.c:509)" -> "wp\n(inflate.c:537)";
    "send_tree\n(trees.c:749)" -> "send_code\n(trees.c:776)";
    "treat_file\n(gzip.c:864)" -> "S_ISUID\n(gzip.c:905)";
    "inflate_stored\n(inflate.c:616)" -> "wp\n(inflate.c:660)";
    "put_short\n(bits.c:175)" -> "flush_outbuf\n(util.c:286)";
    "copy_stat\n(gzip.c:1935)" -> "errno\n(gzip.c:1960)";
    "read_byte\n(unpack.c:81)" -> "gzip_error\n(util.c:465)";
    "decode_c\n(unlzh.c:270)" -> "CHAR_BIT\n(unlzh.c:284)";
    "init_getbits\n(unlzh.c:124)" -> "BITBUFSIZ\n(unlzh.c:127)";
    "ct_init\n(trees.c:341)" -> "Len\n(trees.c:396)";
    "check_zipfile\n(unzip.c:62)" -> "ERROR\n(unzip.c:91)";
    "create_outfile\n(gzip.c:1087)" -> "AT_FDCWD\n(gzip.c:1093)";
    "deflate\n(deflate.c:748)" -> "NULL\n(deflate.c:834)";
    "decode_c\n(unlzh.c:270)" -> "getbits\n(unlzh.c:115)";
    "decode_c\n(unlzh.c:270)" -> "TBIT\n(unlzh.c:279)";
    "compress_block\n(trees.c:1021)" -> "Len\n(trees.c:1038)";
    "unzip\n(unzip.c:110)" -> "fprintf\n(unzip.c:184)";
    "abort_gzip\n(gzip.c:2138)" -> "false\n(gzip.c:2140)";
    "check_zipfile\n(unzip.c:62)" -> "LOCHDR\n(unzip.c:70)";
    "deflate\n(deflate.c:748)" -> "UPDATE_HASH\n(deflate.c:812)";
    "zip\n(zip.c:34)" -> "put_byte\n(zip.c:101)";
    "unlzw\n(unlzw.c:99)" -> "fprintf\n(unlzw.c:132)";
    "treat_file\n(gzip.c:864)" -> "false\n(gzip.c:1051)";
    "unpack\n(unpack.c:213)" -> "put_ubyte\n(unpack.c:258)";
    "get_method\n(gzip.c:1488)" -> "fprintf\n(gzip.c:1711)";
    "get_input_size_and_time\n(gzip.c:704)" -> "__S_IFREG\n(gzip.c:714)";
    "inflate_codes\n(inflate.c:509)" -> "GETBYTE\n(inflate.c:537)";
    "fill_window\n(deflate.c:558)" -> "WSIZE\n(deflate.c:592)";
    "read_c_len\n(unlzh.c:235)" -> "c_len\n(unlzh.c:243)";
    "deflate_fast\n(deflate.c:660)" -> "MAX_DIST\n(deflate.c:676)";
    "get_method\n(gzip.c:1488)" -> "fprintf\n(gzip.c:1564)";
    "send_code\n(trees.c:1043)" -> "send_bits\n(bits.c:128)";
    "init_block\n(trees.c:416)" -> "Freq\n(trees.c:423)";
    "read_buffer\n(util.c:241)" -> "EAGAIN\n(util.c:254)";
    "do_list\n(gzip.c:1722)" -> "SH\n(gzip.c:1783)";
    "main\n(gzip.c:414)" -> "install_signal_handlers\n(gzip.c:2050)";
    "get_method\n(gzip.c:1488)" -> "get_byte\n(gzip.c:1636)";
    "zip\n(zip.c:34)" -> "GZIP_MAGIC\n(zip.c:50)";
    "pqdownheap\n(trees.c:460)" -> "Freq\n(trees.c:471)";
    "deflate_fast\n(deflate.c:660)" -> "HASH_BITS\n(deflate.c:671)";
    "shorten_name\n(gzip.c:1830)" -> "gzip_error\n(util.c:465)";
    "progerror\n(gzip.c:404)" -> "perror\n(gzip.c:409)";
    "get_suffix\n(gzip.c:1165)" -> "NULL\n(gzip.c:1171)";
    "NEXTBYTE\n(inflate.c:823)" -> "fill_inbuf\n(util.c:210)";
    "decode\n(unlzh.c:336)" -> "MAXMATCH\n(unlzh.c:359)";
    "treat_file\n(gzip.c:864)" -> "fprintf\n(gzip.c:899)";
    "build_tree\n(trees.c:618)" -> "Len\n(trees.c:652)";
    "gen_bitlen\n(trees.c:492)" -> "L_CODES\n(trees.c:515)";
    "send_tree\n(trees.c:749)" -> "send_bits\n(bits.c:128)";
    "deflate_fast\n(deflate.c:660)" -> "WSIZE\n(deflate.c:676)";
    "make_ofname\n(gzip.c:1380)" -> "NULL\n(gzip.c:1389)";
    "make_table\n(unlzh.c:134)" -> "left\n(unlzh.c:183)";
    "unzip\n(unzip.c:110)" -> "LG\n(unzip.c:178)";
    "check_ofname\n(gzip.c:1888)" -> "fprintf\n(gzip.c:1893)";
    "open_and_stat\n(gzip.c:1225)" -> "ELOOP\n(gzip.c:1243)";
    "check_ofname\n(gzip.c:1888)" -> "fprintf\n(gzip.c:1895)";
    "deflate_fast\n(deflate.c:660)" -> "HASH_SIZE\n(deflate.c:701)";
    "decode_start\n(unlzh.c:327)" -> "huf_decode_start\n(unlzh.c:315)";
    "lm_init\n(deflate.c:311)" -> "H_SHIFT\n(deflate.c:367)";
    "create_outfile\n(gzip.c:1087)" -> "O_BINARY\n(gzip.c:1091)";
    "unpack\n(unpack.c:213)" -> "gzip_error\n(util.c:465)";
    "discard_input_bytes\n(gzip.c:1461)" -> "get_byte\n(gzip.c:1467)";
    "zip\n(zip.c:34)" -> "put_byte\n(zip.c:51)";
    "GETBYTE\n(inflate.c:813)" -> "fill_inbuf\n(util.c:210)";
    "fill_window\n(deflate.c:558)" -> "WSIZE\n(deflate.c:588)";
    "xalloc_die\n(util.c:472)" -> "stderr\n(util.c:474)";
    "rsync_roll\n(deflate.c:614)" -> "RSYNC_WIN\n(deflate.c:626)";
    "decode_c\n(unlzh.c:270)" -> "PBIT\n(unlzh.c:281)";
    "deflate_fast\n(deflate.c:660)" -> "head\n(deflate.c:701)";
    "deflate\n(deflate.c:748)" -> "FLUSH_BLOCK\n(deflate.c:858)";
    "main\n(gzip.c:414)" -> "fprintf\n(gzip.c:583)";
    "deflate_fast\n(deflate.c:660)" -> "rsync_roll\n(deflate.c:614)";
    "huft_build\n(inflate.c:273)" -> "BMAX\n(inflate.c:343)";
    "zip\n(zip.c:34)" -> "put_byte\n(zip.c:56)";
    "fill_window\n(deflate.c:558)" -> "WSIZE\n(deflate.c:590)";
    "get_method\n(gzip.c:1488)" -> "get_byte\n(gzip.c:1572)";
    "put_short\n(bits.c:199)" -> "flush_outbuf\n(util.c:286)";
    "read_c_len\n(unlzh.c:235)" -> "getbits\n(unlzh.c:115)";
    "add_envopt\n(util.c:412)" -> "NULL\n(util.c:457)";
    "deflate_fast\n(deflate.c:660)" -> "MIN_LOOKAHEAD\n(deflate.c:737)";
    "open_input_file\n(gzip.c:1281)" -> "stderr\n(gzip.c:1371)";
    "inflate_codes\n(inflate.c:509)" -> "NEEDBITS\n(inflate.c:557)";
    "make_ofname\n(gzip.c:1380)" -> "stderr\n(gzip.c:1453)";
    "make_ofname\n(gzip.c:1380)" -> "WARN\n(gzip.c:1453)";
    "unzip\n(unzip.c:110)" -> "EXTHDR\n(unzip.c:175)";
    "treat_file\n(gzip.c:864)" -> "errno\n(gzip.c:1034)";
    "unzip\n(unzip.c:110)" -> "LG\n(unzip.c:144)";
    "write_error\n(util.c:496)" -> "errno\n(util.c:498)";
    "get_method\n(gzip.c:1488)" -> "fprintf\n(gzip.c:1640)";
    "unlzw\n(unlzw.c:99)" -> "clear_tab_prefixof\n(unlzw.c:148)";
    "get_byte\n(gzip.c:1610)" -> "fill_inbuf\n(util.c:210)";
    "NEEDBITS\n(inflate.c:823)" -> "fill_inbuf\n(util.c:210)";
    "scan_tree\n(trees.c:705)" -> "Len\n(trees.c:718)";
    "treat_stdin\n(gzip.c:725)" -> "stderr\n(gzip.c:805)";
    "copy_block\n(bits.c:190)" -> "put_byte\n(bits.c:199)";
    "ct_init\n(trees.c:341)" -> "Code\n(trees.c:406)";
    "longest_match\n(deflate.c:387)" -> "MAX_MATCH\n(deflate.c:497)";
    "do_list\n(gzip.c:1722)" -> "TYPE_SIGNED\n(gzip.c:1735)";
    "open_and_stat\n(gzip.c:1225)" -> "AT_FDCWD\n(gzip.c:1228)";
    "main\n(gzip.c:414)" -> "__GETOPT_XCONCAT\n(gzip.c:464)";
    "deflate\n(deflate.c:748)" -> "UPDATE_HASH\n(deflate.c:814)";
    "make_table\n(unlzh.c:134)" -> "right\n(unlzh.c:183)";
    "main\n(gzip.c:414)" -> "optarg\n(gzip.c:566)";
    "deflate_fast\n(deflate.c:660)" -> "UPDATE_HASH\n(deflate.c:701)";
    "inflate_block\n(inflate.c:898)" -> "DUMPBITS\n(inflate.c:921)";
    "copy_block\n(bits.c:190)" -> "flush_outbuf\n(util.c:286)";
    "unzip\n(unzip.c:110)" -> "xalloc_die\n(util.c:472)";
    "inflate\n(inflate.c:945)" -> "wp\n(inflate.c:978)";
    "decode_p\n(unlzh.c:297)" -> "fillbuf\n(unlzh.c:102)";
    "NEXTBYTE\n(inflate.c:648)" -> "fill_inbuf\n(util.c:210)";
    "unzip\n(unzip.c:110)" -> "SH\n(unzip.c:166)";
    "unzip\n(unzip.c:110)" -> "SH\n(unzip.c:126)";
    "xalloc_die\n(util.c:472)" -> "fprintf\n(util.c:474)";
    "deflate_fast\n(deflate.c:660)" -> "NULL\n(deflate.c:730)";
    "NEEDBITS\n(inflate.c:648)" -> "fill_inbuf\n(util.c:210)";
    "inflate\n(inflate.c:945)" -> "flush_output\n(inflate.c:978)";
    "deflate\n(deflate.c:748)" -> "MAX_DIST\n(deflate.c:771)";
    "GETBYTE\n(inflate.c:773)" -> "fill_inbuf\n(util.c:210)";
    "deflate\n(deflate.c:748)" -> "H_SHIFT\n(deflate.c:810)";
    "main\n(gzip.c:414)" -> "Z_SUFFIX\n(gzip.c:455)";
    "unlzh\n(unlzh.c:382)" -> "decode\n(unlzh.c:336)";
    "deflate\n(deflate.c:748)" -> "MIN_MATCH\n(deflate.c:827)";
    "NEXTBYTE\n(inflate.c:813)" -> "fill_inbuf\n(util.c:210)";
    "put_byte\n(bits.c:175)" -> "flush_outbuf\n(util.c:286)";
    "get_method\n(gzip.c:1488)" -> "get_byte\n(gzip.c:1554)";
    "make_ofname\n(gzip.c:1380)" -> "fprintf\n(gzip.c:1397)";
    "init_block\n(trees.c:416)" -> "LENGTH_CODES\n(trees.c:421)";
    "put_byte\n(zip.c:101)" -> "flush_outbuf\n(util.c:286)";
    "unzip\n(unzip.c:110)" -> "EXTHDR\n(unzip.c:116)";
    "lm_init\n(deflate.c:311)" -> "EOF\n(deflate.c:356)";
    "treat_file\n(gzip.c:864)" -> "clear_bufs\n(util.c:200)";
    "main\n(gzip.c:414)" -> "__GETOPT_CONCAT\n(gzip.c:479)";
    "zip\n(zip.c:34)" -> "put_short\n(zip.c:68)";
    "deflate_fast\n(deflate.c:660)" -> "MIN_MATCH\n(deflate.c:676)";
    "deflate\n(deflate.c:748)" -> "MIN_MATCH\n(deflate.c:754)";
    "lm_init\n(deflate.c:311)" -> "HASH_MASK\n(deflate.c:367)";
    "gen_bitlen\n(trees.c:492)" -> "LENGTH_CODES\n(trees.c:515)";
    "main\n(gzip.c:414)" -> "optind\n(gzip.c:620)";
    "fill_inbuf\n(util.c:210)" -> "INBUFSIZ\n(util.c:225)";
    "unzip\n(unzip.c:110)" -> "WARN\n(unzip.c:197)";
    "check_ofname\n(gzip.c:1888)" -> "stderr\n(gzip.c:1893)";
    "treat_file\n(gzip.c:864)" -> "input_eof\n(gzip.c:686)";
    "zip\n(zip.c:34)" -> "GZIP_MAGIC\n(zip.c:49)";
    "abort_gzip_signal\n(gzip.c:2148)" -> "WARNING\n(gzip.c:2152)";
    "try_byte\n(gzip.c:1501)" -> "fill_inbuf\n(util.c:210)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEXTBYTE\n(inflate.c:823)";
    "get_method\n(gzip.c:1488)" -> "PKZIP_MAGIC\n(gzip.c:1654)";
    "copy_stat\n(gzip.c:1935)" -> "fprintf\n(gzip.c:1985)";
    "DECLARE\n(gzip.c:136)" -> "BITS\n(lzw.h:21)";
    "main\n(gzip.c:414)" -> "optind\n(gzip.c:479)";
    "inflate_stored\n(inflate.c:616)" -> "NEXTBYTE\n(inflate.c:636)";
    "zip\n(zip.c:34)" -> "put_long\n(zip.c:101)";
    "get_method\n(gzip.c:1488)" -> "get_byte\n(gzip.c:1535)";
    "check_ofname\n(gzip.c:1888)" -> "xunlink\n(util.c:360)";
    "inflate_codes\n(inflate.c:509)" -> "GETBYTE\n(inflate.c:572)";
    "inflate_dynamic\n(inflate.c:722)" -> "inflate_codes\n(inflate.c:509)";
    "main\n(gzip.c:414)" -> "stderr\n(gzip.c:607)";
    "ct_init\n(trees.c:341)" -> "Len\n(trees.c:394)";
    "init_block\n(trees.c:416)" -> "Freq\n(trees.c:421)";
    "main\n(gzip.c:414)" -> "__GETOPT_CONCAT\n(gzip.c:474)";
    "deflate\n(deflate.c:748)" -> "ct_tally\n(trees.c:968)";
    "build_tree\n(trees.c:618)" -> "pqdownheap\n(trees.c:460)";
    "make_table\n(unlzh.c:134)" -> "head\n(unlzh.c:183)";
    "treat_file\n(gzip.c:864)" -> "fprintf\n(gzip.c:890)";
    "treat_stdin\n(gzip.c:725)" -> "STDIN_FILENO\n(gzip.c:775)";
    "make_ofname\n(gzip.c:1380)" -> "WARNING\n(gzip.c:1400)";
    "send_all_trees\n(trees.c:832)" -> "Len\n(trees.c:846)";
    "read_c_len\n(unlzh.c:235)" -> "left\n(unlzh.c:253)";
    "get_method\n(gzip.c:1488)" -> "fprintf\n(gzip.c:1705)";
    "GETBYTE\n(inflate.c:530)" -> "fill_inbuf\n(util.c:210)";
    "huft_build\n(inflate.c:273)" -> "NULL\n(inflate.c:384)";
    "ct_init\n(trees.c:341)" -> "init_block\n(trees.c:416)";
    "treat_file\n(gzip.c:864)" -> "WARNING\n(gzip.c:1039)";
    "gen_bitlen\n(trees.c:492)" -> "MAX_BITS\n(trees.c:508)";
    "check_ofname\n(gzip.c:1888)" -> "OK\n(gzip.c:1901)";
    "decode_c\n(unlzh.c:270)" -> "CODE_BIT\n(unlzh.c:279)";
    "main\n(gzip.c:414)" -> "optarg\n(gzip.c:510)";
    "discard_input_bytes\n(gzip.c:1461)" -> "updcrc\n(util.c:141)";
    "get_suffix\n(gzip.c:1165)" -> "strequ\n(gzip.c:1184)";
    "unlzw\n(unlzw.c:99)" -> "gzip_error\n(util.c:465)";
    "treat_stdin\n(gzip.c:725)" -> "stderr\n(gzip.c:809)";
    "NEEDBITS\n(inflate.c:537)" -> "fill_inbuf\n(util.c:210)";
    "zip\n(zip.c:34)" -> "OUTBUFSIZ\n(zip.c:51)";
    "scan_tree\n(trees.c:705)" -> "Len\n(trees.c:712)";
    "main\n(gzip.c:414)" -> "true\n(gzip.c:569)";
    "unzip\n(unzip.c:110)" -> "SH\n(unzip.c:178)";
    "lm_init\n(deflate.c:311)" -> "SLOW\n(deflate.c:343)";
    "install_signal_handlers\n(gzip.c:2050)" -> "sa_handler\n(gzip.c:2064)";
    "decode_c\n(unlzh.c:270)" -> "NP\n(unlzh.c:281)";
    "read_c_len\n(unlzh.c:235)" -> "CHAR_BIT\n(unlzh.c:250)";
    "get_method\n(gzip.c:1488)" -> "stderr\n(gzip.c:1640)";
    "get_method\n(gzip.c:1488)" -> "fprintf\n(gzip.c:1538)";
    "treat_file\n(gzip.c:864)" -> "OK\n(gzip.c:932)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEXTBYTE\n(inflate.c:753)";
    "gzip_error\n(util.c:465)" -> "abort_gzip\n(gzip.c:2138)";
    "treat_file\n(gzip.c:864)" -> "stderr\n(gzip.c:991)";
    "inflate\n(inflate.c:945)" -> "flush_window\n(util.c:299)";
    "inflate_block\n(inflate.c:898)" -> "fill_inbuf\n(util.c:210)";
    "deflate\n(deflate.c:748)" -> "INSERT_STRING\n(deflate.c:763)";
    "main\n(gzip.c:414)" -> "optind\n(gzip.c:464)";
    "get_method\n(gzip.c:1488)" -> "get_byte\n(gzip.c:1526)";
    "treat_file\n(gzip.c:864)" -> "create_outfile\n(gzip.c:1087)";
    "treat_file\n(gzip.c:864)" -> "__S_ISTYPE\n(gzip.c:881)";
    "deflate\n(deflate.c:748)" -> "WSIZE\n(deflate.c:819)";
    "do_list\n(gzip.c:1722)" -> "printf\n(gzip.c:1799)";
    "build_tree\n(unpack.c:170)" -> "MAX_PEEK\n(unpack.c:195)";
    "inflate_dynamic\n(inflate.c:722)" -> "wp\n(inflate.c:753)";
    "flush_block\n(trees.c:859)" -> "send_all_trees\n(trees.c:832)";
    "getbits\n(unlzh.c:115)" -> "BITBUFSIZ\n(unlzh.c:120)";
    "deflate\n(deflate.c:748)" -> "fill_window\n(deflate.c:558)";
    "decode_p\n(unlzh.c:297)" -> "NP\n(unlzh.c:302)";
    "main\n(gzip.c:414)" -> "true\n(gzip.c:543)";
    "unlzw\n(unlzw.c:99)" -> "de_stack\n(unlzw.c:250)";
    "make_table\n(unlzh.c:134)" -> "gzip_error\n(util.c:465)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEEDBITS\n(inflate.c:813)";
    "treat_stdin\n(gzip.c:725)" -> "fprintf\n(gzip.c:809)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEEDBITS\n(inflate.c:756)";
    "unlzw\n(unlzw.c:99)" -> "INIT_BITS\n(unlzw.c:206)";
    "abort_gzip\n(gzip.c:2138)" -> "ERROR\n(gzip.c:2141)";
    "lm_init\n(deflate.c:311)" -> "gzip_error\n(util.c:465)";
    "create_outfile\n(gzip.c:1087)" -> "WARNING\n(gzip.c:1148)";
    "treat_stdin\n(gzip.c:725)" -> "clear_bufs\n(util.c:200)";
    "try_byte\n(gzip.c:1700)" -> "fill_inbuf\n(util.c:210)";
    "deflate\n(deflate.c:748)" -> "WMASK\n(deflate.c:763)";
    "do_list\n(gzip.c:1722)" -> "INT_BITS_STRLEN_BOUND\n(gzip.c:1735)";
    "treat_dir\n(gzip.c:2000)" -> "stderr\n(gzip.c:2038)";
    "compress_block\n(trees.c:1021)" -> "END_BLOCK\n(trees.c:1064)";
    "check_zipfile\n(unzip.c:62)" -> "ERROR\n(unzip.c:75)";
    "treat_dir\n(gzip.c:2000)" -> "fprintf\n(gzip.c:2038)";
    "copy_stat\n(gzip.c:1935)" -> "__S_IWRITE\n(gzip.c:1938)";
    "deflate_fast\n(deflate.c:660)" -> "MAX_MATCH\n(deflate.c:676)";
    "put_long\n(zip.c:102)" -> "flush_outbuf\n(util.c:286)";
    "shorten_name\n(gzip.c:1830)" -> "get_suffix\n(gzip.c:1165)";
    "get_byte\n(gzip.c:1507)" -> "fill_inbuf\n(util.c:210)";
    "set_file_type\n(trees.c:1073)" -> "LITERALS\n(trees.c:1080)";
    "compress_block\n(trees.c:1021)" -> "Code\n(trees.c:1043)";
    "treat_file\n(gzip.c:864)" -> "WARN\n(gzip.c:899)";
    "unlzw\n(unlzw.c:99)" -> "tab_prefix\n(unlzw.c:275)";
    "scan_tree\n(trees.c:705)" -> "Freq\n(trees.c:727)";
    "treat_file\n(gzip.c:864)" -> "fprintf\n(gzip.c:1058)";
    "main\n(gzip.c:414)" -> "__GETOPT_ID\n(gzip.c:566)";
    "decode_c\n(unlzh.c:270)" -> "c_table\n(unlzh.c:284)";
    "deflate_fast\n(deflate.c:660)" -> "INSERT_STRING\n(deflate.c:701)";
    "get_method\n(gzip.c:1488)" -> "HEADER_CRC\n(gzip.c:1633)";
    "unlzh\n(unlzh.c:382)" -> "DICSIZ\n(unlzh.c:392)";
    "read_c_len\n(unlzh.c:235)" -> "THRESHOLD\n(unlzh.c:243)";
    "deflate\n(deflate.c:748)" -> "MIN_MATCH\n(deflate.c:796)";
    "install_signal_handlers\n(gzip.c:2050)" -> "SIG_IGN\n(gzip.c:2060)";
    "inflate_codes\n(inflate.c:509)" -> "DUMPBITS\n(inflate.c:571)";
    "huft_build\n(inflate.c:273)" -> "BMAX\n(inflate.c:289)";
    "inflate_block\n(inflate.c:898)" -> "inflate_stored\n(inflate.c:616)";
    "fill_window\n(deflate.c:558)" -> "MAX_DIST\n(deflate.c:572)";
    "deflate\n(deflate.c:748)" -> "WMASK\n(deflate.c:814)";
    "get_method\n(gzip.c:1488)" -> "EXTRA_FIELD\n(gzip.c:1587)";
    "zip\n(zip.c:34)" -> "flush_outbuf\n(util.c:286)";
    "lm_init\n(deflate.c:311)" -> "WSIZE\n(deflate.c:354)";
    "zip\n(zip.c:34)" -> "OUTBUFSIZ\n(zip.c:56)";
    "look_bits\n(unpack.c:252)" -> "read_byte\n(unpack.c:81)";
    "send_tree\n(trees.c:749)" -> "send_code\n(trees.c:779)";
    "huft_build\n(inflate.c:273)" -> "NULL\n(inflate.c:324)";
    "lm_init\n(deflate.c:311)" -> "fill_window\n(deflate.c:558)";
    "get_method\n(gzip.c:1488)" -> "gzip_error\n(util.c:465)";
    "treat_file\n(gzip.c:864)" -> "errno\n(gzip.c:1019)";
    "read_pt_len\n(unlzh.c:200)" -> "CHAR_BIT\n(unlzh.c:216)";
    "NEEDBITS\n(inflate.c:562)" -> "fill_inbuf\n(util.c:210)";
    "rsync_roll\n(deflate.c:614)" -> "RSYNC_WIN\n(deflate.c:634)";
    "inflate_stored\n(inflate.c:616)" -> "fill_inbuf\n(util.c:210)";
    "fill_window\n(deflate.c:558)" -> "MAX_MATCH\n(deflate.c:572)";
    "get_input_size_and_time\n(gzip.c:704)" -> "S_ISREG\n(gzip.c:714)";
    "unzip\n(unzip.c:110)" -> "flush_window\n(util.c:299)";
    "create_outfile\n(gzip.c:1087)" -> "__S_IWRITE\n(gzip.c:1114)";
    "deflate\n(deflate.c:748)" -> "HASH_SIZE\n(deflate.c:810)";
    "inflate_block\n(inflate.c:898)" -> "GETBYTE\n(inflate.c:919)";
    "unzip\n(unzip.c:110)" -> "LOCLEN\n(unzip.c:126)";
    "unlzw\n(unlzw.c:99)" -> "MAXCODE\n(unlzw.c:187)";
    "treat_stdin\n(gzip.c:725)" -> "do_exit\n(gzip.c:2080)";
    "inflate_block\n(inflate.c:898)" -> "NEEDBITS\n(inflate.c:919)";
    "help\n(gzip.c:335)" -> "printf\n(gzip.c:383)";
    "deflate_fast\n(deflate.c:660)" -> "MIN_MATCH\n(deflate.c:701)";
    "get_suffix\n(gzip.c:1165)" -> "NULL\n(gzip.c:1206)";
    "unlzw\n(unlzw.c:99)" -> "tab_suffix\n(unlzw.c:276)";
    "check_zipfile\n(unzip.c:62)" -> "ERROR\n(unzip.c:92)";
    "open_input_file\n(gzip.c:1281)" -> "NULL\n(gzip.c:1287)";
    "flush_block\n(trees.c:859)" -> "init_block\n(trees.c:416)";
    "read_c_len\n(unlzh.c:235)" -> "THRESHOLD\n(unlzh.c:265)";
    "decode\n(unlzh.c:336)" -> "DICSIZ\n(unlzh.c:368)";
    "inflate_codes\n(inflate.c:509)" -> "DUMPBITS\n(inflate.c:535)";
    "init_block\n(trees.c:416)" -> "Freq\n(trees.c:422)";
    "unlzw\n(unlzw.c:99)" -> "MAXCODE\n(unlzw.c:139)";
    "ct_init\n(trees.c:341)" -> "Len\n(trees.c:395)";
    "treat_file\n(gzip.c:864)" -> "WARN\n(gzip.c:914)";
    "deflate\n(deflate.c:748)" -> "MIN_MATCH\n(deflate.c:812)";
    "read_c_len\n(unlzh.c:235)" -> "UCHAR_MAX\n(unlzh.c:243)";
    "main\n(gzip.c:414)" -> "stderr\n(gzip.c:604)";
    "unlzw\n(unlzw.c:99)" -> "get_byte\n(unlzw.c:122)";
    "copy_stat\n(gzip.c:1935)" -> "S_IRWXO\n(gzip.c:1938)";
    "get_method\n(gzip.c:1488)" -> "ERROR\n(gzip.c:1531)";
    "do_list\n(gzip.c:1722)" -> "printf\n(gzip.c:1796)";
    "decode\n(unlzh.c:336)" -> "NC\n(unlzh.c:359)";
    "inflate_codes\n(inflate.c:509)" -> "flush_output\n(inflate.c:595)";
    "main\n(gzip.c:414)" -> "__GETOPT_XCONCAT\n(gzip.c:565)";
    "treat_file\n(gzip.c:864)" -> "atdir_eq\n(gzip.c:825)";
    "treat_file\n(gzip.c:864)" -> "remove_output_file\n(gzip.c:2114)";
    "treat_stdin\n(gzip.c:725)" -> "STDIN_FILENO\n(gzip.c:792)";
    "ct_tally\n(trees.c:968)" -> "Freq\n(trees.c:984)";
    "open_input_file\n(gzip.c:1281)" -> "NULL\n(gzip.c:1354)";
    "treat_file\n(gzip.c:864)" -> "WARNING\n(gzip.c:899)";
    "atdir_set\n(gzip.c:837)" -> "atdir_eq\n(gzip.c:825)";
    "pqdownheap\n(trees.c:460)" -> "smaller\n(trees.c:471)";
    "write_error\n(util.c:496)" -> "abort_gzip\n(gzip.c:2138)";
    "gen_bitlen\n(trees.c:492)" -> "LITERALS\n(trees.c:515)";
    "inflate_codes\n(inflate.c:509)" -> "slide\n(inflate.c:542)";
    "inflate_dynamic\n(inflate.c:722)" -> "GETBYTE\n(inflate.c:834)";
    "make_ofname\n(gzip.c:1380)" -> "stderr\n(gzip.c:1397)";
    "treat_file\n(gzip.c:864)" -> "NULL\n(gzip.c:1035)";
    "unpack\n(unpack.c:213)" -> "read_byte\n(unpack.c:81)";
    "zip\n(zip.c:34)" -> "put_short\n(zip.c:102)";
    "unlzw\n(unlzw.c:99)" -> "tab_suffix\n(unlzw.c:244)";
    "deflate\n(deflate.c:748)" -> "deflate_fast\n(deflate.c:660)";
    "unzip\n(unzip.c:110)" -> "WSIZE\n(unzip.c:151)";
    "check_zipfile\n(unzip.c:62)" -> "CRPFLG\n(unzip.c:88)";
    "ct_init\n(trees.c:341)" -> "gen_codes\n(trees.c:577)";
    "inflate_codes\n(inflate.c:509)" -> "NEEDBITS\n(inflate.c:569)";
    "get_suffix\n(gzip.c:1165)" -> "true\n(gzip.c:1186)";
    "main\n(gzip.c:414)" -> "__GETOPT_CONCAT\n(gzip.c:509)";
    "deflate_fast\n(deflate.c:660)" -> "H_SHIFT\n(deflate.c:713)";
    "build_bl_tree\n(trees.c:799)" -> "BL_CODES\n(trees.c:817)";
    "xunlink\n(util.c:360)" -> "unlink\n(util.c:363)";
    "fill_window\n(deflate.c:558)" -> "WSIZE\n(deflate.c:580)";
    "init_block\n(trees.c:416)" -> "D_CODES\n(trees.c:422)";
    "add_envopt\n(util.c:412)" -> "SEPARATOR\n(util.c:432)";
    "send_bits\n(bits.c:128)" -> "flush_outbuf\n(util.c:286)";
    "check_zipfile\n(unzip.c:62)" -> "LOCFIL\n(unzip.c:70)";
    "check_zipfile\n(unzip.c:62)" -> "ERROR\n(unzip.c:76)";
    "open_input_file\n(gzip.c:1281)" -> "O_NOCTTY\n(gzip.c:1294)";
    "read_c_len\n(unlzh.c:235)" -> "NT\n(unlzh.c:249)";
    "get_method\n(gzip.c:1488)" -> "CHAR_BIT\n(gzip.c:1567)";
    "flush_output\n(inflate.c:546)" -> "flush_window\n(util.c:299)";
    "longest_match\n(deflate.c:387)" -> "MIN_MATCH\n(deflate.c:394)";
    "decode_p\n(unlzh.c:297)" -> "BITBUFSIZ\n(unlzh.c:303)";
    "scan_tree\n(trees.c:705)" -> "Freq\n(trees.c:725)";
    "zip\n(zip.c:34)" -> "warning\n(util.c:478)";
    "create_outfile\n(gzip.c:1087)" -> "stderr\n(gzip.c:1148)";
    "get_method\n(gzip.c:1488)" -> "gzip_base_name\n(util.c:349)";
    "input_eof\n(gzip.c:686)" -> "EOF\n(gzip.c:693)";
    "inflate_codes\n(inflate.c:509)" -> "DUMPBITS\n(inflate.c:559)";
    "fill_inbuf\n(util.c:210)" -> "INBUFSIZ\n(util.c:218)";
    "zip\n(zip.c:34)" -> "put_byte\n(zip.c:78)";
    "treat_file\n(gzip.c:864)" -> "fprintf\n(gzip.c:1039)";
    "copy_stat\n(gzip.c:1935)" -> "do_chown\n(gzip.c:1921)";
    "warning\n(util.c:478)" -> "WARNING\n(util.c:480)";
    "unlzw\n(unlzw.c:99)" -> "tab_suffix\n(unlzw.c:151)";
    "unlzh\n(unlzh.c:382)" -> "write_buf\n(util.c:315)";
    "GETBYTE\n(inflate.c:834)" -> "fill_inbuf\n(util.c:210)";
    "zip\n(zip.c:34)" -> "fprintf\n(zip.c:95)";
    "read_buffer\n(util.c:241)" -> "F_SETFL\n(util.c:261)";
    "unzip\n(unzip.c:110)" -> "SH\n(unzip.c:144)";
    "NEXTBYTE\n(inflate.c:759)" -> "fill_inbuf\n(util.c:210)";
    "main\n(gzip.c:414)" -> "__GETOPT_ID\n(gzip.c:656)";
    "main\n(gzip.c:414)" -> "fprintf\n(gzip.c:630)";
    "copy_stat\n(gzip.c:1935)" -> "fprintf\n(gzip.c:1961)";
    "deflate\n(deflate.c:748)" -> "HASH_BITS\n(deflate.c:814)";
    "copy_stat\n(gzip.c:1935)" -> "WARN\n(gzip.c:1985)";
    "get_byte\n(gzip.c:1637)" -> "fill_inbuf\n(util.c:210)";
    "open_input_file\n(gzip.c:1281)" -> "errno\n(gzip.c:1366)";
    "ct_tally\n(trees.c:968)" -> "LITERALS\n(trees.c:983)";
    "get_method\n(gzip.c:1488)" -> "PACK_MAGIC\n(gzip.c:1664)";
    "treat_file\n(gzip.c:864)" -> "OK\n(gzip.c:890)";
    "treat_file\n(gzip.c:864)" -> "OK\n(gzip.c:980)";
    "get_byte\n(gzip.c:1572)" -> "fill_inbuf\n(util.c:210)";
    "get_method\n(gzip.c:1488)" -> "stderr\n(gzip.c:1711)";
    "read_c_len\n(unlzh.c:235)" -> "c_table\n(unlzh.c:244)";
    "get_byte\n(gzip.c:1636)" -> "fill_inbuf\n(util.c:210)";
    "main\n(gzip.c:414)" -> "version\n(gzip.c:397)";
    "deflate_fast\n(deflate.c:660)" -> "RSYNC_ROLL\n(deflate.c:693)";
    "atdir_set\n(gzip.c:837)" -> "__O_DIRECTORY\n(gzip.c:855)";
    "build_tree\n(trees.c:618)" -> "SMALLEST\n(trees.c:688)";
    "copy_block\n(bits.c:190)" -> "bi_windup\n(bits.c:172)";
    "check_zipfile\n(unzip.c:62)" -> "fprintf\n(unzip.c:89)";
    "treat_file\n(gzip.c:864)" -> "__S_ISTYPE\n(gzip.c:897)";
    "compress_block\n(trees.c:1021)" -> "send_code\n(trees.c:1054)";
    "open_input_file\n(gzip.c:1281)" -> "errno\n(gzip.c:1309)";
    "inflate_dynamic\n(inflate.c:722)" -> "wp\n(inflate.c:749)";
    "treat_file\n(gzip.c:864)" -> "stderr\n(gzip.c:924)";
    "open_and_stat\n(gzip.c:1225)" -> "errno\n(gzip.c:1264)";
    "inflate_codes\n(inflate.c:509)" -> "NEXTBYTE\n(inflate.c:562)";
    "main\n(gzip.c:414)" -> "__GETOPT_ID\n(gzip.c:494)";
    "deflate\n(deflate.c:748)" -> "MIN_LOOKAHEAD\n(deflate.c:771)";
    "copy\n(util.c:117)" -> "INBUFSIZ\n(util.c:126)";
    "NEEDBITS\n(inflate.c:759)" -> "fill_inbuf\n(util.c:210)";
    "unlzw\n(unlzw.c:99)" -> "tab_suffixof\n(unlzw.c:241)";
    "get_byte\n(gzip.c:1590)" -> "fill_inbuf\n(util.c:210)";
    "inflate_stored\n(inflate.c:616)" -> "wp\n(inflate.c:648)";
    "inflate_dynamic\n(inflate.c:722)" -> "NULL\n(inflate.c:783)";
    "check_zipfile\n(unzip.c:62)" -> "LOCSIG\n(unzip.c:72)";
    "finish_out\n(gzip.c:2103)" -> "OK\n(gzip.c:2107)";
    "get_method\n(gzip.c:1488)" -> "WARN\n(gzip.c:1711)";
    "flush_block\n(trees.c:859)" -> "copy_block\n(bits.c:190)";
    "treat_file\n(gzip.c:864)" -> "WARN\n(gzip.c:924)";
    "put_byte\n(bits.c:143)" -> "flush_outbuf\n(util.c:286)";
    "unlzw\n(unlzw.c:99)" -> "INBUFSIZ\n(unlzw.c:169)";
    "unzip\n(unzip.c:110)" -> "WARNING\n(unzip.c:197)";
    "build_tree\n(trees.c:618)" -> "SMALLEST\n(trees.c:684)";
    "send_tree\n(trees.c:749)" -> "REP_3_6\n(trees.c:776)";
    "get_byte\n(gzip.c:1510)" -> "fill_inbuf\n(util.c:210)";
    "zip\n(zip.c:34)" -> "DEFLATED\n(zip.c:51)";
    "compress_block\n(trees.c:1021)" -> "Len\n(trees.c:1043)";
    "deflate\n(deflate.c:748)" -> "MAX_MATCH\n(deflate.c:772)";
    "inflate_stored\n(inflate.c:616)" -> "DUMPBITS\n(inflate.c:655)";
    "send_bits\n(bits.c:128)" -> "OUTBUFSIZ\n(bits.c:143)";
    "inflate_fixed\n(inflate.c:672)" -> "huft_build\n(inflate.c:273)";
    "treat_file\n(gzip.c:864)" -> "S_ISREG\n(gzip.c:897)";
    "deflate\n(deflate.c:748)" -> "head\n(deflate.c:808)";
    "unlzw\n(unlzw.c:99)" -> "INIT_BITS\n(unlzw.c:139)";
    "unlzw\n(unlzw.c:99)" -> "tab_suffixof\n(unlzw.c:276)";
    "open_and_stat\n(gzip.c:1225)" -> "errno\n(gzip.c:1243)";
    "put_byte\n(zip.c:102)" -> "flush_outbuf\n(util.c:286)";
    "try_byte\n(gzip.c:1503)" -> "fill_inbuf\n(util.c:210)";
    "treat_file\n(gzip.c:864)" -> "errno\n(gzip.c:1018)";
    "unzip\n(unzip.c:110)" -> "LOCLEN\n(unzip.c:142)";
    "deflate\n(deflate.c:748)" -> "HASH_BITS\n(deflate.c:819)";
    "make_ofname\n(gzip.c:1380)" -> "WARN\n(gzip.c:1397)";
    "main\n(gzip.c:414)" -> "errno\n(gzip.c:677)";
    "unzip\n(unzip.c:110)" -> "LG\n(unzip.c:167)";
    "do_list\n(gzip.c:1722)" -> "printf\n(gzip.c:1750)";
    "check_zipfile\n(unzip.c:62)" -> "LOCHOW\n(unzip.c:78)";
    "huft_build\n(inflate.c:273)" -> "memzero\n(inflate.c:310)";
    "check_zipfile\n(unzip.c:62)" -> "LOCEXT\n(unzip.c:70)";
    "RSYNC_ROLL\n(deflate.c:693)" -> "rsync_roll\n(deflate.c:614)";
    "inflate_codes\n(inflate.c:509)" -> "NEXTBYTE\n(inflate.c:530)";
    "inflate_codes\n(inflate.c:509)" -> "fill_inbuf\n(util.c:210)";
    "read_buffer\n(util.c:241)" -> "O_NONBLOCK\n(util.c:259)";
    "create_outfile\n(gzip.c:1087)" -> "SIG_BLOCK\n(gzip.c:1113)";
    "get_byte\n(gzip.c:1535)" -> "fill_inbuf\n(util.c:210)";
    "inflate_stored\n(inflate.c:616)" -> "slide\n(inflate.c:649)";
    "main\n(gzip.c:414)" -> "__GETOPT_CONCAT\n(gzip.c:468)";
    "open_input_file\n(gzip.c:1281)" -> "strequ\n(gzip.c:1352)";
    "get_method\n(gzip.c:1488)" -> "OK\n(gzip.c:1564)";
    "get_byte\n(gzip.c:1554)" -> "fill_inbuf\n(util.c:210)";
    "decode_p\n(unlzh.c:297)" -> "CHAR_BIT\n(unlzh.c:301)";
    "copy_stat\n(gzip.c:1935)" -> "errno\n(gzip.c:1987)";
    "init_block\n(trees.c:416)" -> "END_BLOCK\n(trees.c:425)";
    "deflate\n(deflate.c:748)" -> "HASH_MASK\n(deflate.c:808)";
    "copy_block\n(bits.c:190)" -> "OUTBUFSIZ\n(bits.c:208)";
    "create_outfile\n(gzip.c:1087)" -> "O_EXCL\n(gzip.c:1090)";
    "lzw\n(lzw.c:13)" -> "ERROR\n(lzw.c:20)";
    "flush_block\n(trees.c:859)" -> "UNKNOWN\n(trees.c:871)";
    "try_help\n(gzip.c:327)" -> "stderr\n(gzip.c:329)";
    "main\n(gzip.c:414)" -> "__GETOPT_XCONCAT\n(gzip.c:657)";
    "set_file_type\n(trees.c:1073)" -> "warning\n(util.c:478)";
    "unlzw\n(unlzw.c:99)" -> "DIST_BUFSIZE\n(unlzw.c:250)";
    "do_list\n(gzip.c:1722)" -> "printf\n(gzip.c:1804)";
    "do_list\n(gzip.c:1722)" -> "stdout\n(gzip.c:1801)";
    "copy_block\n(bits.c:190)" -> "put_short\n(bits.c:199)";
    "unzip\n(unzip.c:110)" -> "LG\n(unzip.c:179)";
    "ct_tally\n(trees.c:968)" -> "DIST_BUFSIZE\n(trees.c:1011)";
    "send_tree\n(trees.c:749)" -> "Len\n(trees.c:773)";
    "GETBYTE\n(inflate.c:823)" -> "fill_inbuf\n(util.c:210)";
    "treat_file\n(gzip.c:864)" -> "unlinkat\n(gzip.c:1033)";
    "NEXTBYTE\n(inflate.c:557)" -> "fill_inbuf\n(util.c:210)";
    "deflate\n(deflate.c:748)" -> "HASH_SIZE\n(deflate.c:819)";
    "get_method\n(gzip.c:1488)" -> "ENCRYPTED\n(gzip.c:1537)";
    "decode_c\n(unlzh.c:270)" -> "UCHAR_MAX\n(unlzh.c:277)";
    "GETBYTE\n(inflate.c:572)" -> "fill_inbuf\n(util.c:210)";
    "main\n(gzip.c:414)" -> "finish_out\n(gzip.c:2103)";
    "get_method\n(gzip.c:1488)" -> "TYPE_MAXIMUM\n(gzip.c:1557)";
    "compress_block\n(trees.c:1021)" -> "Code\n(trees.c:1038)";
    "read_error\n(util.c:483)" -> "fprintf\n(util.c:491)";
    "deflate\n(deflate.c:748)" -> "NULL\n(deflate.c:858)";
    "copy_stat\n(gzip.c:1935)" -> "__S_IREAD\n(gzip.c:1938)";
    "deflate_fast\n(deflate.c:660)" -> "ct_tally\n(trees.c:968)";
    "ct_tally\n(trees.c:968)" -> "Freq\n(trees.c:975)";
    "main\n(gzip.c:414)" -> "do_exit\n(gzip.c:2080)";
    "inflate_dynamic\n(inflate.c:722)" -> "huft_free\n(inflate.c:487)";
    "treat_file\n(gzip.c:864)" -> "fprintf\n(gzip.c:1065)";
    "deflate\n(deflate.c:748)" -> "INSERT_STRING\n(deflate.c:814)";
    "NEXTBYTE\n(inflate.c:913)" -> "fill_inbuf\n(util.c:210)";
    "inflate_codes\n(inflate.c:509)" -> "GETBYTE\n(inflate.c:569)";
    "set_file_type\n(trees.c:1073)" -> "Freq\n(trees.c:1080)";
    "main\n(gzip.c:414)" -> "__GETOPT_XCONCAT\n(gzip.c:510)";
    "main\n(gzip.c:414)" -> "optind\n(gzip.c:657)";
    "get_method\n(gzip.c:1488)" -> "ERROR\n(gzip.c:1548)";
    "NEEDBITS\n(inflate.c:530)" -> "fill_inbuf\n(util.c:210)";
    "read_c_len\n(unlzh.c:235)" -> "NC\n(unlzh.c:266)";
    "unzip\n(unzip.c:110)" -> "LG\n(unzip.c:126)";
    "huft_build\n(inflate.c:273)" -> "BMAX\n(inflate.c:337)";
    "get_suffix\n(gzip.c:1165)" -> "false\n(gzip.c:1177)";
    "unzip\n(unzip.c:110)" -> "LG\n(unzip.c:146)";
    "main\n(gzip.c:414)" -> "OPTIONS_VAR\n(gzip.c:433)";
    "unlzw\n(unlzw.c:99)" -> "CLEAR\n(unlzw.c:201)";
    "unzip\n(unzip.c:110)" -> "SH\n(unzip.c:195)";
    "deflate\n(deflate.c:748)" -> "H_SHIFT\n(deflate.c:808)";
    "decode_p\n(unlzh.c:297)" -> "NP\n(unlzh.c:308)";
    "RSYNC_ROLL\n(deflate.c:862)" -> "rsync_roll\n(deflate.c:614)";
    "inflate_codes\n(inflate.c:509)" -> "wp\n(inflate.c:530)";
    "unpack\n(unpack.c:213)" -> "look_bits\n(unpack.c:239)";
    "deflate_fast\n(deflate.c:660)" -> "HASH_SIZE\n(deflate.c:713)";
    "get_suffix\n(gzip.c:1165)" -> "strequ\n(gzip.c:1210)";
    "compress_block\n(trees.c:1021)" -> "send_code\n(trees.c:1064)";
    "decode_c\n(unlzh.c:270)" -> "MAXMATCH\n(unlzh.c:277)";
    "treat_file\n(gzip.c:864)" -> "stderr\n(gzip.c:1039)";
    "try_byte\n(unlzh.c:108)" -> "fill_inbuf\n(util.c:210)";
    "open_and_stat\n(gzip.c:1225)" -> "atdir_set\n(gzip.c:837)";
    "copy_stat\n(gzip.c:1935)" -> "WARN\n(gzip.c:1961)";
    "deflate\n(deflate.c:748)" -> "TOO_FAR\n(deflate.c:782)";
    "fill_window\n(deflate.c:558)" -> "MIN_MATCH\n(deflate.c:605)";
    "get_method\n(gzip.c:1488)" -> "WARN\n(gzip.c:1564)";
    "deflate_fast\n(deflate.c:660)" -> "fill_window\n(deflate.c:558)";
    "longest_match\n(deflate.c:387)" -> "WMASK\n(deflate.c:517)";
    "open_and_stat\n(gzip.c:1225)" -> "errno\n(gzip.c:1266)";
    "rsync_roll\n(deflate.c:614)" -> "RSYNC_WIN\n(deflate.c:625)";
    "unzip\n(unzip.c:110)" -> "LOCSIZ\n(unzip.c:144)";
    "compress_block\n(trees.c:1021)" -> "Code\n(trees.c:1064)";
    "treat_dir\n(gzip.c:2000)" -> "MAX_PATH_LEN\n(gzip.c:2005)";
    "unzip\n(unzip.c:110)" -> "STORED\n(unzip.c:140)";
    "getbits\n(unlzh.c:115)" -> "fillbuf\n(unlzh.c:102)";
    "get_method\n(gzip.c:1488)" -> "LZH_MAGIC\n(gzip.c:1673)";
    "get_byte\n(unzip.c:164)" -> "fill_inbuf\n(util.c:210)";
    "main\n(gzip.c:414)" -> "__GETOPT_CONCAT\n(gzip.c:620)";
    "make_table\n(unlzh.c:134)" -> "head\n(unlzh.c:186)";
    "build_tree\n(trees.c:618)" -> "pqremove\n(trees.c:666)";
    "create_outfile\n(gzip.c:1087)" -> "SIG_SETMASK\n(gzip.c:1116)";
    "deflate\n(deflate.c:748)" -> "MIN_MATCH\n(deflate.c:819)";
    "main\n(gzip.c:414)" -> "__GETOPT_XCONCAT\n(gzip.c:656)";
    "treat_file\n(gzip.c:864)" -> "__S_IFREG\n(gzip.c:897)";
    "inflate_stored\n(inflate.c:616)" -> "DUMPBITS\n(inflate.c:632)";
    "decode_c\n(unlzh.c:270)" -> "BITBUFSIZ\n(unlzh.c:286)";
    "decode\n(unlzh.c:336)" -> "DICSIZ\n(unlzh.c:371)";
    "unlzw\n(unlzw.c:99)" -> "fprintf\n(unlzw.c:125)";
    "gen_bitlen\n(trees.c:492)" -> "Len\n(trees.c:561)";
    "treat_file\n(gzip.c:864)" -> "EINVAL\n(gzip.c:1019)";
    "do_list\n(gzip.c:1722)" -> "stdout\n(gzip.c:1758)";
    "zip\n(zip.c:34)" -> "put_long\n(zip.c:102)";
    "open_input_file\n(gzip.c:1281)" -> "open_and_stat\n(gzip.c:1225)";
    "read_tree\n(unpack.c:113)" -> "LITERALS\n(unpack.c:140)";
    "read_c_len\n(unlzh.c:235)" -> "UCHAR_MAX\n(unlzh.c:265)";
    "unzip\n(unzip.c:110)" -> "LOCCRC\n(unzip.c:125)";
    "open_input_file\n(gzip.c:1281)" -> "ENOENT\n(gzip.c:1347)";
    "read_pt_len\n(unlzh.c:200)" -> "make_table\n(unlzh.c:134)";
    "main\n(gzip.c:414)" -> "__GETOPT_ID\n(gzip.c:468)";
    "read_c_len\n(unlzh.c:235)" -> "right\n(unlzh.c:252)";
    "treat_file\n(gzip.c:864)" -> "make_ofname\n(gzip.c:1380)";
    "check_zipfile\n(unzip.c:62)" -> "fprintf\n(unzip.c:73)";
    "deflate_fast\n(deflate.c:660)" -> "NULL\n(deflate.c:740)";
    "fill_window\n(deflate.c:558)" -> "head\n(deflate.c:588)";
    "put_byte\n(zip.c:78)" -> "flush_outbuf\n(util.c:286)";
    "do_exit\n(gzip.c:2080)" -> "NULL\n(gzip.c:2088)";
    "send_all_trees\n(trees.c:832)" -> "send_tree\n(trees.c:749)";
    "flush_block\n(trees.c:859)" -> "DYN_TREES\n(trees.c:943)";
    "decode\n(unlzh.c:336)" -> "THRESHOLD\n(unlzh.c:359)";
    "init_block\n(trees.c:416)" -> "Freq\n(trees.c:425)";
    "zip\n(zip.c:34)" -> "stderr\n(zip.c:95)";
    "main\n(gzip.c:414)" -> "__GETOPT_CONCAT\n(gzip.c:510)";
    "treat_file\n(gzip.c:864)" -> "__S_ISVTX\n(gzip.c:922)";
    "get_method\n(gzip.c:1488)" -> "get_byte\n(gzip.c:1590)";
    "deflate_fast\n(deflate.c:660)" -> "HASH_MASK\n(deflate.c:713)";
    "treat_stdin\n(gzip.c:725)" -> "STDIN_FILENO\n(gzip.c:729)";
    "inflate_stored\n(inflate.c:616)" -> "GETBYTE\n(inflate.c:648)";
    "remove_output_file\n(gzip.c:2114)" -> "SIG_BLOCK\n(gzip.c:2120)";
    "shorten_name\n(gzip.c:1830)" -> "NULL\n(gzip.c:1834)";
    "check_zipfile\n(unzip.c:62)" -> "DEFLATED\n(unzip.c:79)";
    "gen_codes\n(trees.c:577)" -> "Code\n(trees.c:603)";
    "read_c_len\n(unlzh.c:235)" -> "MAXMATCH\n(unlzh.c:266)";
    "copy_block\n(bits.c:190)" -> "put_byte\n(bits.c:208)";
    "treat_file\n(gzip.c:864)" -> "fprintf\n(gzip.c:932)";
    "get_input_size_and_time\n(gzip.c:704)" -> "__S_IFMT\n(gzip.c:714)";
    "main\n(gzip.c:414)" -> "stderr\n(gzip.c:602)";
    "check_ofname\n(gzip.c:1888)" -> "ERROR\n(gzip.c:1907)";
    "unlzw\n(unlzw.c:99)" -> "BIT_MASK\n(unlzw.c:128)";
    "gzip_error\n(util.c:465)" -> "stderr\n(util.c:467)";
    "main\n(gzip.c:414)" -> "NULL\n(gzip.c:493)";
    "put_byte\n(zip.c:49)" -> "flush_outbuf\n(util.c:286)";
    "NEXTBYTE\n(inflate.c:639)" -> "fill_inbuf\n(util.c:210)";
    "main\n(gzip.c:414)" -> "__GETOPT_ID\n(gzip.c:510)";
    "FLUSH_BLOCK\n(deflate.c:877)" -> "flush_block\n(trees.c:859)";
    "make_ofname\n(gzip.c:1380)" -> "WARNING\n(gzip.c:1454)";
    "send_code\n(trees.c:782)" -> "send_bits\n(bits.c:128)";
    "get_suffix\n(gzip.c:1165)" -> "MAX_SUFFIX\n(gzip.c:1202)";
    "get_method\n(gzip.c:1488)" -> "PACKED\n(gzip.c:1666)";
    "init_block\n(trees.c:416)" -> "BL_CODES\n(trees.c:423)";
    "get_method\n(gzip.c:1488)" -> "get_byte\n(gzip.c:1610)";
    "compress_block\n(trees.c:1021)" -> "send_bits\n(bits.c:128)";
    "open_input_file\n(gzip.c:1281)" -> "get_suffix\n(gzip.c:1165)";
    "unlzw\n(unlzw.c:99)" -> "tab_prefixof\n(unlzw.c:242)";
    "decode\n(unlzh.c:336)" -> "DICSIZ\n(unlzh.c:354)";
    "check_zipfile\n(unzip.c:62)" -> "fprintf\n(unzip.c:80)";
    "unlzw\n(unlzw.c:99)" -> "BITS\n(unlzw.c:131)";
    "unlzh\n(unlzh.c:382)" -> "decode_start\n(unlzh.c:327)";
    "get_byte\n(unlzw.c:122)" -> "fill_inbuf\n(util.c:210)";
    "put_short\n(zip.c:102)" -> "flush_outbuf\n(util.c:286)";
    "treat_stdin\n(gzip.c:725)" -> "stderr\n(gzip.c:743)";
    "build_tree\n(trees.c:618)" -> "SMALLEST\n(trees.c:683)";
    "inflate_codes\n(inflate.c:509)" -> "NEEDBITS\n(inflate.c:530)";
    "init_getbits\n(unlzh.c:124)" -> "CHAR_BIT\n(unlzh.c:127)";
    "inflate_stored\n(inflate.c:616)" -> "NEEDBITS\n(inflate.c:648)";
    "deflate\n(deflate.c:748)" -> "MIN_MATCH\n(deflate.c:768)";
    "inflate_stored\n(inflate.c:616)" -> "flush_window\n(util.c:299)";
    "deflate_fast\n(deflate.c:660)" -> "RSYNC_ROLL\n(deflate.c:722)";
    "main\n(gzip.c:414)" -> "__GETOPT_CONCAT\n(gzip.c:565)";
    "DECLARE\n(gzip.c:136)" -> "DECLARE\n(gzip.h:112)";
    "copy_stat\n(gzip.c:1935)" -> "WARNING\n(gzip.c:1961)";
    "get_method\n(gzip.c:1488)" -> "try_byte\n(gzip.c:1513)";
    "make_ofname\n(gzip.c:1380)" -> "OK\n(gzip.c:1397)";
    "build_tree\n(trees.c:618)" -> "Freq\n(trees.c:635)";
    "put_ubyte\n(unpack.c:258)" -> "flush_window\n(util.c:299)";
    "gen_codes\n(trees.c:577)" -> "bi_reverse\n(bits.c:157)";
    "get_method\n(gzip.c:1488)" -> "CHAR_BIT\n(gzip.c:1557)";
    "deflate\n(deflate.c:748)" -> "WMASK\n(deflate.c:819)";
    "atdir_set\n(gzip.c:837)" -> "open\n(gzip.c:855)";
    "inflate_block\n(inflate.c:898)" -> "NEEDBITS\n(inflate.c:913)";
    "deflate_fast\n(deflate.c:660)" -> "max_insert_length\n(deflate.c:697)";
    "inflate_block\n(inflate.c:898)" -> "wp\n(inflate.c:913)";
    "read_c_len\n(unlzh.c:235)" -> "CBIT\n(unlzh.c:242)";
    "inflate_dynamic\n(inflate.c:722)" -> "GETBYTE\n(inflate.c:823)";
    "decode_c\n(unlzh.c:270)" -> "DICBIT\n(unlzh.c:281)";
    "open_input_file\n(gzip.c:1281)" -> "errno\n(gzip.c:1347)";
    "inflate_block\n(inflate.c:898)" -> "inflate_fixed\n(inflate.c:672)";
    "open_input_file\n(gzip.c:1281)" -> "O_NONBLOCK\n(gzip.c:1294)";
    "read_c_len\n(unlzh.c:235)" -> "CBIT\n(unlzh.c:240)";
    "read_buffer\n(util.c:241)" -> "INT_MAX\n(util.c:247)";
    "build_tree\n(unpack.c:170)" -> "prefix_len\n(unpack.c:202)";
    "write_buf\n(util.c:315)" -> "write_buffer\n(util.c:272)";
    "check_zipfile\n(unzip.c:62)" -> "EXTFLG\n(unzip.c:96)";
    "NEXTBYTE\n(inflate.c:572)" -> "fill_inbuf\n(util.c:210)";
    "deflate\n(deflate.c:748)" -> "H_SHIFT\n(deflate.c:812)";
    "ct_init\n(trees.c:341)" -> "MAX_BITS\n(trees.c:391)";
    "NEXTBYTE\n(inflate.c:756)" -> "fill_inbuf\n(util.c:210)";
    "main\n(gzip.c:414)" -> "__GETOPT_XCONCAT\n(gzip.c:566)";
    "decode_p\n(unlzh.c:297)" -> "getbits\n(unlzh.c:115)";
    "fillbuf\n(unlzh.c:102)" -> "CHAR_BIT\n(unlzh.c:110)";
    "unpack\n(unpack.c:213)" -> "read_tree\n(unpack.c:113)";
    "main\n(gzip.c:414)" -> "read_error\n(util.c:483)";
    "get_method\n(gzip.c:1488)" -> "ERROR\n(gzip.c:1643)";
    "inflate_dynamic\n(inflate.c:722)" -> "GETBYTE\n(inflate.c:813)";
    "treat_file\n(gzip.c:864)" -> "stderr\n(gzip.c:907)";
    "read_c_len\n(unlzh.c:235)" -> "make_table\n(unlzh.c:134)";
    "make_table\n(unlzh.c:134)" -> "WSIZE\n(unlzh.c:183)";
    "treat_file\n(gzip.c:864)" -> "get_method\n(gzip.c:1488)";
    "put_byte\n(bits.c:198)" -> "flush_outbuf\n(util.c:286)";
    "deflate\n(deflate.c:748)" -> "head\n(deflate.c:810)";
    "inflate_codes\n(inflate.c:509)" -> "WSIZE\n(inflate.c:593)";
    "ct_init\n(trees.c:341)" -> "LITERALS\n(trees.c:401)";
    "deflate\n(deflate.c:748)" -> "INSERT_STRING\n(deflate.c:808)";
    "init_block\n(trees.c:416)" -> "LITERALS\n(trees.c:421)";
    "get_method\n(gzip.c:1488)" -> "stderr\n(gzip.c:1564)";
    "unzip\n(unzip.c:110)" -> "ERROR\n(unzip.c:210)";
    "zip\n(zip.c:34)" -> "lm_init\n(deflate.c:311)";
    "treat_file\n(gzip.c:864)" -> "open_input_file\n(gzip.c:1281)";
    "lm_init\n(deflate.c:311)" -> "HASH_SIZE\n(deflate.c:324)";
    "do_list\n(gzip.c:1722)" -> "INT_STRLEN_BOUND\n(gzip.c:1735)";
    "put_long\n(zip.c:101)" -> "flush_outbuf\n(util.c:286)";
    "try_help\n(gzip.c:327)" -> "do_exit\n(gzip.c:2080)";
    "ct_init\n(trees.c:341)" -> "LENGTH_CODES\n(trees.c:401)";
    "deflate\n(deflate.c:748)" -> "WMASK\n(deflate.c:810)";
    "treat_file\n(gzip.c:864)" -> "__S_IFMT\n(gzip.c:897)";
    "check_zipfile\n(unzip.c:62)" -> "SH\n(unzip.c:70)";
    "create_outfile\n(gzip.c:1087)" -> "progerror\n(gzip.c:404)";
    "main\n(gzip.c:414)" -> "__GETOPT_XCONCAT\n(gzip.c:511)";
    "fill_window\n(deflate.c:558)" -> "WSIZE\n(deflate.c:572)";
    "unzip\n(unzip.c:110)" -> "get_byte\n(unzip.c:176)";
    "decode_p\n(unlzh.c:297)" -> "left\n(unlzh.c:306)";
    "copy\n(util.c:117)" -> "read_error\n(util.c:483)";
    "treat_file\n(gzip.c:864)" -> "OK\n(gzip.c:914)";
    "open_and_stat\n(gzip.c:1225)" -> "__S_IFLNK\n(gzip.c:1241)";
    "inflate_dynamic\n(inflate.c:722)" -> "wp\n(inflate.c:756)";
    "zip\n(zip.c:34)" -> "put_byte\n(zip.c:50)";
    "build_bl_tree\n(trees.c:799)" -> "build_tree\n(trees.c:618)";
    "gzip_base_name\n(util.c:349)" -> "strlwr\n(util.c:334)";
    "version\n(gzip.c:397)" -> "printf\n(gzip.c:401)";
    "huft_build\n(inflate.c:273)" -> "N_MAX\n(inflate.c:301)";
    "main\n(gzip.c:414)" -> "optarg\n(gzip.c:565)";
    "inflate_codes\n(inflate.c:509)" -> "DUMPBITS\n(inflate.c:539)";
    "inflate_block\n(inflate.c:898)" -> "inflate_dynamic\n(inflate.c:722)";
    "unzip\n(unzip.c:110)" -> "LG\n(unzip.c:166)";
    "gen_bitlen\n(trees.c:492)" -> "Len\n(trees.c:513)";
    "do_list\n(gzip.c:1722)" -> "printf\n(gzip.c:1743)";
    "do_list\n(gzip.c:1722)" -> "printf\n(gzip.c:1756)";
    "gen_bitlen\n(trees.c:492)" -> "HEAP_SIZE\n(trees.c:515)";
    "get_method\n(gzip.c:1488)" -> "get_byte\n(gzip.c:1637)";
    "inflate_dynamic\n(inflate.c:722)" -> "wp\n(inflate.c:823)";
    "put_byte\n(bits.c:199)" -> "flush_outbuf\n(util.c:286)";
    "deflate\n(deflate.c:748)" -> "INSERT_STRING\n(deflate.c:810)";
    "inflate_codes\n(inflate.c:509)" -> "wp\n(inflate.c:604)";
    "treat_dir\n(gzip.c:2000)" -> "progerror\n(gzip.c:404)";
    "create_outfile\n(gzip.c:1087)" -> "EEXIST\n(gzip.c:1130)";
    "create_outfile\n(gzip.c:1087)" -> "fprintf\n(gzip.c:1148)";
    "fill_window\n(deflate.c:558)" -> "WSIZE\n(deflate.c:578)";
    "flush_block\n(trees.c:859)" -> "bi_windup\n(bits.c:172)";
    "get_byte\n(unzip.c:176)" -> "fill_inbuf\n(util.c:210)";
    "GETBYTE\n(inflate.c:537)" -> "fill_inbuf\n(util.c:210)";
    "unzip\n(unzip.c:110)" -> "updcrc\n(util.c:141)";
    "main\n(gzip.c:414)" -> "__GETOPT_ID\n(gzip.c:474)";
    "zip\n(zip.c:34)" -> "updcrc\n(util.c:141)";
    "gen_bitlen\n(trees.c:492)" -> "Freq\n(trees.c:561)";
    "main\n(gzip.c:414)" -> "errno\n(gzip.c:679)";
    "deflate_fast\n(deflate.c:660)" -> "MIN_MATCH\n(deflate.c:737)";
    "NEEDBITS\n(inflate.c:639)" -> "fill_inbuf\n(util.c:210)";
    "check_zipfile\n(unzip.c:62)" -> "LOCFLG\n(unzip.c:96)";
    "decode_c\n(unlzh.c:270)" -> "MAXMATCH\n(unlzh.c:291)";
    "decode_p\n(unlzh.c:297)" -> "head\n(unlzh.c:305)";
    "build_tree\n(trees.c:618)" -> "SMALLEST\n(trees.c:667)";
    "unlzh\n(unlzh.c:382)" -> "OK\n(unlzh.c:397)";
    "compress_block\n(trees.c:1021)" -> "LITERALS\n(trees.c:1043)";
    "inflate_dynamic\n(inflate.c:722)" -> "GETBYTE\n(inflate.c:753)";
    "fill_window\n(deflate.c:558)" -> "HASH_BITS\n(deflate.c:586)";
    "pqdownheap\n(trees.c:460)" -> "Freq\n(trees.c:468)";
    "copy_block\n(bits.c:190)" -> "OUTBUFSIZ\n(bits.c:198)";
    "NEEDBITS\n(inflate.c:756)" -> "fill_inbuf\n(util.c:210)";
    "do_list\n(gzip.c:1722)" -> "printf\n(gzip.c:1794)";
    "check_zipfile\n(unzip.c:62)" -> "ERROR\n(unzip.c:84)";
    "zip\n(zip.c:34)" -> "bi_init\n(bits.c:106)";
    "flush_window\n(util.c:299)" -> "write_buf\n(util.c:315)";
    "read_c_len\n(unlzh.c:235)" -> "head\n(unlzh.c:252)";
    "open_input_file\n(gzip.c:1281)" -> "NULL\n(gzip.c:1315)";
    "treat_stdin\n(gzip.c:725)" -> "get_method\n(gzip.c:1488)";
    "unzip\n(unzip.c:110)" -> "stderr\n(unzip.c:189)";
    "get_method\n(gzip.c:1488)" -> "LZW_MAGIC\n(gzip.c:1668)";
    "main\n(gzip.c:414)" -> "__GETOPT_CONCAT\n(gzip.c:511)";
    "get_byte\n(unzip.c:150)" -> "fill_inbuf\n(util.c:210)";
    "make_ofname\n(gzip.c:1380)" -> "OK\n(gzip.c:1450)";
    "unlzw\n(unlzw.c:99)" -> "INBUF_EXTRA\n(unlzw.c:168)";
    "get_byte\n(gzip.c:1551)" -> "fill_inbuf\n(util.c:210)";
    "treat_file\n(gzip.c:864)" -> "stderr\n(gzip.c:1060)";
    "do_list\n(gzip.c:1722)" -> "stdout\n(gzip.c:1755)";
    "main\n(gzip.c:414)" -> "__GETOPT_CONCAT\n(gzip.c:656)";
    "get_method\n(gzip.c:1488)" -> "OLD_GZIP_MAGIC\n(gzip.c:1524)";
    "get_method\n(gzip.c:1488)" -> "get_byte\n(gzip.c:1551)";
    "treat_file\n(gzip.c:864)" -> "OK\n(gzip.c:950)";
    "zip\n(zip.c:34)" -> "OS_CODE\n(zip.c:78)";
    "main\n(gzip.c:414)" -> "getopt_long\n(gzip.c:501)";
    "get_method\n(gzip.c:1488)" -> "try_byte\n(gzip.c:1700)";
    "decode_c\n(unlzh.c:270)" -> "WSIZE\n(unlzh.c:288)";
    "read_c_len\n(unlzh.c:235)" -> "c_table\n(unlzh.c:266)";
    "unlzw\n(unlzw.c:99)" -> "stderr\n(unlzw.c:125)";
    "inflate_codes\n(inflate.c:509)" -> "flush_window\n(util.c:299)";
    "deflate\n(deflate.c:748)" -> "flush_block\n(trees.c:859)";
    "inflate_codes\n(inflate.c:509)" -> "NEXTBYTE\n(inflate.c:557)";
    "fill_window\n(deflate.c:558)" -> "EOF\n(deflate.c:567)";
    "put_byte\n(zip.c:50)" -> "flush_outbuf\n(util.c:286)";
    "treat_file\n(gzip.c:864)" -> "treat_stdin\n(gzip.c:725)";
    "unlzw\n(unlzw.c:99)" -> "tab_prefix\n(unlzw.c:148)";
    "create_outfile\n(gzip.c:1087)" -> "S_IWUSR\n(gzip.c:1114)";
    "flush_block\n(trees.c:859)" -> "STATIC_TREES\n(trees.c:939)";
    "deflate\n(deflate.c:748)" -> "H_SHIFT\n(deflate.c:819)";
    "get_suffix\n(gzip.c:1165)" -> "NULL\n(gzip.c:1214)";
    "fill_inbuf\n(util.c:210)" -> "read_error\n(util.c:483)";
    "deflate_fast\n(deflate.c:660)" -> "MAX_MATCH\n(deflate.c:737)";
    "main\n(gzip.c:414)" -> "NULL\n(gzip.c:434)";
    "get_method\n(gzip.c:1488)" -> "STDOUT_FILENO\n(gzip.c:1685)";
    "create_outfile\n(gzip.c:1087)" -> "check_ofname\n(gzip.c:1888)";
    "build_tree\n(trees.c:618)" -> "LITERALS\n(trees.c:632)";
    "make_ofname\n(gzip.c:1380)" -> "fprintf\n(gzip.c:1415)";
    "do_list\n(gzip.c:1722)" -> "TYPE_WIDTH\n(gzip.c:1735)";
    "deflate_fast\n(deflate.c:660)" -> "MIN_MATCH\n(deflate.c:713)";
    "put_byte\n(bits.c:208)" -> "flush_outbuf\n(util.c:286)";
    "fillbuf\n(unlzh.c:102)" -> "try_byte\n(unlzh.c:108)";
    "FLUSH_BLOCK\n(deflate.c:730)" -> "flush_block\n(trees.c:859)";
    "treat_file\n(gzip.c:864)" -> "stderr\n(gzip.c:890)";
    "ct_init\n(trees.c:341)" -> "LENGTH_CODES\n(trees.c:359)";
    "unzip\n(unzip.c:110)" -> "fprintf\n(unzip.c:189)";
    "decode\n(unlzh.c:336)" -> "decode_c\n(unlzh.c:270)";
    "send_tree\n(trees.c:749)" -> "Code\n(trees.c:779)";
    "unzip\n(unzip.c:110)" -> "LOCSIG\n(unzip.c:195)";
    "get_method\n(gzip.c:1488)" -> "HEADER_CRC\n(gzip.c:1575)";
    "file_read\n(zip.c:115)" -> "updcrc\n(util.c:141)";
    "inflate\n(inflate.c:945)" -> "wp\n(inflate.c:954)";
    "main\n(gzip.c:414)" -> "try_help\n(gzip.c:327)";
    "treat_file\n(gzip.c:864)" -> "write_error\n(util.c:496)";
    "check_zipfile\n(unzip.c:62)" -> "LOCFLG\n(unzip.c:88)";
    "inflate_block\n(inflate.c:898)" -> "NEXTBYTE\n(inflate.c:913)";
    "send_tree\n(trees.c:749)" -> "send_code\n(trees.c:782)";
    "create_outfile\n(gzip.c:1087)" -> "S_IRUSR\n(gzip.c:1114)";
    "treat_file\n(gzip.c:864)" -> "fprintf\n(gzip.c:1067)";
    "deflate\n(deflate.c:748)" -> "H_SHIFT\n(deflate.c:814)";
    "fill_window\n(deflate.c:558)" -> "NIL\n(deflate.c:588)";
    "put_byte\n(zip.c:68)" -> "flush_outbuf\n(util.c:286)";
    "set_file_type\n(trees.c:1073)" -> "BINARY\n(trees.c:1082)";
    "warning\n(util.c:478)" -> "WARN\n(util.c:480)";
    "inflate_dynamic\n(inflate.c:722)" -> "DUMPBITS\n(inflate.c:825)";
    "get_method\n(gzip.c:1488)" -> "TYPE_MAXIMUM\n(gzip.c:1567)";
    "send_tree\n(trees.c:749)" -> "Len\n(trees.c:779)";
    "decode_c\n(unlzh.c:270)" -> "read_c_len\n(unlzh.c:235)";
    "unpack\n(unpack.c:213)" -> "clear_bitbuf\n(unpack.c:226)";
    "compress_block\n(trees.c:1021)" -> "Len\n(trees.c:1054)";
    "read_c_len\n(unlzh.c:235)" -> "UCHAR_MAX\n(unlzh.c:266)";
    "progerror\n(gzip.c:404)" -> "errno\n(gzip.c:408)";
    "copy_stat\n(gzip.c:1935)" -> "errno\n(gzip.c:1964)";
    "main\n(gzip.c:414)" -> "gzip_base_name\n(util.c:349)";
    "strlwr\n(util.c:334)" -> "tolow\n(util.c:339)";
    "version\n(gzip.c:397)" -> "license\n(gzip.c:388)";
    "deflate\n(deflate.c:748)" -> "MIN_MATCH\n(deflate.c:873)";
    "huft_free\n(inflate.c:487)" -> "NULL\n(inflate.c:494)";
    "fill_inbuf\n(util.c:210)" -> "errno\n(util.c:230)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEXTBYTE\n(inflate.c:813)";
    "NEEDBITS\n(inflate.c:813)" -> "fill_inbuf\n(util.c:210)";
    "zip\n(zip.c:34)" -> "put_long\n(zip.c:68)";
    "ct_init\n(trees.c:341)" -> "Len\n(trees.c:405)";
    "bi_windup\n(bits.c:172)" -> "put_short\n(bits.c:175)";
    "get_method\n(gzip.c:1488)" -> "fprintf\n(gzip.c:1692)";
    "main\n(gzip.c:414)" -> "SIGPIPE\n(gzip.c:648)";
    "huft_build\n(inflate.c:273)" -> "BMAX\n(inflate.c:300)";
    "gen_codes\n(trees.c:577)" -> "MAX_BITS\n(trees.c:581)";
    "send_code\n(trees.c:1054)" -> "send_bits\n(bits.c:128)";
    "send_tree\n(trees.c:749)" -> "send_code\n(trees.c:773)";
    "inflate_fixed\n(inflate.c:672)" -> "inflate_codes\n(inflate.c:509)";
    "unlzw\n(unlzw.c:99)" -> "OK\n(unlzw.c:287)";
    "make_ofname\n(gzip.c:1380)" -> "OK\n(gzip.c:1393)";
    "abort_gzip_signal\n(gzip.c:2148)" -> "SIG_DFL\n(gzip.c:2153)";
    "zip\n(zip.c:34)" -> "OUTBUFSIZ\n(zip.c:68)";
    "treat_file\n(gzip.c:864)" -> "stderr\n(gzip.c:1062)";
    "read_c_len\n(unlzh.c:235)" -> "WSIZE\n(unlzh.c:252)";
    "check_ofname\n(gzip.c:1888)" -> "stderr\n(gzip.c:1900)";
    "unzip\n(unzip.c:110)" -> "RAND_HEAD_LEN\n(unzip.c:144)";
    "get_method\n(gzip.c:1488)" -> "LZHED\n(gzip.c:1675)";
    "FLUSH_BLOCK\n(deflate.c:858)" -> "flush_block\n(trees.c:859)";
    "unlzw\n(unlzw.c:99)" -> "fill_inbuf\n(util.c:210)";
    "main\n(gzip.c:414)" -> "__GETOPT_ID\n(gzip.c:511)";
    "inflate_dynamic\n(inflate.c:722)" -> "GETBYTE\n(inflate.c:799)";
    "get_method\n(gzip.c:1488)" -> "PKZIP_MAGIC\n(gzip.c:1653)";
    "deflate_fast\n(deflate.c:660)" -> "HASH_BITS\n(deflate.c:701)";
    "treat_file\n(gzip.c:864)" -> "WARNING\n(gzip.c:932)";
    "read_c_len\n(unlzh.c:235)" -> "MAXMATCH\n(unlzh.c:243)";
    "NEEDBITS\n(inflate.c:913)" -> "fill_inbuf\n(util.c:210)";
    "put_short\n(zip.c:68)" -> "flush_outbuf\n(util.c:286)";
    "file_read\n(zip.c:115)" -> "read_buffer\n(util.c:241)";
    "put_short\n(bits.c:143)" -> "flush_outbuf\n(util.c:286)";
    "get_byte\n(unpack.c:83)" -> "fill_inbuf\n(util.c:210)";
    "get_suffix\n(gzip.c:1165)" -> "MAX_SUFFIX\n(gzip.c:1169)";
    "try_byte\n(gzip.c:1513)" -> "fill_inbuf\n(util.c:210)";
    "add_envopt\n(util.c:412)" -> "SEPARATOR\n(util.c:452)";
    "read_c_len\n(unlzh.c:235)" -> "CODE_BIT\n(unlzh.c:255)";
    "build_tree\n(unpack.c:170)" -> "gzip_error\n(util.c:465)";
    "read_buffer\n(util.c:241)" -> "fcntl\n(util.c:256)";
    "flush_block\n(trees.c:859)" -> "STORED_BLOCK\n(trees.c:928)";
    "treat_file\n(gzip.c:864)" -> "OK\n(gzip.c:924)";
    "ct_init\n(trees.c:341)" -> "Len\n(trees.c:355)";
    "treat_file\n(gzip.c:864)" -> "STDOUT_FILENO\n(gzip.c:977)";
    "deflate\n(deflate.c:748)" -> "HASH_MASK\n(deflate.c:819)";
    "lzw\n(lzw.c:13)" -> "fprintf\n(lzw.c:18)";
    "do_list\n(gzip.c:1722)" -> "localtime\n(gzip.c:1793)";
    "treat_file\n(gzip.c:864)" -> "display_ratio\n(util.c:508)";
    "unlzw\n(unlzw.c:99)" -> "WARN\n(unlzw.c:125)";
    "get_method\n(gzip.c:1488)" -> "OK\n(gzip.c:1660)";
    "deflate\n(deflate.c:748)" -> "HASH_BITS\n(deflate.c:812)";
    "inflate_codes\n(inflate.c:509)" -> "wp\n(inflate.c:569)";
    "decode_c\n(unlzh.c:270)" -> "right\n(unlzh.c:288)";
    "send_tree\n(trees.c:749)" -> "Len\n(trees.c:776)";
    "NEEDBITS\n(inflate.c:636)" -> "fill_inbuf\n(util.c:210)";
    "deflate\n(deflate.c:748)" -> "UPDATE_HASH\n(deflate.c:763)";
    "read_error\n(util.c:483)" -> "errno\n(util.c:485)";
    "unzip\n(unzip.c:110)" -> "OK\n(unzip.c:197)";
    "check_zipfile\n(unzip.c:62)" -> "stderr\n(unzip.c:89)";
    "open_input_file\n(gzip.c:1281)" -> "ERROR\n(gzip.c:1372)";
    "fill_inbuf\n(util.c:210)" -> "EOF\n(util.c:228)";
    "put_byte\n(zip.c:56)" -> "flush_outbuf\n(util.c:286)";
    "check_ofname\n(gzip.c:1888)" -> "stderr\n(gzip.c:1895)";
    "unlzw\n(unlzw.c:99)" -> "tab_suffixof\n(unlzw.c:151)";
    "huft_build\n(inflate.c:273)" -> "huft_free\n(inflate.c:487)";
    "ct_tally\n(trees.c:968)" -> "Freq\n(trees.c:1003)";
    "treat_dir\n(gzip.c:2000)" -> "ERROR\n(gzip.c:2040)";
    "deflate\n(deflate.c:748)" -> "NULL\n(deflate.c:846)";
    "deflate_fast\n(deflate.c:660)" -> "HASH_BITS\n(deflate.c:713)";
    "unzip\n(unzip.c:110)" -> "NULL\n(unzip.c:122)";
    "read_c_len\n(unlzh.c:235)" -> "NT\n(unlzh.c:255)";
    "read_c_len\n(unlzh.c:235)" -> "c_len\n(unlzh.c:262)";
    "send_bits\n(bits.c:128)" -> "put_short\n(bits.c:143)";
    "deflate\n(deflate.c:748)" -> "INSERT_STRING\n(deflate.c:812)";
    "lm_init\n(deflate.c:311)" -> "MIN_MATCH\n(deflate.c:364)";
    "treat_stdin\n(gzip.c:725)" -> "STDOUT_FILENO\n(gzip.c:729)";
    "try_help\n(gzip.c:327)" -> "ERROR\n(gzip.c:331)";
    "send_tree\n(trees.c:749)" -> "Len\n(trees.c:765)";
    "send_code\n(trees.c:1038)" -> "send_bits\n(bits.c:128)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEXTBYTE\n(inflate.c:759)";
    "read_c_len\n(unlzh.c:235)" -> "NC\n(unlzh.c:243)";
    "read_c_len\n(unlzh.c:235)" -> "c_len\n(unlzh.c:263)";
    "GETBYTE\n(inflate.c:648)" -> "fill_inbuf\n(util.c:210)";
    "deflate_fast\n(deflate.c:660)" -> "HASH_MASK\n(deflate.c:671)";
    "deflate_fast\n(deflate.c:660)" -> "INSERT_STRING\n(deflate.c:671)";
    "get_method\n(gzip.c:1488)" -> "get_byte\n(gzip.c:1553)";
    "lm_init\n(deflate.c:311)" -> "UPDATE_HASH\n(deflate.c:367)";
    "open_and_stat\n(gzip.c:1225)" -> "HAVE_WORKING_O_NOFOLLOW\n(gzip.c:1234)";
    "unlzw\n(unlzw.c:99)" -> "MAXCODE\n(unlzw.c:129)";
    "decode\n(unlzh.c:336)" -> "THRESHOLD\n(unlzh.c:367)";
    "fprint_off\n(util.c:520)" -> "CHAR_BIT\n(util.c:525)";
    "main\n(gzip.c:414)" -> "__GETOPT_XCONCAT\n(gzip.c:494)";
    "inflate_dynamic\n(inflate.c:722)" -> "wp\n(inflate.c:773)";
    "send_tree\n(trees.c:749)" -> "REPZ_3_10\n(trees.c:779)";
    "get_method\n(gzip.c:1488)" -> "get_byte\n(gzip.c:1573)";
    "longest_match\n(deflate.c:387)" -> "NIL\n(deflate.c:394)";
    "deflate\n(deflate.c:748)" -> "FLUSH_BLOCK\n(deflate.c:834)";
    "inflate_dynamic\n(inflate.c:722)" -> "GETBYTE\n(inflate.c:759)";
    "build_tree\n(trees.c:618)" -> "gen_bitlen\n(trees.c:492)";
    "copy_stat\n(gzip.c:1935)" -> "errno\n(gzip.c:1984)";
    "set_file_type\n(trees.c:1073)" -> "Freq\n(trees.c:1079)";
    "rsync_roll\n(deflate.c:614)" -> "RSYNC_SUM_MATCH\n(deflate.c:635)";
    "get_input_size_and_time\n(gzip.c:704)" -> "__S_ISTYPE\n(gzip.c:714)";
    "FLUSH_BLOCK\n(deflate.c:740)" -> "flush_block\n(trees.c:859)";
    "GETBYTE\n(inflate.c:639)" -> "fill_inbuf\n(util.c:210)";
    "treat_file\n(gzip.c:864)" -> "__S_ISGID\n(gzip.c:912)";
    "GETBYTE\n(inflate.c:756)" -> "fill_inbuf\n(util.c:210)";
    "treat_stdin\n(gzip.c:725)" -> "stderr\n(gzip.c:808)";
    "get_method\n(gzip.c:1488)" -> "fill_inbuf\n(util.c:210)";
    "deflate\n(deflate.c:748)" -> "MAX_MATCH\n(deflate.c:771)";
    "unzip\n(unzip.c:110)" -> "put_ubyte\n(unzip.c:151)";
    "inflate_dynamic\n(inflate.c:722)" -> "huft_build\n(inflate.c:273)";
    "unpack\n(unpack.c:213)" -> "look_bits\n(unpack.c:252)";
    "create_outfile\n(gzip.c:1087)" -> "openat\n(gzip.c:1114)";
    "check_ofname\n(gzip.c:1888)" -> "STDIN_FILENO\n(gzip.c:1894)";
    "decode_c\n(unlzh.c:270)" -> "MAXMATCH\n(unlzh.c:285)";
    "look_bits\n(unpack.c:239)" -> "read_byte\n(unpack.c:81)";
    "treat_file\n(gzip.c:864)" -> "get_input_size_and_time\n(gzip.c:704)";
    "treat_file\n(gzip.c:864)" -> "copy_stat\n(gzip.c:1935)";
    "zip\n(zip.c:34)" -> "DEFLATED\n(zip.c:48)";
    "deflate_fast\n(deflate.c:660)" -> "MIN_MATCH\n(deflate.c:677)";
    "warning\n(util.c:478)" -> "OK\n(util.c:480)";
    "treat_file\n(gzip.c:864)" -> "OK\n(gzip.c:1039)";
    "deflate\n(deflate.c:748)" -> "WSIZE\n(deflate.c:810)";
    "get_method\n(gzip.c:1488)" -> "HEADER_CRC\n(gzip.c:1595)";
    "deflate\n(deflate.c:748)" -> "MIN_MATCH\n(deflate.c:782)";
    "FLUSH_BLOCK\n(deflate.c:834)" -> "flush_block\n(trees.c:859)";
    "version\n(gzip.c:397)" -> "printf\n(gzip.c:400)";
    "open_input_file\n(gzip.c:1281)" -> "fprintf\n(gzip.c:1371)";
    "treat_stdin\n(gzip.c:725)" -> "display_ratio\n(util.c:508)";
    "read_c_len\n(unlzh.c:235)" -> "CBIT\n(unlzh.c:261)";
    "check_ofname\n(gzip.c:1888)" -> "fprintf\n(gzip.c:1900)";
    "main\n(gzip.c:414)" -> "__GETOPT_XCONCAT\n(gzip.c:620)";
    "unzip\n(unzip.c:110)" -> "ERROR\n(unzip.c:186)";
    "unzip\n(unzip.c:110)" -> "LG\n(unzip.c:125)";
    "decode\n(unlzh.c:336)" -> "UCHAR_MAX\n(unlzh.c:359)";
    "unzip\n(unzip.c:110)" -> "OK\n(unzip.c:209)";
    "deflate_fast\n(deflate.c:660)" -> "MAX_MATCH\n(deflate.c:677)";
    "read_c_len\n(unlzh.c:235)" -> "BITBUFSIZ\n(unlzh.c:250)";
    "inflate_dynamic\n(inflate.c:722)" -> "wp\n(inflate.c:799)";
    "treat_file\n(gzip.c:864)" -> "read_error\n(util.c:483)";
    "scan_tree\n(trees.c:705)" -> "Len\n(trees.c:721)";
    "license\n(gzip.c:388)" -> "printf\n(gzip.c:392)";
    "treat_file\n(gzip.c:864)" -> "fprintf\n(gzip.c:983)";
    "inflate_codes\n(inflate.c:509)" -> "wp\n(inflate.c:595)";
    "inflate_codes\n(inflate.c:509)" -> "NEXTBYTE\n(inflate.c:537)";
    "send_all_trees\n(trees.c:832)" -> "send_bits\n(bits.c:128)";
    "read_c_len\n(unlzh.c:235)" -> "THRESHOLD\n(unlzh.c:266)";
    "init_block\n(trees.c:416)" -> "L_CODES\n(trees.c:421)";
    "progerror\n(gzip.c:404)" -> "fprintf\n(gzip.c:407)";
    "deflate_fast\n(deflate.c:660)" -> "MIN_MATCH\n(deflate.c:686)";
    "discard_input_bytes\n(gzip.c:1461)" -> "HEADER_CRC\n(gzip.c:1468)";
    "main\n(gzip.c:414)" -> "stderr\n(gzip.c:513)";
    "deflate_fast\n(deflate.c:660)" -> "WSIZE\n(deflate.c:701)";
    "inflate_dynamic\n(inflate.c:722)" -> "NULL\n(inflate.c:790)";
    "huft_build\n(inflate.c:273)" -> "BMAX\n(inflate.c:303)";
    "put_ubyte\n(unzip.c:151)" -> "flush_window\n(util.c:299)";
    "do_list\n(gzip.c:1722)" -> "SH\n(gzip.c:1784)";
    "NEXTBYTE\n(inflate.c:753)" -> "fill_inbuf\n(util.c:210)";
    "get_method\n(gzip.c:1488)" -> "GZIP_MAGIC\n(gzip.c:1523)";
    "unzip\n(unzip.c:110)" -> "get_byte\n(unzip.c:164)";
    "gen_bitlen\n(trees.c:492)" -> "Len\n(trees.c:562)";
    "decode\n(unlzh.c:336)" -> "DICBIT\n(unlzh.c:354)";
    "bi_windup\n(bits.c:172)" -> "OUTBUFSIZ\n(bits.c:175)";
    "get_method\n(gzip.c:1488)" -> "try_byte\n(gzip.c:1501)";
    "flush_output\n(inflate.c:978)" -> "flush_window\n(util.c:299)";
    "main\n(gzip.c:414)" -> "STDOUT_FILENO\n(gzip.c:677)";
    "compress_block\n(trees.c:1021)" -> "send_code\n(trees.c:1043)";
    "DECLARE\n(gzip.c:136)" -> "tab_prefix\n(gzip.h:123)";
    "atdir_set\n(gzip.c:837)" -> "O_SEARCH\n(gzip.c:855)";
    "main\n(gzip.c:414)" -> "add_envopt\n(util.c:412)";
    "abort_gzip_signal\n(gzip.c:2148)" -> "true\n(gzip.c:2150)";
    "scan_tree\n(trees.c:705)" -> "REP_3_6\n(trees.c:728)";
    "get_method\n(gzip.c:1488)" -> "stderr\n(gzip.c:1692)";
    "inflate_dynamic\n(inflate.c:722)" -> "fill_inbuf\n(util.c:210)";
    "decode_c\n(unlzh.c:270)" -> "c_len\n(unlzh.c:293)";
    "unlzw\n(unlzw.c:99)" -> "de_stack\n(unlzw.c:266)";
    "decode_p\n(unlzh.c:297)" -> "right\n(unlzh.c:305)";
    "make_table\n(unlzh.c:134)" -> "WSIZE\n(unlzh.c:186)";
    "ct_tally\n(trees.c:968)" -> "d_code\n(trees.c:984)";
    "inflate_codes\n(inflate.c:509)" -> "wp\n(inflate.c:546)";
    "inflate_codes\n(inflate.c:509)" -> "wp\n(inflate.c:523)";
    "read_buffer\n(util.c:241)" -> "INT_MAX\n(util.c:248)";
    "read_error\n(util.c:483)" -> "perror\n(util.c:489)";
    "read_buffer\n(util.c:241)" -> "errno\n(util.c:260)";
    "deflate_fast\n(deflate.c:660)" -> "HASH_MASK\n(deflate.c:701)";
    "inflate\n(inflate.c:945)" -> "inflate_block\n(inflate.c:898)";
    "create_outfile\n(gzip.c:1087)" -> "O_CREAT\n(gzip.c:1090)";
    "do_list\n(gzip.c:1722)" -> "_GL_SIGNED_TYPE_OR_EXPR\n(gzip.c:1735)";
    "main\n(gzip.c:414)" -> "__GETOPT_ID\n(gzip.c:509)";
    "gen_bitlen\n(trees.c:492)" -> "Freq\n(trees.c:527)";
    "help\n(gzip.c:335)" -> "printf\n(gzip.c:384)";
    "make_ofname\n(gzip.c:1380)" -> "stderr\n(gzip.c:1415)";
    "main\n(gzip.c:414)" -> "__GETOPT_XCONCAT\n(gzip.c:501)";
    "read_pt_len\n(unlzh.c:200)" -> "gzip_error\n(util.c:465)";
    "strlwr\n(util.c:334)" -> "isupper\n(util.c:339)";
    "send_bits\n(bits.c:128)" -> "Buf_size\n(bits.c:145)";
    "decode_c\n(unlzh.c:270)" -> "BITBUFSIZ\n(unlzh.c:284)";
    "unpack\n(unpack.c:213)" -> "WSIZE\n(unpack.c:258)";
    "ct_tally\n(trees.c:968)" -> "D_CODES\n(trees.c:1002)";
    "get_method\n(gzip.c:1488)" -> "TYPE_SIGNED\n(gzip.c:1567)";
    "GETBYTE\n(inflate.c:753)" -> "fill_inbuf\n(util.c:210)";
    "longest_match\n(deflate.c:387)" -> "MAX_MATCH\n(deflate.c:394)";
    "lzw\n(lzw.c:13)" -> "ERROR\n(lzw.c:16)";
    "create_outfile\n(gzip.c:1087)" -> "shorten_name\n(gzip.c:1830)";
    "strlwr\n(util.c:334)" -> "tolower\n(util.c:339)";
    "NEXTBYTE\n(inflate.c:562)" -> "fill_inbuf\n(util.c:210)";
    "deflate_fast\n(deflate.c:660)" -> "H_SHIFT\n(deflate.c:671)";
    "treat_stdin\n(gzip.c:725)" -> "get_input_size_and_time\n(gzip.c:704)";
    "main\n(gzip.c:414)" -> "treat_stdin\n(gzip.c:725)";
    "bi_windup\n(bits.c:172)" -> "put_byte\n(bits.c:175)";
    "send_tree\n(trees.c:749)" -> "Code\n(trees.c:773)";
    "treat_file\n(gzip.c:864)" -> "errno\n(gzip.c:1042)";
    "unzip\n(unzip.c:110)" -> "stderr\n(unzip.c:146)";
    "unlzw\n(unlzw.c:99)" -> "MAXCODE\n(unlzw.c:206)";
    "treat_file\n(gzip.c:864)" -> "stderr\n(gzip.c:1065)";
    "treat_stdin\n(gzip.c:725)" -> "fprintf\n(gzip.c:743)";
    "unpack\n(unpack.c:213)" -> "flush_window\n(util.c:299)";
    "GETBYTE\n(inflate.c:562)" -> "fill_inbuf\n(util.c:210)";
    "input_eof\n(gzip.c:686)" -> "fill_inbuf\n(util.c:210)";
    "zip\n(zip.c:34)" -> "put_short\n(zip.c:101)";
    "check_ofname\n(gzip.c:1888)" -> "stderr\n(gzip.c:1896)";
    "read_tree\n(unpack.c:113)" -> "gzip_error\n(util.c:465)";
    "deflate\n(deflate.c:748)" -> "HASH_BITS\n(deflate.c:810)";
    "inflate_dynamic\n(inflate.c:722)" -> "DUMPBITS\n(inflate.c:758)";
    "NEXTBYTE\n(inflate.c:919)" -> "fill_inbuf\n(util.c:210)";
    "get_method\n(gzip.c:1488)" -> "TYPE_WIDTH\n(gzip.c:1557)";
    "create_outfile\n(gzip.c:1087)" -> "__S_IREAD\n(gzip.c:1114)";
    "decode_c\n(unlzh.c:270)" -> "THRESHOLD\n(unlzh.c:291)";
    "deflate_fast\n(deflate.c:660)" -> "flush_block\n(trees.c:859)";
    "NEEDBITS\n(inflate.c:557)" -> "fill_inbuf\n(util.c:210)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEEDBITS\n(inflate.c:834)";
    "bi_init\n(bits.c:106)" -> "NO_FILE\n(bits.c:119)";
    "unzip\n(unzip.c:110)" -> "SH\n(unzip.c:146)";
    "unlzw\n(unlzw.c:99)" -> "CLEAR\n(unlzw.c:146)";
    "lm_init\n(deflate.c:311)" -> "MIN_LOOKAHEAD\n(deflate.c:364)";
    "inflate_stored\n(inflate.c:616)" -> "NEEDBITS\n(inflate.c:639)";
    "build_tree\n(unpack.c:170)" -> "MIN\n(unpack.c:195)";
    "copy_block\n(bits.c:190)" -> "put_byte\n(bits.c:198)";
    "inflate_codes\n(inflate.c:509)" -> "NEEDBITS\n(inflate.c:537)";
    "main\n(gzip.c:414)" -> "write_error\n(util.c:496)";
    "main\n(gzip.c:414)" -> "strequ\n(gzip.c:464)";
    "unzip\n(unzip.c:110)" -> "gzip_error\n(util.c:465)";
    "decode_c\n(unlzh.c:270)" -> "read_pt_len\n(unlzh.c:200)";
    "main\n(gzip.c:414)" -> "fflush\n(gzip.c:672)";
    "finish_out\n(gzip.c:2103)" -> "do_exit\n(gzip.c:2080)";
    "deflate_fast\n(deflate.c:660)" -> "WMASK\n(deflate.c:701)";
    "get_method\n(gzip.c:1488)" -> "DEFLATED\n(gzip.c:1577)";
    "main\n(gzip.c:414)" -> "stderr\n(gzip.c:476)";
    "send_tree\n(trees.c:749)" -> "Code\n(trees.c:782)";
    "treat_stdin\n(gzip.c:725)" -> "fprintf\n(gzip.c:805)";
    "get_method\n(gzip.c:1488)" -> "stderr\n(gzip.c:1538)";
    "install_signal_handlers\n(gzip.c:2050)" -> "NULL\n(gzip.c:2073)";
    "unzip\n(unzip.c:110)" -> "DEFLATED\n(unzip.c:130)";
    "inflate_codes\n(inflate.c:509)" -> "DUMPBITS\n(inflate.c:567)";
    "zip\n(zip.c:34)" -> "ct_init\n(trees.c:341)";
    "do_list\n(gzip.c:1722)" -> "stdout\n(gzip.c:1803)";
    "unlzw\n(unlzw.c:99)" -> "input\n(unlzw.c:192)";
    "get_method\n(gzip.c:1488)" -> "discard_input_bytes\n(gzip.c:1461)";
    "treat_file\n(gzip.c:864)" -> "__S_IFMT\n(gzip.c:881)";
    "write_error\n(util.c:496)" -> "errno\n(util.c:500)";
    "send_tree\n(trees.c:749)" -> "Code\n(trees.c:776)";
    "decode_c\n(unlzh.c:270)" -> "NC\n(unlzh.c:277)";
    "warning\n(util.c:478)" -> "fprintf\n(util.c:480)";
    "treat_dir\n(gzip.c:2000)" -> "NULL\n(gzip.c:2012)";
    "main\n(gzip.c:414)" -> "stdout\n(gzip.c:672)";
    "gen_bitlen\n(trees.c:492)" -> "Len\n(trees.c:519)";
    "decode_c\n(unlzh.c:270)" -> "NC\n(unlzh.c:285)";
    "strlwr\n(util.c:334)" -> "__isctype\n(util.c:339)";
    "main\n(gzip.c:414)" -> "__GETOPT_ID\n(gzip.c:657)";
    "deflate\n(deflate.c:748)" -> "H_SHIFT\n(deflate.c:763)";
    "get_byte\n(gzip.c:1526)" -> "fill_inbuf\n(util.c:210)";
    "deflate\n(deflate.c:748)" -> "MIN_MATCH\n(deflate.c:772)";
    "input_eof\n(gzip.c:686)" -> "INBUFSIZ\n(gzip.c:693)";
    "get_method\n(gzip.c:1488)" -> "OK\n(gzip.c:1711)";
    "unzip\n(unzip.c:110)" -> "SH\n(unzip.c:179)";
    "treat_dir\n(gzip.c:2000)" -> "treat_file\n(gzip.c:864)";
    "decode_c\n(unlzh.c:270)" -> "NC\n(unlzh.c:291)";
    "copy_stat\n(gzip.c:1935)" -> "S_IRWXUGO\n(gzip.c:1938)";
    "GETBYTE\n(inflate.c:913)" -> "fill_inbuf\n(util.c:210)";
    "treat_file\n(gzip.c:864)" -> "S_ISDIR\n(gzip.c:881)";
    "read_buffer\n(util.c:241)" -> "F_GETFL\n(util.c:256)";
    "create_outfile\n(gzip.c:1087)" -> "errno\n(gzip.c:1115)";
    "deflate_fast\n(deflate.c:660)" -> "HASH_SIZE\n(deflate.c:671)";
    "deflate\n(deflate.c:748)" -> "WMASK\n(deflate.c:812)";
    "compress_block\n(trees.c:1021)" -> "send_code\n(trees.c:1038)";
    "huft_build\n(inflate.c:273)" -> "NULL\n(inflate.c:383)";
    "get_method\n(gzip.c:1488)" -> "RESERVED\n(gzip.c:1544)";
    "compress_block\n(trees.c:1021)" -> "d_code\n(trees.c:1051)";
    "deflate_fast\n(deflate.c:660)" -> "head\n(deflate.c:671)";
    "treat_file\n(gzip.c:864)" -> "stderr\n(gzip.c:932)";
    "decode_p\n(unlzh.c:297)" -> "WSIZE\n(unlzh.c:305)";
    "inflate_codes\n(inflate.c:509)" -> "WSIZE\n(inflate.c:579)";
    "create_outfile\n(gzip.c:1087)" -> "OK\n(gzip.c:1131)";
    "deflate_fast\n(deflate.c:660)" -> "UPDATE_HASH\n(deflate.c:671)";
    "NEEDBITS\n(inflate.c:569)" -> "fill_inbuf\n(util.c:210)";
    "build_tree\n(trees.c:618)" -> "SMALLEST\n(trees.c:666)";
    "open_and_stat\n(gzip.c:1225)" -> "lstat\n(gzip.c:1239)";
    "get_method\n(gzip.c:1488)" -> "stderr\n(gzip.c:1592)";
    "decode_c\n(unlzh.c:270)" -> "THRESHOLD\n(unlzh.c:277)";
    "put_long\n(zip.c:68)" -> "flush_outbuf\n(util.c:286)";
    "main\n(gzip.c:414)" -> "__GETOPT_ID\n(gzip.c:464)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEXTBYTE\n(inflate.c:756)";
    "send_tree\n(trees.c:749)" -> "send_code\n(trees.c:769)";
    "NEEDBITS\n(inflate.c:753)" -> "fill_inbuf\n(util.c:210)";
    "remove_output_file\n(gzip.c:2114)" -> "xunlink\n(util.c:360)";
    "main\n(gzip.c:414)" -> "strequ\n(gzip.c:428)";
    "unlzw\n(unlzw.c:99)" -> "LZW_RESERVED\n(unlzw.c:125)";
    "deflate\n(deflate.c:748)" -> "HASH_SIZE\n(deflate.c:812)";
    "inflate_stored\n(inflate.c:616)" -> "WSIZE\n(inflate.c:650)";
    "inflate_codes\n(inflate.c:509)" -> "GETBYTE\n(inflate.c:530)";
    "main\n(gzip.c:414)" -> "help\n(gzip.c:335)";
    "inflate_fixed\n(inflate.c:672)" -> "huft_free\n(inflate.c:487)";
    "send_code\n(trees.c:773)" -> "send_bits\n(bits.c:128)";
    "main\n(gzip.c:414)" -> "treat_file\n(gzip.c:864)";
    "get_method\n(gzip.c:1488)" -> "COMMENT\n(gzip.c:1629)";
    "treat_stdin\n(gzip.c:725)" -> "progerror\n(gzip.c:404)";
    "shorten_name\n(gzip.c:1830)" -> "NULL\n(gzip.c:1868)";
    "treat_file\n(gzip.c:864)" -> "stderr\n(gzip.c:1067)";
    "decode_p\n(unlzh.c:297)" -> "DICBIT\n(unlzh.c:302)";
    "make_ofname\n(gzip.c:1380)" -> "strlwr\n(util.c:334)";
    "lm_init\n(deflate.c:311)" -> "memzero\n(deflate.c:324)";
    "send_tree\n(trees.c:749)" -> "Code\n(trees.c:769)";
    "main\n(gzip.c:414)" -> "stderr\n(gzip.c:625)";
    "deflate\n(deflate.c:748)" -> "MIN_LOOKAHEAD\n(deflate.c:772)";
    "decode_p\n(unlzh.c:297)" -> "DICBIT\n(unlzh.c:308)";
    "treat_file\n(gzip.c:864)" -> "fprintf\n(gzip.c:907)";
    "deflate_fast\n(deflate.c:660)" -> "H_SHIFT\n(deflate.c:701)";
    "inflate_block\n(inflate.c:898)" -> "DUMPBITS\n(inflate.c:915)";
    "unlzw\n(unlzw.c:99)" -> "tab_prefixof\n(unlzw.c:275)";
    "deflate\n(deflate.c:748)" -> "HASH_MASK\n(deflate.c:763)";
    "build_tree\n(trees.c:618)" -> "Freq\n(trees.c:650)";
    "unpack\n(unpack.c:213)" -> "skip_bits\n(unpack.c:261)";
    "copy_stat\n(gzip.c:1935)" -> "OK\n(gzip.c:1985)";
    "treat_file\n(gzip.c:864)" -> "SIG_BLOCK\n(gzip.c:1031)";
    "do_list\n(gzip.c:1722)" -> "DEFLATED\n(gzip.c:1769)";
    "main\n(gzip.c:414)" -> "fprintf\n(gzip.c:607)";
    "GETBYTE\n(inflate.c:636)" -> "fill_inbuf\n(util.c:210)";
    "deflate_fast\n(deflate.c:660)" -> "NIL\n(deflate.c:676)";
    "deflate_fast\n(deflate.c:660)" -> "MIN_LOOKAHEAD\n(deflate.c:677)";
    "main\n(gzip.c:414)" -> "stderr\n(gzip.c:486)";
    "install_signal_handlers\n(gzip.c:2050)" -> "sa_handler\n(gzip.c:2060)";
    "flush_block\n(trees.c:859)" -> "send_bits\n(bits.c:128)";
    "deflate_fast\n(deflate.c:660)" -> "UPDATE_HASH\n(deflate.c:713)";
    "get_method\n(gzip.c:1488)" -> "fprintf\n(gzip.c:1528)";
    "main\n(gzip.c:414)" -> "optind\n(gzip.c:656)";
    "main\n(gzip.c:414)" -> "__GETOPT_ID\n(gzip.c:479)";
    "atdir_set\n(gzip.c:837)" -> "O_RDONLY\n(gzip.c:855)";
    "main\n(gzip.c:414)" -> "true\n(gzip.c:458)";
    "deflate\n(deflate.c:748)" -> "RSYNC_ROLL\n(deflate.c:803)";
    "deflate\n(deflate.c:748)" -> "UPDATE_HASH\n(deflate.c:819)";
    "open_input_file\n(gzip.c:1281)" -> "errno\n(gzip.c:1353)";
    "flush_block\n(trees.c:859)" -> "seekable\n(trees.c:906)";
    "unzip\n(unzip.c:110)" -> "SH\n(unzip.c:167)";
    "deflate_fast\n(deflate.c:660)" -> "MIN_LOOKAHEAD\n(deflate.c:676)";
    "get_method\n(gzip.c:1488)" -> "ERROR\n(gzip.c:1541)";
    "deflate\n(deflate.c:748)" -> "NIL\n(deflate.c:770)";
    "open_input_file\n(gzip.c:1281)" -> "O_RDONLY\n(gzip.c:1294)";
    "flush_block\n(trees.c:859)" -> "set_file_type\n(trees.c:1073)";
    "treat_file\n(gzip.c:864)" -> "stderr\n(gzip.c:899)";
    "unlzw\n(unlzw.c:99)" -> "BLOCK_MODE\n(unlzw.c:123)";
    "deflate\n(deflate.c:748)" -> "head\n(deflate.c:763)";
    "discard_input_bytes\n(gzip.c:1461)" -> "fill_inbuf\n(util.c:210)";
    "deflate_fast\n(deflate.c:660)" -> "FLUSH_BLOCK\n(deflate.c:740)";
    "NEEDBITS\n(inflate.c:572)" -> "fill_inbuf\n(util.c:210)";
    "main\n(gzip.c:414)" -> "STDIN_FILENO\n(gzip.c:662)";
    "build_tree\n(trees.c:618)" -> "Dad\n(trees.c:675)";
    "get_method\n(gzip.c:1488)" -> "DEFLATED\n(gzip.c:1527)";
    "inflate_stored\n(inflate.c:616)" -> "NEXTBYTE\n(inflate.c:639)";
    "read_buffer\n(util.c:241)" -> "fcntl\n(util.c:261)";
    "treat_stdin\n(gzip.c:725)" -> "STDIN_FILENO\n(gzip.c:764)";
    "make_ofname\n(gzip.c:1380)" -> "OK\n(gzip.c:1453)";
    "read_pt_len\n(unlzh.c:200)" -> "fillbuf\n(unlzh.c:102)";
    "decode_c\n(unlzh.c:270)" -> "left\n(unlzh.c:289)";
    "copy_stat\n(gzip.c:1935)" -> "stderr\n(gzip.c:1985)";
    "NEEDBITS\n(inflate.c:834)" -> "fill_inbuf\n(util.c:210)";
    "main\n(gzip.c:414)" -> "fprintf\n(gzip.c:604)";
    "main\n(gzip.c:414)" -> "fprintf\n(gzip.c:625)";
    "NEXTBYTE\n(inflate.c:569)" -> "fill_inbuf\n(util.c:210)";
    "read_c_len\n(unlzh.c:235)" -> "c_len\n(unlzh.c:266)";
    "make_simple_name\n(util.c:390)" -> "NULL\n(util.c:394)";
    "gen_codes\n(trees.c:577)" -> "MAX_BITS\n(trees.c:589)";
    "NEXTBYTE\n(inflate.c:773)" -> "fill_inbuf\n(util.c:210)";
    "deflate\n(deflate.c:748)" -> "longest_match\n(deflate.c:387)";
    "scan_tree\n(trees.c:705)" -> "REPZ_3_10\n(trees.c:730)";
    "inflate_block\n(inflate.c:898)" -> "wp\n(inflate.c:909)";
    "GETBYTE\n(inflate.c:799)" -> "fill_inbuf\n(util.c:210)";
    "copy_stat\n(gzip.c:1935)" -> "S_IRWXG\n(gzip.c:1938)";
    "deflate\n(deflate.c:748)" -> "MIN_MATCH\n(deflate.c:810)";
    "build_bl_tree\n(trees.c:799)" -> "Len\n(trees.c:818)";
    "create_outfile\n(gzip.c:1087)" -> "ENAMETOOLONG\n(gzip.c:1124)";
    "deflate\n(deflate.c:748)" -> "head\n(deflate.c:819)";
    "decode_c\n(unlzh.c:270)" -> "fillbuf\n(unlzh.c:102)";
    "zip\n(zip.c:34)" -> "OUTBUFSIZ\n(zip.c:77)";
    "read_byte\n(unpack.c:81)" -> "fill_inbuf\n(util.c:210)";
    "unlzw\n(unlzw.c:99)" -> "memzero\n(unlzw.c:202)";
    "send_tree\n(trees.c:749)" -> "REPZ_11_138\n(trees.c:782)";
    "inflate_dynamic\n(inflate.c:722)" -> "GETBYTE\n(inflate.c:773)";
    "deflate_fast\n(deflate.c:660)" -> "FLUSH_BLOCK\n(deflate.c:730)";
    "inflate_stored\n(inflate.c:616)" -> "wp\n(inflate.c:636)";
    "unzip\n(unzip.c:110)" -> "LG\n(unzip.c:142)";
    "try_help\n(gzip.c:327)" -> "fprintf\n(gzip.c:329)";
    "inflate_codes\n(inflate.c:509)" -> "DUMPBITS\n(inflate.c:574)";
    "get_suffix\n(gzip.c:1165)" -> "ISSLASH\n(gzip.c:1209)";
    "unlzw\n(unlzw.c:99)" -> "OK\n(unlzw.c:125)";
    "flush_block\n(trees.c:859)" -> "gzip_error\n(util.c:465)";
    "main\n(gzip.c:414)" -> "__GETOPT_XCONCAT\n(gzip.c:479)";
    "main\n(gzip.c:414)" -> "STDOUT_FILENO\n(gzip.c:678)";
    "check_ofname\n(gzip.c:1888)" -> "OK\n(gzip.c:1909)";
    "fill_inbuf\n(util.c:210)" -> "flush_window\n(util.c:299)";
    "inflate_dynamic\n(inflate.c:722)" -> "DUMPBITS\n(inflate.c:761)";
    "read_buffer\n(util.c:241)" -> "O_NONBLOCK\n(util.c:261)";
    "send_bits\n(bits.c:128)" -> "put_byte\n(bits.c:143)";
    "strlwr\n(util.c:334)" -> "__tobody\n(util.c:339)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEEDBITS\n(inflate.c:823)";
    "flush_block\n(trees.c:859)" -> "build_tree\n(trees.c:618)";
    "compress_block\n(trees.c:1021)" -> "l_buf\n(trees.c:1036)";
    "main\n(gzip.c:414)" -> "__GETOPT_XCONCAT\n(gzip.c:468)";
    "inflate_dynamic\n(inflate.c:722)" -> "DUMPBITS\n(inflate.c:775)";
    "decode_c\n(unlzh.c:270)" -> "UCHAR_MAX\n(unlzh.c:285)";
    "inflate_dynamic\n(inflate.c:722)" -> "GETBYTE\n(inflate.c:756)";
    "GETBYTE\n(inflate.c:557)" -> "fill_inbuf\n(util.c:210)";
    "inflate_codes\n(inflate.c:509)" -> "slide\n(inflate.c:590)";
    "main\n(gzip.c:414)" -> "fprintf\n(gzip.c:486)";
    "read_c_len\n(unlzh.c:235)" -> "CODE_BIT\n(unlzh.c:249)";
    "decode\n(unlzh.c:336)" -> "decode_p\n(unlzh.c:297)";
    "inflate_stored\n(inflate.c:616)" -> "NEEDBITS\n(inflate.c:636)";
    "write_error\n(util.c:496)" -> "perror\n(util.c:501)";
    "install_signal_handlers\n(gzip.c:2050)" -> "NULL\n(gzip.c:2059)";
    "check_ofname\n(gzip.c:1888)" -> "fflush\n(gzip.c:1896)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEEDBITS\n(inflate.c:799)";
    "build_tree\n(trees.c:618)" -> "L_CODES\n(trees.c:632)";
    "read_c_len\n(unlzh.c:235)" -> "CHAR_BIT\n(unlzh.c:248)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEXTBYTE\n(inflate.c:799)";
    "fill_window\n(deflate.c:558)" -> "NIL\n(deflate.c:592)";
    "NEXTBYTE\n(inflate.c:636)" -> "fill_inbuf\n(util.c:210)";
    "ct_init\n(trees.c:341)" -> "Len\n(trees.c:393)";
    "unlzw\n(unlzw.c:99)" -> "read_error\n(util.c:483)";
    "main\n(gzip.c:414)" -> "EBADF\n(gzip.c:679)";
    "inflate_stored\n(inflate.c:616)" -> "NEXTBYTE\n(inflate.c:648)";
    "main\n(gzip.c:414)" -> "optind\n(gzip.c:474)";
    "treat_file\n(gzip.c:864)" -> "OK\n(gzip.c:997)";
    "check_zipfile\n(unzip.c:62)" -> "stderr\n(unzip.c:80)";
    "decode\n(unlzh.c:336)" -> "UCHAR_MAX\n(unlzh.c:367)";
    "longest_match\n(deflate.c:387)" -> "MAX_DIST\n(deflate.c:394)";
    "get_method\n(gzip.c:1488)" -> "stderr\n(gzip.c:1705)";
    "deflate_fast\n(deflate.c:660)" -> "MIN_MATCH\n(deflate.c:671)";
    "remove_output_file\n(gzip.c:2114)" -> "MAX_PATH_LEN\n(gzip.c:2124)";
    "get_method\n(gzip.c:1488)" -> "COMPRESSED\n(gzip.c:1670)";
    "ct_tally\n(trees.c:968)" -> "Freq\n(trees.c:983)";
    "fill_window\n(deflate.c:558)" -> "WSIZE\n(deflate.c:597)";
    "flush_outbuf\n(util.c:286)" -> "write_buf\n(util.c:315)";
    "do_list\n(gzip.c:1722)" -> "fprint_off\n(util.c:520)";
    "read_error\n(util.c:483)" -> "fprintf\n(util.c:486)";
    "read_c_len\n(unlzh.c:235)" -> "c_len\n(unlzh.c:265)";
    "RSYNC_ROLL\n(deflate.c:722)" -> "rsync_roll\n(deflate.c:614)";
    "longest_match\n(deflate.c:387)" -> "WSIZE\n(deflate.c:517)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEEDBITS\n(inflate.c:773)";
    "check_ofname\n(gzip.c:1888)" -> "WARNING\n(gzip.c:1901)";
    "huf_decode_start\n(unlzh.c:315)" -> "init_getbits\n(unlzh.c:124)";
    "read_c_len\n(unlzh.c:235)" -> "fillbuf\n(unlzh.c:102)";
    "set_file_type\n(trees.c:1073)" -> "ASCII\n(trees.c:1081)";
    "copy_stat\n(gzip.c:1935)" -> "fprintf\n(gzip.c:1955)";
    "lm_init\n(deflate.c:311)" -> "HASH_BITS\n(deflate.c:324)";
    "unzip\n(unzip.c:110)" -> "get_byte\n(unzip.c:150)";
    "get_byte\n(gzip.c:1467)" -> "fill_inbuf\n(util.c:210)";
    "treat_file\n(gzip.c:864)" -> "WARN\n(gzip.c:890)";
    "read_buffer\n(util.c:241)" -> "errno\n(util.c:254)";
    "fillbuf\n(unlzh.c:102)" -> "fill_inbuf\n(util.c:210)";
    "treat_file\n(gzip.c:864)" -> "S_ISVTX\n(gzip.c:922)";
    "read_tree\n(unpack.c:113)" -> "read_byte\n(unpack.c:81)";
    "copy\n(util.c:117)" -> "write_buf\n(util.c:315)";
    "unzip\n(unzip.c:110)" -> "stderr\n(unzip.c:197)";
    "huft_build\n(inflate.c:273)" -> "NULL\n(inflate.c:418)";
    "get_method\n(gzip.c:1488)" -> "WARNING\n(gzip.c:1705)";
    "deflate\n(deflate.c:748)" -> "INSERT_STRING\n(deflate.c:819)";
    "NEXTBYTE\n(inflate.c:834)" -> "fill_inbuf\n(util.c:210)";
    "zip\n(zip.c:34)" -> "OUTBUFSIZ\n(zip.c:78)";
    "decode_c\n(unlzh.c:270)" -> "CHAR_BIT\n(unlzh.c:286)";
    "treat_file\n(gzip.c:864)" -> "OK\n(gzip.c:899)";
    "get_method\n(gzip.c:1488)" -> "WARNING\n(gzip.c:1711)";
    "main\n(gzip.c:414)" -> "__GETOPT_CONCAT\n(gzip.c:494)";
    "unlzw\n(unlzw.c:99)" -> "ERROR\n(unlzw.c:136)";
    "get_method\n(gzip.c:1488)" -> "NULL\n(gzip.c:1583)";
    "unlzw\n(unlzw.c:99)" -> "write_buf\n(util.c:315)";
    "inflate_dynamic\n(inflate.c:722)" -> "wp\n(inflate.c:813)";
    "decode_p\n(unlzh.c:297)" -> "CHAR_BIT\n(unlzh.c:303)";
    "NEEDBITS\n(inflate.c:919)" -> "fill_inbuf\n(util.c:210)";
    "put_byte\n(zip.c:77)" -> "flush_outbuf\n(util.c:286)";
    "unlzw\n(unlzw.c:99)" -> "DIST_BUFSIZE\n(unlzw.c:211)";
    "get_method\n(gzip.c:1488)" -> "get_byte\n(gzip.c:1510)";
    "create_outfile\n(gzip.c:1087)" -> "atdir_set\n(gzip.c:837)";
    "deflate\n(deflate.c:748)" -> "MIN_MATCH\n(deflate.c:792)";
    "do_list\n(gzip.c:1722)" -> "display_ratio\n(util.c:508)";
    "zip\n(zip.c:34)" -> "OUTBUFSIZ\n(zip.c:101)";
    "main\n(gzip.c:414)" -> "fprintf\n(gzip.c:602)";
    "send_tree\n(trees.c:749)" -> "Len\n(trees.c:756)";
    "abort_gzip\n(gzip.c:2138)" -> "do_exit\n(gzip.c:2080)";
    "EXTERN\n(gzip.h:125)" -> "EXTERN\n(gzip.h:111)";
    "write_buffer\n(util.c:272)" -> "INT_MAX\n(util.c:278)";
    "remove_output_file\n(gzip.c:2114)" -> "volatile_strcpy\n(gzip.c:1072)";
    "progerror\n(gzip.c:404)" -> "errno\n(gzip.c:406)";
    "fill_window\n(deflate.c:558)" -> "EOF\n(deflate.c:602)";
    "progerror\n(gzip.c:404)" -> "ERROR\n(gzip.c:410)";
    "unzip\n(unzip.c:110)" -> "fprintf\n(unzip.c:146)";
    "put_byte\n(zip.c:83)" -> "flush_outbuf\n(util.c:286)";
    "check_ofname\n(gzip.c:1888)" -> "ERROR\n(gzip.c:1902)";
    "create_outfile\n(gzip.c:1087)" -> "NULL\n(gzip.c:1116)";
    "do_list\n(gzip.c:1722)" -> "LG\n(gzip.c:1784)";
    "build_bl_tree\n(trees.c:799)" -> "scan_tree\n(trees.c:705)";
    "deflate\n(deflate.c:748)" -> "head\n(deflate.c:812)";
    "treat_dir\n(gzip.c:2000)" -> "MAX_PATH_LEN\n(gzip.c:2031)";
    "main\n(gzip.c:414)" -> "__GETOPT_CONCAT\n(gzip.c:464)";
    "unlzw\n(unlzw.c:99)" -> "OUTBUFSIZ\n(unlzw.c:252)";
    "xalloc_die\n(util.c:472)" -> "abort_gzip\n(gzip.c:2138)";
    "unzip\n(unzip.c:110)" -> "fprintf\n(unzip.c:197)";
    "pqdownheap\n(trees.c:460)" -> "smaller\n(trees.c:468)";
    "get_method\n(gzip.c:1488)" -> "EOF\n(gzip.c:1681)";
    "flush_block\n(trees.c:859)" -> "compress_block\n(trees.c:1021)";
    "write_buf\n(util.c:315)" -> "write_error\n(util.c:496)";
    "unzip\n(unzip.c:110)" -> "abort_gzip\n(gzip.c:2138)";
    "open_and_stat\n(gzip.c:1225)" -> "S_ISLNK\n(gzip.c:1241)";
    "zip\n(zip.c:34)" -> "put_byte\n(zip.c:102)";
    "zip\n(zip.c:34)" -> "OUTBUFSIZ\n(zip.c:83)";
    "scan_tree\n(trees.c:705)" -> "Freq\n(trees.c:728)";
    "unlzw\n(unlzw.c:99)" -> "memzero\n(unlzw.c:148)";
    "updcrc\n(util.c:141)" -> "NULL\n(util.c:184)";
    "compress_block\n(trees.c:1021)" -> "Code\n(trees.c:1054)";
    "inflate_dynamic\n(inflate.c:722)" -> "DUMPBITS\n(inflate.c:815)";
    "warning\n(util.c:478)" -> "stderr\n(util.c:480)";
    "deflate\n(deflate.c:748)" -> "MIN_MATCH\n(deflate.c:808)";
    "lm_init\n(deflate.c:311)" -> "WSIZE\n(deflate.c:324)";
    "deflate\n(deflate.c:748)" -> "WSIZE\n(deflate.c:814)";
    "check_ofname\n(gzip.c:1888)" -> "progerror\n(gzip.c:404)";
    "deflate\n(deflate.c:748)" -> "HASH_BITS\n(deflate.c:808)";
    "get_byte\n(gzip.c:1589)" -> "fill_inbuf\n(util.c:210)";
    "set_file_type\n(trees.c:1073)" -> "Freq\n(trees.c:1078)";
    "copy_stat\n(gzip.c:1935)" -> "stderr\n(gzip.c:1955)";
    "treat_file\n(gzip.c:864)" -> "fprintf\n(gzip.c:924)";
    "get_method\n(gzip.c:1488)" -> "WARNING\n(gzip.c:1564)";
    "copy_stat\n(gzip.c:1935)" -> "perror\n(gzip.c:1965)";
    "main\n(gzip.c:414)" -> "__GETOPT_XCONCAT\n(gzip.c:474)";
    "get_byte\n(gzip.c:1573)" -> "fill_inbuf\n(util.c:210)";
    "flush_output\n(inflate.c:652)" -> "flush_window\n(util.c:299)";
    "do_list\n(gzip.c:1722)" -> "stdout\n(gzip.c:1817)";
    "gen_bitlen\n(trees.c:492)" -> "Dad\n(trees.c:517)";
    "fill_window\n(deflate.c:558)" -> "head\n(deflate.c:587)";
    "rsync_roll\n(deflate.c:614)" -> "RSYNC_WIN\n(deflate.c:635)";
    "get_method\n(gzip.c:1488)" -> "TYPE_WIDTH\n(gzip.c:1567)";
    "get_method\n(gzip.c:1488)" -> "fprintf\n(gzip.c:1592)";
    "open_and_stat\n(gzip.c:1225)" -> "__S_IFMT\n(gzip.c:1241)";
    "create_outfile\n(gzip.c:1087)" -> "ERROR\n(gzip.c:1134)";
    "copy_stat\n(gzip.c:1935)" -> "OK\n(gzip.c:1961)";
    "deflate\n(deflate.c:748)" -> "WSIZE\n(deflate.c:812)";
    "inflate_stored\n(inflate.c:616)" -> "DUMPBITS\n(inflate.c:642)";
    "flush_block\n(trees.c:859)" -> "STORED_BLOCK\n(trees.c:956)";
    "main\n(gzip.c:414)" -> "optind\n(gzip.c:494)";
    "send_code\n(trees.c:776)" -> "send_bits\n(bits.c:128)";
    "zip\n(zip.c:34)" -> "OUTBUFSIZ\n(zip.c:102)";
    "RSYNC_ROLL\n(deflate.c:803)" -> "rsync_roll\n(deflate.c:614)";
    "inflate_block\n(inflate.c:898)" -> "GETBYTE\n(inflate.c:913)";
    "shorten_name\n(gzip.c:1830)" -> "strequ\n(gzip.c:1853)";
    "write_error\n(util.c:496)" -> "fprintf\n(util.c:499)";
    "fill_window\n(deflate.c:558)" -> "WSIZE\n(deflate.c:579)";
    "copy\n(util.c:117)" -> "errno\n(util.c:122)";
    "deflate\n(deflate.c:748)" -> "RSYNC_ROLL\n(deflate.c:862)";
    "deflate\n(deflate.c:748)" -> "UPDATE_HASH\n(deflate.c:808)";
    "zip\n(zip.c:34)" -> "OUTBUFSIZ\n(zip.c:50)";
    "treat_file\n(gzip.c:864)" -> "do_list\n(gzip.c:1722)";
    "open_input_file\n(gzip.c:1281)" -> "strequ\n(gzip.c:1327)";
    "treat_file\n(gzip.c:864)" -> "WARN\n(gzip.c:907)";
    "send_bits\n(bits.c:128)" -> "Buf_size\n(bits.c:141)";
    "unlzw\n(unlzw.c:99)" -> "OUTBUFSIZ\n(unlzw.c:250)";
    "copy_stat\n(gzip.c:1935)" -> "WARNING\n(gzip.c:1985)";
    "treat_file\n(gzip.c:864)" -> "WARN\n(gzip.c:932)";
    "NEEDBITS\n(inflate.c:773)" -> "fill_inbuf\n(util.c:210)";
    "get_method\n(gzip.c:1488)" -> "write_buf\n(util.c:315)";
    "open_input_file\n(gzip.c:1281)" -> "ENOENT\n(gzip.c:1309)";
    "deflate\n(deflate.c:748)" -> "RSYNC_ROLL\n(deflate.c:847)";
    "deflate\n(deflate.c:748)" -> "UPDATE_HASH\n(deflate.c:810)";
    "lm_init\n(deflate.c:311)" -> "FAST\n(deflate.c:341)";
    "deflate\n(deflate.c:748)" -> "HASH_BITS\n(deflate.c:763)";
    "unzip\n(unzip.c:110)" -> "stderr\n(unzip.c:202)";
    "unzip\n(unzip.c:110)" -> "LG\n(unzip.c:195)";
    "check_zipfile\n(unzip.c:62)" -> "OK\n(unzip.c:100)";
    "fill_window\n(deflate.c:558)" -> "WSIZE\n(deflate.c:582)";
    "treat_file\n(gzip.c:864)" -> "stderr\n(gzip.c:1058)";
    "lm_init\n(deflate.c:311)" -> "MAX_MATCH\n(deflate.c:364)";
    "unzip\n(unzip.c:110)" -> "inflate\n(inflate.c:945)";
    "create_outfile\n(gzip.c:1087)" -> "OK\n(gzip.c:1152)";
    "unpack\n(unpack.c:213)" -> "prefix_len\n(unpack.c:240)";
    "do_list\n(gzip.c:1722)" -> "stdout\n(gzip.c:1753)";
    "get_method\n(gzip.c:1488)" -> "get_byte\n(gzip.c:1507)";
    "unzip\n(unzip.c:110)" -> "fprintf\n(unzip.c:202)";
    "main\n(gzip.c:414)" -> "license\n(gzip.c:388)";
    "gzip_base_name\n(util.c:349)" -> "casemap\n(util.c:353)";
    "inflate_codes\n(inflate.c:509)" -> "wp\n(inflate.c:562)";
    "inflate_codes\n(inflate.c:509)" -> "NEXTBYTE\n(inflate.c:569)";
    "make_table\n(unlzh.c:134)" -> "right\n(unlzh.c:186)";
    "treat_dir\n(gzip.c:2000)" -> "fdopendir\n(gzip.c:2010)";
    "do_list\n(gzip.c:1722)" -> "read_error\n(util.c:483)";
    "zip\n(zip.c:34)" -> "OUTBUFSIZ\n(zip.c:49)";
    "treat_stdin\n(gzip.c:725)" -> "input_eof\n(gzip.c:686)";
    "zip\n(zip.c:34)" -> "put_byte\n(zip.c:49)";
    "unzip\n(unzip.c:110)" -> "SH\n(unzip.c:125)";
    "build_tree\n(trees.c:618)" -> "HEAP_SIZE\n(trees.c:632)";
    "scan_tree\n(trees.c:705)" -> "Freq\n(trees.c:730)";
    "deflate\n(deflate.c:748)" -> "MIN_MATCH\n(deflate.c:814)";
    "unlzw\n(unlzw.c:99)" -> "FIRST\n(unlzw.c:203)";
    "get_method\n(gzip.c:1488)" -> "TYPE_SIGNED\n(gzip.c:1557)";
    "treat_file\n(gzip.c:864)" -> "stderr\n(gzip.c:914)";
    "add_envopt\n(util.c:412)" -> "SEPARATOR\n(util.c:429)";
    "lm_init\n(deflate.c:311)" -> "HASH_SIZE\n(deflate.c:367)";
    "EXTERN\n(gzip.h:125)" -> "tab_prefix\n(gzip.h:123)";
    "abort_gzip\n(gzip.c:2138)" -> "remove_output_file\n(gzip.c:2114)";
    "create_outfile\n(gzip.c:1087)" -> "volatile_strcpy\n(gzip.c:1072)";
    "copy_block\n(bits.c:190)" -> "put_short\n(bits.c:198)";
    "main\n(gzip.c:414)" -> "stderr\n(gzip.c:630)";
    "read_pt_len\n(unlzh.c:200)" -> "CHAR_BIT\n(unlzh.c:218)";
    "fillbuf\n(unlzh.c:102)" -> "EOF\n(unlzh.c:109)";
    "rsync_roll\n(deflate.c:614)" -> "RSYNC_WIN\n(deflate.c:618)";
    "inflate_stored\n(inflate.c:616)" -> "GETBYTE\n(inflate.c:636)";
    "zip\n(zip.c:34)" -> "put_byte\n(zip.c:68)";
    "unlzw\n(unlzw.c:99)" -> "BITS\n(unlzw.c:134)";
    "build_tree\n(trees.c:618)" -> "gen_codes\n(trees.c:577)";
    "do_list\n(gzip.c:1722)" -> "LG\n(gzip.c:1783)";
    "add_envopt\n(util.c:412)" -> "NULL\n(util.c:437)";
    "get_method\n(gzip.c:1488)" -> "check_zipfile\n(unzip.c:62)";
    "display_ratio\n(util.c:508)" -> "fprintf\n(util.c:513)";
    "GETBYTE\n(inflate.c:569)" -> "fill_inbuf\n(util.c:210)";
    "lm_init\n(deflate.c:311)" -> "MIN_MATCH\n(deflate.c:367)";
    "unlzw\n(unlzw.c:99)" -> "CLEAR\n(unlzw.c:203)";
    "read_buffer\n(util.c:241)" -> "EAGAIN\n(util.c:260)";
    "treat_file\n(gzip.c:864)" -> "fprintf\n(gzip.c:991)";
    "deflate_fast\n(deflate.c:660)" -> "MIN_MATCH\n(deflate.c:666)";
    "main\n(gzip.c:414)" -> "__GETOPT_ID\n(gzip.c:501)";
    "NEXTBYTE\n(inflate.c:799)" -> "fill_inbuf\n(util.c:210)";
    "fill_window\n(deflate.c:558)" -> "WSIZE\n(deflate.c:584)";
    "put_byte\n(bits.c:177)" -> "flush_outbuf\n(util.c:286)";
    "lm_init\n(deflate.c:311)" -> "head\n(deflate.c:324)";
    "check_zipfile\n(unzip.c:62)" -> "SH\n(unzip.c:72)";
    "flush_output\n(inflate.c:595)" -> "flush_window\n(util.c:299)";
    "inflate_stored\n(inflate.c:616)" -> "GETBYTE\n(inflate.c:639)";
    "longest_match\n(deflate.c:387)" -> "MAX_MATCH\n(deflate.c:417)";
    "add_envopt\n(util.c:412)" -> "NULL\n(util.c:424)";
    "unlzw\n(unlzw.c:99)" -> "clear_tab_prefixof\n(unlzw.c:202)";
    "put_byte\n(zip.c:51)" -> "flush_outbuf\n(util.c:286)";
    "read_c_len\n(unlzh.c:235)" -> "BITBUFSIZ\n(unlzh.c:248)";
    "main\n(gzip.c:414)" -> "__GETOPT_CONCAT\n(gzip.c:657)";
    "deflate\n(deflate.c:748)" -> "HASH_MASK\n(deflate.c:812)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEXTBYTE\n(inflate.c:773)";
    "inflate_stored\n(inflate.c:616)" -> "flush_output\n(inflate.c:652)";
    "make_ofname\n(gzip.c:1380)" -> "fprintf\n(gzip.c:1453)";
    "do_list\n(gzip.c:1722)" -> "printf\n(gzip.c:1818)";
    "treat_stdin\n(gzip.c:725)" -> "do_list\n(gzip.c:1722)";
    "unzip\n(unzip.c:110)" -> "SH\n(unzip.c:142)";
    "read_c_len\n(unlzh.c:235)" -> "NC\n(unlzh.c:265)";
    "deflate\n(deflate.c:748)" -> "HASH_MASK\n(deflate.c:814)";
    "gen_bitlen\n(trees.c:492)" -> "Len\n(trees.c:517)";
    "inflate_stored\n(inflate.c:616)" -> "wp\n(inflate.c:627)";
    "zip\n(zip.c:34)" -> "OK\n(zip.c:106)";
    "fill_window\n(deflate.c:558)" -> "memzero\n(deflate.c:605)";
    "deflate\n(deflate.c:748)" -> "FLUSH_BLOCK\n(deflate.c:877)";
    "deflate\n(deflate.c:748)" -> "HASH_SIZE\n(deflate.c:814)";
    "deflate_fast\n(deflate.c:660)" -> "MIN_MATCH\n(deflate.c:689)";
    "build_tree\n(trees.c:618)" -> "Len\n(trees.c:639)";
    "deflate\n(deflate.c:748)" -> "head\n(deflate.c:814)";
    "unzip\n(unzip.c:110)" -> "LOCSIZ\n(unzip.c:146)";
    "unzip\n(unzip.c:110)" -> "stderr\n(unzip.c:184)";
    "get_method\n(gzip.c:1488)" -> "ORIG_NAME\n(gzip.c:1601)";
    "decode_p\n(unlzh.c:297)" -> "BITBUFSIZ\n(unlzh.c:301)";
    "main\n(gzip.c:414)" -> "optarg\n(gzip.c:509)";
    "huft_build\n(inflate.c:273)" -> "NULL\n(inflate.c:426)";
    "copy\n(util.c:117)" -> "OK\n(util.c:133)";
    "inflate_codes\n(inflate.c:509)" -> "flush_output\n(inflate.c:546)";
    "deflate_fast\n(deflate.c:660)" -> "longest_match\n(deflate.c:387)";
    "treat_file\n(gzip.c:864)" -> "stderr\n(gzip.c:983)";
    "inflate_dynamic\n(inflate.c:722)" -> "wp\n(inflate.c:759)";
    "read_pt_len\n(unlzh.c:200)" -> "BITBUFSIZ\n(unlzh.c:218)";
    "treat_stdin\n(gzip.c:725)" -> "ERROR\n(gzip.c:751)";
    "treat_file\n(gzip.c:864)" -> "treat_dir\n(gzip.c:2000)";
    "inflate_codes\n(inflate.c:509)" -> "NEXTBYTE\n(inflate.c:572)";
    "main\n(gzip.c:414)" -> "MAX_SUFFIX\n(gzip.c:629)";
    "unpack\n(unpack.c:213)" -> "build_tree\n(unpack.c:170)";
    "main\n(gzip.c:414)" -> "stderr\n(gzip.c:583)";
    "main\n(gzip.c:414)" -> "ERROR\n(gzip.c:631)";
    "rsync_roll\n(deflate.c:614)" -> "RSYNC_WIN\n(deflate.c:620)";
    "inflate_stored\n(inflate.c:616)" -> "wp\n(inflate.c:652)";
    "copy_block\n(bits.c:190)" -> "OUTBUFSIZ\n(bits.c:199)";
    "treat_file\n(gzip.c:864)" -> "WARNING\n(gzip.c:924)";
    "GETBYTE\n(inflate.c:919)" -> "fill_inbuf\n(util.c:210)";
    "make_ofname\n(gzip.c:1380)" -> "WARNING\n(gzip.c:1418)";
    "inflate_dynamic\n(inflate.c:722)" -> "NEXTBYTE\n(inflate.c:834)";
    "unlzw\n(unlzw.c:99)" -> "LZW_RESERVED\n(unlzw.c:124)";
    "treat_stdin\n(gzip.c:725)" -> "OK\n(gzip.c:792)";
    "deflate\n(deflate.c:748)" -> "MAX_MATCH\n(deflate.c:873)";
    "init_getbits\n(unlzh.c:124)" -> "fillbuf\n(unlzh.c:102)";
    "copy_stat\n(gzip.c:1935)" -> "stderr\n(gzip.c:1961)";
    "get_method\n(gzip.c:1488)" -> "fprintf\n(gzip.c:1545)";
    "deflate\n(deflate.c:748)" -> "HASH_MASK\n(deflate.c:810)";
    "decode\n(unlzh.c:336)" -> "UCHAR_MAX\n(unlzh.c:363)";
    "longest_match\n(deflate.c:387)" -> "MIN_LOOKAHEAD\n(deflate.c:394)";
    "progerror\n(gzip.c:404)" -> "stderr\n(gzip.c:407)";
    "unlzw\n(unlzw.c:99)" -> "FIRST\n(unlzw.c:146)";
    "deflate\n(deflate.c:748)" -> "rsync_roll\n(deflate.c:614)";
    "treat_stdin\n(gzip.c:725)" -> "STDOUT_FILENO\n(gzip.c:792)";
    "create_outfile\n(gzip.c:1087)" -> "WARN\n(gzip.c:1148)";
    "treat_file\n(gzip.c:864)" -> "WARN\n(gzip.c:1039)";
    "bi_windup\n(bits.c:172)" -> "flush_outbuf\n(util.c:286)";
    "fill_window\n(deflate.c:558)" -> "HASH_SIZE\n(deflate.c:586)";
    "fill_window\n(deflate.c:558)" -> "WSIZE\n(deflate.c:587)";
    "inflate_codes\n(inflate.c:509)" -> "NEEDBITS\n(inflate.c:572)";
    "get_method\n(gzip.c:1488)" -> "EOF\n(gzip.c:1702)";
    "do_list\n(gzip.c:1722)" -> "printf\n(gzip.c:1740)";
    "get_method\n(gzip.c:1488)" -> "WARN\n(gzip.c:1705)";
    "main\n(gzip.c:414)" -> "__GETOPT_ID\n(gzip.c:620)";
    "inflate_dynamic\n(inflate.c:722)" -> "DUMPBITS\n(inflate.c:836)";
    "build_tree\n(unpack.c:170)" -> "prefix_len\n(unpack.c:196)";
    "unzip\n(unzip.c:110)" -> "ERROR\n(unzip.c:191)";
    "do_list\n(gzip.c:1722)" -> "MAX_METHODS\n(gzip.c:1728)";
    "get_method\n(gzip.c:1488)" -> "get_byte\n(gzip.c:1552)";
    "unlzw\n(unlzw.c:99)" -> "DIST_BUFSIZE\n(unlzw.c:266)";
    "lm_init\n(deflate.c:311)" -> "HASH_BITS\n(deflate.c:367)";
    "make_table\n(unlzh.c:134)" -> "left\n(unlzh.c:187)";
    "deflate\n(deflate.c:748)" -> "HASH_SIZE\n(deflate.c:763)";
    "ct_init\n(trees.c:341)" -> "D_CODES\n(trees.c:382)";
    "inflate_dynamic\n(inflate.c:722)" -> "DUMPBITS\n(inflate.c:801)";
    "main\n(gzip.c:414)" -> "__GETOPT_XCONCAT\n(gzip.c:509)";
    "treat_file\n(gzip.c:864)" -> "SIG_SETMASK\n(gzip.c:1035)";
    "get_method\n(gzip.c:1488)" -> "EOF\n(gzip.c:1684)";
    "inflate_codes\n(inflate.c:509)" -> "GETBYTE\n(inflate.c:557)";
    "unlzw\n(unlzw.c:99)" -> "tab_suffixof\n(unlzw.c:244)";
    "write_buffer\n(util.c:272)" -> "INT_MAX\n(util.c:277)";
    "treat_stdin\n(gzip.c:725)" -> "ERROR\n(gzip.c:767)";
    "decode\n(unlzh.c:336)" -> "DICBIT\n(unlzh.c:371)";
    "treat_file\n(gzip.c:864)" -> "S_ISGID\n(gzip.c:912)";
    "do_chown\n(gzip.c:1921)" -> "ignore_value\n(gzip.c:1924)";
    "send_code\n(trees.c:1064)" -> "send_bits\n(bits.c:128)";
    "open_input_file\n(gzip.c:1281)" -> "progerror\n(gzip.c:404)";
    "zip\n(zip.c:34)" -> "put_byte\n(zip.c:83)";
    "unlzw\n(unlzw.c:99)" -> "de_stack\n(unlzw.c:211)";
    "gen_bitlen\n(trees.c:492)" -> "Len\n(trees.c:529)";
    "read_error\n(util.c:483)" -> "errno\n(util.c:488)";
    "do_list\n(gzip.c:1722)" -> "SEEK_END\n(gzip.c:1776)";
    "treat_file\n(gzip.c:864)" -> "EINVAL\n(gzip.c:1018)";
    "NEXTBYTE\n(inflate.c:530)" -> "fill_inbuf\n(util.c:210)";
    "lzw\n(lzw.c:13)" -> "ERROR\n(lzw.c:22)";
    "shorten_name\n(gzip.c:1830)" -> "PART_SEP\n(gzip.c:1876)";
    "unlzh\n(unlzh.c:382)" -> "DICBIT\n(unlzh.c:392)";
    "treat_file\n(gzip.c:864)" -> "perror\n(gzip.c:1043)";
    "zip\n(zip.c:34)" -> "ORIG_NAME\n(zip.c:54)";
    "treat_file\n(gzip.c:864)" -> "WARNING\n(gzip.c:890)";
    "gen_bitlen\n(trees.c:492)" -> "Len\n(trees.c:559)";
    "bi_windup\n(bits.c:172)" -> "put_byte\n(bits.c:177)";
    "get_method\n(gzip.c:1488)" -> "HEADER_CRC\n(gzip.c:1616)";
    "scan_tree\n(trees.c:705)" -> "Freq\n(trees.c:732)";
    "create_outfile\n(gzip.c:1087)" -> "OK\n(gzip.c:1148)";
    "deflate\n(deflate.c:748)" -> "MIN_MATCH\n(deflate.c:771)";
    "inflate_codes\n(inflate.c:509)" -> "slide\n(inflate.c:583)";
    "open_and_stat\n(gzip.c:1225)" -> "__S_ISTYPE\n(gzip.c:1241)";
}
