
;; Function rpl_strerror (rpl_strerror, funcdef_no=6, decl_uid=2194, cgraph_uid=7, symbol_order=6)

Partition 1: size 8 align 8
	len_11
Partition 0: size 8 align 8
	msg_7

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 75.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 n+0 S4 A32])
        (reg:SI 5 di [ n ])) "strerror.c":38:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 87)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 n+0 S4 A32])) "strerror.c":44:21 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 5 di)
        (reg:SI 87)) "strerror.c":44:21 -1
     (nil))
(call_insn/u 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strerror_override") [flags 0x41]  <function_decl 0x7d5ac6253a00 strerror_override>) [0 strerror_override S1 A8])
            (const_int 0 [0]))) "strerror.c":44:21 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 88)
        (reg:DI 0 ax)) "strerror.c":44:21 -1
     (nil))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 msg+0 S8 A64])
        (reg:DI 88)) "strerror.c":44:21 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 msg+0 S8 A64])
            (const_int 0 [0]))) "strerror.c":45:6 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "strerror.c":45:6 -1
     (nil)
 -> 17)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 85 [ _4 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 msg+0 S8 A64])) "strerror.c":46:12 -1
     (nil))
(jump_insn 15 14 16 4 (set (pc)
        (label_ref 72)) "strerror.c":46:12 -1
     (nil)
 -> 72)
(barrier 16 15 17)
(code_label 17 16 18 5 2 (nil) [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 n+0 S4 A32])) "strerror.c":48:9 -1
     (nil))
(insn 20 19 21 5 (set (reg:SI 5 di)
        (reg:SI 89)) "strerror.c":48:9 -1
     (nil))
(call_insn 21 20 22 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strerror") [flags 0x41]  <function_decl 0x7d5ac6584300 strerror>) [0 strerror S1 A8])
            (const_int 0 [0]))) "strerror.c":48:9 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 22 21 23 5 (set (reg:DI 90)
        (reg:DI 0 ax)) "strerror.c":48:9 -1
     (nil))
(insn 23 22 24 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 msg+0 S8 A64])
        (reg:DI 90)) "strerror.c":48:9 -1
     (nil))
(insn 24 23 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 msg+0 S8 A64])
            (const_int 0 [0]))) "strerror.c":55:6 -1
     (nil))
(jump_insn 25 24 26 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "strerror.c":55:6 -1
     (nil)
 -> 31)
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 msg+0 S8 A64])) "strerror.c":55:16 -1
     (nil))
(insn 28 27 29 6 (set (reg:QI 82 [ _1 ])
        (mem:QI (reg/f:DI 91) [0 *msg_10+0 S1 A8])) "strerror.c":55:16 -1
     (nil))
(insn 29 28 30 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 82 [ _1 ])
            (const_int 0 [0]))) "strerror.c":55:12 -1
     (nil))
(jump_insn 30 29 31 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "strerror.c":55:12 -1
     (nil)
 -> 47)
(code_label 31 30 32 7 4 (nil) [1 uses])
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 7 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 n+0 S4 A32])) "strerror.c":59:7 -1
     (nil))
(insn 34 33 35 7 (set (reg:SI 1 dx)
        (reg:SI 92)) "strerror.c":59:7 -1
     (nil))
(insn 35 34 36 7 (set (reg:DI 93)
        (symbol_ref:DI ("fmt.0") [flags 0x2]  <var_decl 0x7d5ac65bd870 fmt>)) "strerror.c":59:7 -1
     (nil))
(insn 36 35 37 7 (set (reg:DI 4 si)
        (reg:DI 93)) "strerror.c":59:7 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("fmt.0") [flags 0x2]  <var_decl 0x7d5ac65bd870 fmt>)
        (nil)))
(insn 37 36 38 7 (set (reg:DI 94)
        (symbol_ref:DI ("buf.1") [flags 0x2]  <var_decl 0x7d5ac65bd6c0 buf>)) "strerror.c":59:7 -1
     (nil))
(insn 38 37 39 7 (set (reg:DI 5 di)
        (reg:DI 94)) "strerror.c":59:7 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("buf.1") [flags 0x2]  <var_decl 0x7d5ac65bd6c0 buf>)
        (nil)))
(insn 39 38 40 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) "strerror.c":59:7 -1
     (nil))
(call_insn 40 39 41 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x7d5ac64c1100 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) "strerror.c":59:7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(call_insn/u 41 40 42 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7d5ac6599800 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) "strerror.c":60:7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 42 41 43 7 (set (reg/f:DI 83 [ _2 ])
        (reg:DI 0 ax)) "strerror.c":60:7 -1
     (nil))
(insn 43 42 44 7 (set (mem:SI (reg/f:DI 83 [ _2 ]) [3 *_2+0 S4 A32])
        (const_int 22 [0x16])) "strerror.c":60:13 -1
     (nil))
(insn 44 43 45 7 (set (reg/f:DI 85 [ _4 ])
        (symbol_ref:DI ("buf.1") [flags 0x2]  <var_decl 0x7d5ac65bd6c0 buf>)) "strerror.c":61:14 -1
     (nil))
(jump_insn 45 44 46 7 (set (pc)
        (label_ref 72)) "strerror.c":61:14 -1
     (nil)
 -> 72)
(barrier 46 45 47)
(code_label 47 46 48 8 5 (nil) [1 uses])
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 msg+0 S8 A64])) "strerror.c":65:9 -1
     (nil))
(insn 50 49 51 8 (set (reg:DI 5 di)
        (reg:DI 95)) "strerror.c":65:9 -1
     (nil))
(call_insn/i 51 50 52 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7d5ac64b7700 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) "strerror.c":65:9 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 52 51 53 8 (set (reg:DI 96)
        (reg:DI 0 ax)) "strerror.c":65:9 -1
     (nil))
(insn 53 52 56 8 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])
        (reg:DI 96)) "strerror.c":65:9 -1
     (nil))
(insn 56 53 57 8 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])
            (const_int 255 [0xff]))) "strerror.c":66:6 -1
     (nil))
(jump_insn 57 56 58 8 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "strerror.c":66:6 -1
     (nil)
 -> 61)
(note 58 57 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 59 58 60 9 (call (mem:QI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7d5ac64ce700 abort>) [0 __builtin_abort S1 A8])
        (const_int 0 [0])) "strerror.c":67:5 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 60 59 61)
(code_label 61 60 62 10 6 (nil) [1 uses])
(note 62 61 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 10 (set (reg:DI 97)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])) "strerror.c":69:3 -1
     (nil))
(insn 64 63 65 10 (parallel [
            (set (reg:DI 84 [ _3 ])
                (plus:DI (reg:DI 97)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "strerror.c":69:3 -1
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 65 64 66 10 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 msg+0 S8 A64])) "strerror.c":69:3 -1
     (nil))
(insn 66 65 67 10 (set (reg:DI 1 dx)
        (reg:DI 84 [ _3 ])) "strerror.c":69:3 -1
     (nil))
(insn 67 66 68 10 (set (reg:DI 4 si)
        (reg:DI 98)) "strerror.c":69:3 -1
     (nil))
(insn 68 67 69 10 (set (reg:DI 99)
        (symbol_ref:DI ("buf.1") [flags 0x2]  <var_decl 0x7d5ac65bd6c0 buf>)) "strerror.c":69:3 -1
     (nil))
(insn 69 68 70 10 (set (reg:DI 5 di)
        (reg:DI 99)) "strerror.c":69:3 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("buf.1") [flags 0x2]  <var_decl 0x7d5ac65bd6c0 buf>)
        (nil)))
(call_insn 70 69 71 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7d5ac64b2900 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) "strerror.c":69:3 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 71 70 72 10 (set (reg/f:DI 85 [ _4 ])
        (symbol_ref:DI ("buf.1") [flags 0x2]  <var_decl 0x7d5ac65bd6c0 buf>)) "strerror.c":70:10 -1
     (nil))
(code_label 72 71 73 11 3 (nil) [2 uses])
(note 73 72 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 78 11 (set (reg/f:DI 86 [ <retval> ])
        (reg/f:DI 85 [ _4 ])) "strerror.c":71:1 -1
     (nil))
(insn 78 74 79 11 (set (reg/i:DI 0 ax)
        (reg/f:DI 86 [ <retval> ])) "strerror.c":71:1 -1
     (nil))
(insn 79 78 0 11 (use (reg/i:DI 0 ax)) "strerror.c":71:1 -1
     (nil))
