
;; Function rpl_fdopendir (rpl_fdopendir, funcdef_no=6, decl_uid=2316, cgraph_uid=7, symbol_order=6)

Partition 0: size 144 align 16
	st

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 17 from 8 to 9.
Redirecting jump 30 from 8 to 9.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Removing jump 43.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -164 [0xffffffffffffff5c])) [4 fd+0 S4 A32])
        (reg:SI 5 di [ fd ])) "fdopendir.c":237:1 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.3989+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "fdopendir.c":237:1 -1
     (nil))
(insn 7 4 8 2 (parallel [
            (set (reg:DI 88)
                (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "fdopendir.c":239:7 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -164 [0xffffffffffffff5c])) [4 fd+0 S4 A32])) "fdopendir.c":239:7 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 88)) "fdopendir.c":239:7 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 89)) "fdopendir.c":239:7 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fstat") [flags 0x41]  <function_decl 0x7bcf13877a00 fstat>) [0 fstat S1 A8])
            (const_int 0 [0]))) "fdopendir.c":239:7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg:SI 82 [ _1 ])
        (reg:SI 0 ax)) "fdopendir.c":239:7 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int 0 [0]))) "fdopendir.c":239:6 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "fdopendir.c":239:6 -1
     (nil)
 -> 19)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:DI 86 [ _5 ])
        (const_int 0 [0])) "fdopendir.c":240:12 -1
     (nil))
(jump_insn 17 16 18 4 (set (pc)
        (label_ref:DI 40)) "fdopendir.c":240:12 807 {jump}
     (nil)
 -> 40)
(barrier 18 17 19)
(code_label 19 18 20 5 2 (nil) [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg:SI 83 [ _2 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [4 st.st_mode+0 S4 A64])) "fdopendir.c":241:8 -1
     (nil))
(insn 22 21 23 5 (parallel [
            (set (reg:SI 84 [ _3 ])
                (and:SI (reg:SI 83 [ _2 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fdopendir.c":241:8 -1
     (nil))
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _3 ])
            (const_int 16384 [0x4000]))) "fdopendir.c":241:6 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "fdopendir.c":241:6 -1
     (nil)
 -> 32)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 26 25 27 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7bcf13858300 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) "fdopendir.c":243:7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 27 26 28 6 (set (reg/f:DI 85 [ _4 ])
        (reg:DI 0 ax)) "fdopendir.c":243:7 -1
     (nil))
(insn 28 27 29 6 (set (mem:SI (reg/f:DI 85 [ _4 ]) [4 *_4+0 S4 A32])
        (const_int 20 [0x14])) "fdopendir.c":243:13 -1
     (nil))
(insn 29 28 30 6 (set (reg/f:DI 86 [ _5 ])
        (const_int 0 [0])) "fdopendir.c":244:14 -1
     (nil))
(jump_insn 30 29 31 6 (set (pc)
        (label_ref:DI 40)) "fdopendir.c":244:14 807 {jump}
     (nil)
 -> 40)
(barrier 31 30 32)
(code_label 32 31 33 7 4 (nil) [1 uses])
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -164 [0xffffffffffffff5c])) [4 fd+0 S4 A32])) "fdopendir.c":246:10 -1
     (nil))
(insn 35 34 36 7 (set (reg:SI 5 di)
        (reg:SI 90)) "fdopendir.c":246:10 -1
     (nil))
(call_insn 36 35 37 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fdopendir") [flags 0x41]  <function_decl 0x7bcf13b74b00 fdopendir>) [0 fdopendir S1 A8])
            (const_int 0 [0]))) "fdopendir.c":246:10 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 37 36 40 7 (set (reg/f:DI 86 [ _5 ])
        (reg:DI 0 ax)) "fdopendir.c":246:10 -1
     (nil))
(code_label 40 37 41 9 5 (nil) [2 uses])
(note 41 40 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 46 9 (set (reg/f:DI 87 [ <retval> ])
        (reg/f:DI 86 [ _5 ])) "fdopendir.c":247:1 -1
     (nil))
(insn 46 42 47 9 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.3989+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "fdopendir.c":247:1 -1
     (nil))
(jump_insn 47 46 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "fdopendir.c":247:1 -1
     (nil)
 -> 50)
(note 54 47 48 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(call_insn 48 54 49 11 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7bcf1389b400 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "fdopendir.c":247:1 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 49 48 50)
(code_label 50 49 55 12 6 (nil) [1 uses])
(note 55 50 51 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 51 55 52 12 (set (reg/i:DI 0 ax)
        (reg/f:DI 87 [ <retval> ])) "fdopendir.c":247:1 -1
     (nil))
(insn 52 51 0 12 (use (reg/i:DI 0 ax)) "fdopendir.c":247:1 -1
     (nil))
