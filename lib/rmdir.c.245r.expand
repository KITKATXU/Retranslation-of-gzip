
;; Function rpl_rmdir (rpl_rmdir, funcdef_no=0, decl_uid=2751, cgraph_uid=1, symbol_order=0)

Partition 0: size 8 align 8
	len_14
Partition 1: size 4 align 4
	result_25

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 84.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 dir+0 S8 A64])
        (reg:DI 5 di [ dir ])) "rmdir.c":35:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 dir+0 S8 A64])) "rmdir.c":37:16 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 97)) "rmdir.c":37:16 -1
     (nil))
(call_insn/i 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x74be9a0b7700 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) "rmdir.c":37:16 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 98)
        (reg:DI 0 ax)) "rmdir.c":37:16 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])
        (reg:DI 98)) "rmdir.c":37:16 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (label_ref 15)) "rmdir.c":39:9 -1
     (nil)
 -> 15)
(barrier 12 11 25)
(code_label 25 12 13 4 4 (nil) [1 uses])
(note 13 25 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "rmdir.c":40:8 -1
     (nil))
(code_label 15 14 16 5 2 (nil) [1 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])
            (const_int 0 [0]))) "rmdir.c":39:14 -1
     (nil))
(jump_insn 18 17 19 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "rmdir.c":39:14 -1
     (nil)
 -> 28)
(note 19 18 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 6 (set (reg:DI 99)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])) "rmdir.c":39:17 -1
     (nil))
(insn 21 20 22 6 (parallel [
            (set (reg:DI 82 [ _1 ])
                (plus:DI (reg:DI 99)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "rmdir.c":39:17 -1
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 22 21 23 6 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 dir+0 S8 A64])) "rmdir.c":39:17 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 83 [ _2 ])
                (plus:DI (reg:DI 82 [ _1 ])
                    (reg/f:DI 100)))
            (clobber (reg:CC 17 flags))
        ]) "rmdir.c":39:17 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [3 dir+0 S8 A64])
            (reg:DI 82 [ _1 ]))
        (nil)))
(insn 24 23 26 6 (set (reg:QI 84 [ _3 ])
        (mem:QI (reg/f:DI 83 [ _2 ]) [0 *_2+0 S1 A8])) "rmdir.c":39:17 -1
     (nil))
(insn 26 24 27 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _3 ])
            (const_int 47 [0x2f]))) "rmdir.c":39:14 -1
     (nil))
(jump_insn 27 26 28 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "rmdir.c":39:14 -1
     (nil)
 -> 25)
(code_label 28 27 29 7 3 (nil) [1 uses])
(note 29 28 30 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])
            (const_int 0 [0]))) "rmdir.c":41:6 -1
     (nil))
(jump_insn 31 30 32 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "rmdir.c":41:6 -1
     (nil)
 -> 59)
(note 32 31 33 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 8 (set (reg:DI 101)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])) "rmdir.c":41:17 -1
     (nil))
(insn 34 33 35 8 (parallel [
            (set (reg:DI 85 [ _4 ])
                (plus:DI (reg:DI 101)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "rmdir.c":41:17 -1
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 35 34 36 8 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 dir+0 S8 A64])) "rmdir.c":41:17 -1
     (nil))
(insn 36 35 37 8 (parallel [
            (set (reg/f:DI 86 [ _5 ])
                (plus:DI (reg:DI 85 [ _4 ])
                    (reg/f:DI 102)))
            (clobber (reg:CC 17 flags))
        ]) "rmdir.c":41:17 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [3 dir+0 S8 A64])
            (reg:DI 85 [ _4 ]))
        (nil)))
(insn 37 36 38 8 (set (reg:QI 87 [ _6 ])
        (mem:QI (reg/f:DI 86 [ _5 ]) [0 *_5+0 S1 A8])) "rmdir.c":41:17 -1
     (nil))
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ _6 ])
            (const_int 46 [0x2e]))) "rmdir.c":41:11 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "rmdir.c":41:11 -1
     (nil)
 -> 59)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])
            (const_int 1 [0x1]))) "rmdir.c":41:34 -1
     (nil))
(jump_insn 42 41 43 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "rmdir.c":41:34 -1
     (nil)
 -> 51)
(note 43 42 44 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 10 (set (reg:DI 103)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])) "rmdir.c":41:50 -1
     (nil))
(insn 45 44 46 10 (parallel [
            (set (reg:DI 88 [ _7 ])
                (plus:DI (reg:DI 103)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "rmdir.c":41:50 -1
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 len+0 S8 A64])
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))
(insn 46 45 47 10 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 dir+0 S8 A64])) "rmdir.c":41:50 -1
     (nil))
(insn 47 46 48 10 (parallel [
            (set (reg/f:DI 89 [ _8 ])
                (plus:DI (reg:DI 88 [ _7 ])
                    (reg/f:DI 104)))
            (clobber (reg:CC 17 flags))
        ]) "rmdir.c":41:50 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [3 dir+0 S8 A64])
            (reg:DI 88 [ _7 ]))
        (nil)))
(insn 48 47 49 10 (set (reg:QI 90 [ _9 ])
        (mem:QI (reg/f:DI 89 [ _8 ]) [0 *_8+0 S1 A8])) "rmdir.c":41:50 -1
     (nil))
(insn 49 48 50 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ _9 ])
            (const_int 47 [0x2f]))) "rmdir.c":41:47 -1
     (nil))
(jump_insn 50 49 51 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "rmdir.c":41:47 -1
     (nil)
 -> 59)
(code_label 51 50 52 11 6 (nil) [1 uses])
(note 52 51 53 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 53 52 54 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x74be9a1e3500 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) "rmdir.c":43:7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 54 53 55 11 (set (reg/f:DI 91 [ _10 ])
        (reg:DI 0 ax)) "rmdir.c":43:7 -1
     (nil))
(insn 55 54 56 11 (set (mem:SI (reg/f:DI 91 [ _10 ]) [2 *_10+0 S4 A32])
        (const_int 22 [0x16])) "rmdir.c":43:13 -1
     (nil))
(insn 56 55 57 11 (set (reg:SI 95 [ _15 ])
        (const_int -1 [0xffffffffffffffff])) "rmdir.c":44:14 -1
     (nil))
(jump_insn 57 56 58 11 (set (pc)
        (label_ref 81)) "rmdir.c":44:14 -1
     (nil)
 -> 81)
(barrier 58 57 59)
(code_label 59 58 60 12 5 (nil) [3 uses])
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 dir+0 S8 A64])) "rmdir.c":46:12 -1
     (nil))
(insn 62 61 63 12 (set (reg:DI 5 di)
        (reg:DI 105)) "rmdir.c":46:12 -1
     (nil))
(call_insn 63 62 64 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rmdir") [flags 0x41]  <function_decl 0x74be9a1c2a00 rmdir>) [0 rmdir S1 A8])
            (const_int 0 [0]))) "rmdir.c":46:12 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 64 63 65 12 (set (reg:SI 106)
        (reg:SI 0 ax)) "rmdir.c":46:12 -1
     (nil))
(insn 65 64 66 12 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 result+0 S4 A32])
        (reg:SI 106)) "rmdir.c":46:12 -1
     (nil))
(insn 66 65 67 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 result+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "rmdir.c":50:6 -1
     (nil))
(jump_insn 67 66 68 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "rmdir.c":50:6 -1
     (nil)
 -> 78)
(note 68 67 69 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 69 68 70 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x74be9a1e3500 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) "rmdir.c":50:23 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 70 69 71 13 (set (reg/f:DI 92 [ _11 ])
        (reg:DI 0 ax)) "rmdir.c":50:23 -1
     (nil))
(insn 71 70 72 13 (set (reg:SI 93 [ _12 ])
        (mem:SI (reg/f:DI 92 [ _11 ]) [2 *_11+0 S4 A32])) "rmdir.c":50:23 -1
     (nil))
(insn 72 71 73 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ _12 ])
            (const_int 22 [0x16]))) "rmdir.c":50:20 -1
     (nil))
(jump_insn 73 72 74 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "rmdir.c":50:20 -1
     (nil)
 -> 78)
(note 74 73 75 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 75 74 76 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x74be9a1e3500 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) "rmdir.c":51:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 76 75 77 14 (set (reg/f:DI 94 [ _13 ])
        (reg:DI 0 ax)) "rmdir.c":51:5 -1
     (nil))
(insn 77 76 78 14 (set (mem:SI (reg/f:DI 94 [ _13 ]) [2 *_13+0 S4 A32])
        (const_int 20 [0x14])) "rmdir.c":51:11 -1
     (nil))
(code_label 78 77 79 15 8 (nil) [2 uses])
(note 79 78 80 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 15 (set (reg:SI 95 [ _15 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 result+0 S4 A32])) "rmdir.c":52:10 -1
     (nil))
(code_label 81 80 82 16 7 (nil) [1 uses])
(note 82 81 83 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 87 16 (set (reg:SI 96 [ <retval> ])
        (reg:SI 95 [ _15 ])) "rmdir.c":53:1 -1
     (nil))
(insn 87 83 88 16 (set (reg/i:SI 0 ax)
        (reg:SI 96 [ <retval> ])) "rmdir.c":53:1 -1
     (nil))
(insn 88 87 0 16 (use (reg/i:SI 0 ax)) "rmdir.c":53:1 -1
     (nil))
