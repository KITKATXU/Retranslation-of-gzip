
;; Function set_cloexec_flag (set_cloexec_flag, funcdef_no=6, decl_uid=1944, cgraph_uid=7, symbol_order=6)

Partition 1: size 4 align 4
	newflags_14
Partition 0: size 4 align 4
	flags_10

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 61.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 desc+0 S4 A32])
        (reg:SI 5 di [ desc ])) "cloexec.c":40:1 -1
     (nil))
(insn 3 2 4 2 (set (reg:SI 86)
        (reg:SI 4 si [ value ])) "cloexec.c":40:1 -1
     (nil))
(insn 4 3 5 2 (set (reg:QI 87)
        (subreg:QI (reg:SI 86) 0)) "cloexec.c":40:1 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:QI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 value+0 S1 A32])
        (reg:QI 87)) "cloexec.c":40:1 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 desc+0 S4 A32])) "cloexec.c":43:15 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "cloexec.c":43:15 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "cloexec.c":43:15 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg:SI 88)) "cloexec.c":43:15 -1
     (nil))
(insn 13 12 14 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cloexec.c":43:15 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rpl_fcntl") [flags 0x41]  <function_decl 0x7149321bbe00 rpl_fcntl>) [0 rpl_fcntl S1 A8])
            (const_int 0 [0]))) "cloexec.c":43:15 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 15 14 16 2 (set (reg:SI 89)
        (reg:SI 0 ax)) "cloexec.c":43:15 -1
     (nil))
(insn 16 15 19 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 flags+0 S4 A64])
        (reg:SI 89)) "cloexec.c":43:15 -1
     (nil))
(insn 19 16 20 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 flags+0 S4 A64])
            (const_int 0 [0]))) "cloexec.c":45:6 -1
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "cloexec.c":45:6 -1
     (nil)
 -> 55)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 value+0 S1 A32])
            (const_int 0 [0]))) "cloexec.c":47:50 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "cloexec.c":47:50 -1
     (nil)
 -> 29)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 flags+0 S4 A64])) "cloexec.c":47:50 -1
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg:SI 83 [ iftmp.0_2 ])
                (ior:SI (reg:SI 90)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cloexec.c":47:50 -1
     (expr_list:REG_EQUAL (ior:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 flags+0 S4 A64])
            (const_int 1 [0x1]))
        (nil)))
(jump_insn 27 26 28 5 (set (pc)
        (label_ref 33)) -1
     (nil)
 -> 33)
(barrier 28 27 29)
(code_label 29 28 30 6 3 (nil) [1 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 flags+0 S4 A64])) "cloexec.c":47:50 -1
     (nil))
(insn 32 31 33 6 (parallel [
            (set (reg:SI 83 [ iftmp.0_2 ])
                (and:SI (reg:SI 91)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "cloexec.c":47:50 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 flags+0 S4 A64])
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))
(code_label 33 32 34 7 4 (nil) [1 uses])
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 newflags+0 S4 A32])
        (reg:SI 83 [ iftmp.0_2 ])) "cloexec.c":47:11 -1
     (nil))
(insn 36 35 37 7 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 flags+0 S4 A64])) "cloexec.c":49:10 -1
     (nil))
(insn 37 36 38 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92)
            (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 newflags+0 S4 A32]))) "cloexec.c":49:10 -1
     (nil))
(jump_insn 38 37 39 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "cloexec.c":49:10 -1
     (nil)
 -> 50)
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 8 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 newflags+0 S4 A32])) "cloexec.c":50:14 -1
     (nil))
(insn 41 40 42 8 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 desc+0 S4 A32])) "cloexec.c":50:14 -1
     (nil))
(insn 42 41 43 8 (set (reg:SI 1 dx)
        (reg:SI 93)) "cloexec.c":50:14 -1
     (nil))
(insn 43 42 44 8 (set (reg:SI 4 si)
        (const_int 2 [0x2])) "cloexec.c":50:14 -1
     (nil))
(insn 44 43 45 8 (set (reg:SI 5 di)
        (reg:SI 94)) "cloexec.c":50:14 -1
     (nil))
(insn 45 44 46 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cloexec.c":50:14 -1
     (nil))
(call_insn 46 45 47 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rpl_fcntl") [flags 0x41]  <function_decl 0x7149321bbe00 rpl_fcntl>) [0 rpl_fcntl S1 A8])
            (const_int 0 [0]))) "cloexec.c":50:14 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 47 46 48 8 (set (reg:SI 82 [ _1 ])
        (reg:SI 0 ax)) "cloexec.c":50:14 -1
     (nil))
(insn 48 47 49 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int -1 [0xffffffffffffffff]))) "cloexec.c":50:11 -1
     (nil))
(jump_insn 49 48 50 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "cloexec.c":50:11 -1
     (nil)
 -> 55)
(code_label 50 49 51 9 5 (nil) [1 uses])
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 9 (set (reg:SI 84 [ _3 ])
        (const_int 0 [0])) "cloexec.c":51:16 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (label_ref 58)) "cloexec.c":51:16 -1
     (nil)
 -> 58)
(barrier 54 53 55)
(code_label 55 54 56 10 2 (nil) [2 uses])
(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 10 (set (reg:SI 84 [ _3 ])
        (const_int -1 [0xffffffffffffffff])) "cloexec.c":54:10 -1
     (nil))
(code_label 58 57 59 11 6 (nil) [1 uses])
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 64 11 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ _3 ])) "cloexec.c":72:1 -1
     (nil))
(insn 64 60 65 11 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) "cloexec.c":72:1 -1
     (nil))
(insn 65 64 0 11 (use (reg/i:SI 0 ax)) "cloexec.c":72:1 -1
     (nil))

;; Function dup_cloexec (dup_cloexec, funcdef_no=7, decl_uid=1946, cgraph_uid=8, symbol_order=7)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 16.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 fd+0 S4 A32])
        (reg:SI 5 di [ fd ])) "cloexec.c":81:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 fd+0 S4 A32])) "cloexec.c":82:10 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "cloexec.c":82:10 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 4 si)
        (const_int 1030 [0x406])) "cloexec.c":82:10 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (reg:SI 84)) "cloexec.c":82:10 -1
     (nil))
(insn 10 9 11 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cloexec.c":82:10 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rpl_fcntl") [flags 0x41]  <function_decl 0x7149321bbe00 rpl_fcntl>) [0 rpl_fcntl S1 A8])
            (const_int 0 [0]))) "cloexec.c":82:10 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 12 11 15 2 (set (reg:SI 82 [ _4 ])
        (reg:SI 0 ax)) "cloexec.c":82:10 -1
     (nil))
(insn 15 12 19 2 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ _4 ])) "cloexec.c":82:10 -1
     (nil))
(insn 19 15 20 2 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) "cloexec.c":83:1 -1
     (nil))
(insn 20 19 0 2 (use (reg/i:SI 0 ax)) "cloexec.c":83:1 -1
     (nil))
