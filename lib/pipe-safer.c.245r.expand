
;; Function pipe_safer (pipe_safer, funcdef_no=0, decl_uid=1947, cgraph_uid=1, symbol_order=0)

Partition 1: size 4 align 4
	e_34
Partition 0: size 4 align 4
	i_21

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 83.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 fd+0 S8 A64])
        (reg:DI 5 di [ fd ])) "pipe-safer.c":32:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 fd+0 S8 A64])) "pipe-safer.c":34:7 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 104)) "pipe-safer.c":34:7 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pipe") [flags 0x41]  <function_decl 0x784c3d98de00 pipe>) [0 pipe S1 A8])
            (const_int 0 [0]))) "pipe-safer.c":34:7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 82 [ _1 ])
        (reg:SI 0 ax)) "pipe-safer.c":34:7 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int 0 [0]))) "pipe-safer.c":34:6 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "pipe-safer.c":34:6 -1
     (nil)
 -> 77)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])
        (const_int 0 [0])) "pipe-safer.c":37:14 -1
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (label_ref 66)) "pipe-safer.c":37:7 -1
     (nil)
 -> 66)
(barrier 15 14 68)
(code_label 68 15 16 5 6 (nil) [1 uses])
(note 16 68 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])) "pipe-safer.c":39:31 -1
     (nil))
(insn 18 17 19 5 (set (reg:DI 83 [ _2 ])
        (sign_extend:DI (reg:SI 105))) "pipe-safer.c":39:31 -1
     (nil))
(insn 19 18 20 5 (parallel [
            (set (reg:DI 84 [ _3 ])
                (ashift:DI (reg:DI 83 [ _2 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "pipe-safer.c":39:31 -1
     (nil))
(insn 20 19 21 5 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 fd+0 S8 A64])) "pipe-safer.c":39:31 -1
     (nil))
(insn 21 20 22 5 (parallel [
            (set (reg/f:DI 85 [ _4 ])
                (plus:DI (reg:DI 84 [ _3 ])
                    (reg/f:DI 106)))
            (clobber (reg:CC 17 flags))
        ]) "pipe-safer.c":39:31 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 fd+0 S8 A64])
            (reg:DI 84 [ _3 ]))
        (nil)))
(insn 22 21 23 5 (set (reg:SI 86 [ _5 ])
        (mem:SI (reg/f:DI 85 [ _4 ]) [1 *_4+0 S4 A32])) "pipe-safer.c":39:19 -1
     (nil))
(insn 23 22 24 5 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])) "pipe-safer.c":39:13 -1
     (nil))
(insn 24 23 25 5 (set (reg:DI 87 [ _6 ])
        (sign_extend:DI (reg:SI 107))) "pipe-safer.c":39:13 -1
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:DI 88 [ _7 ])
                (ashift:DI (reg:DI 87 [ _6 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "pipe-safer.c":39:13 -1
     (nil))
(insn 26 25 27 5 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 fd+0 S8 A64])) "pipe-safer.c":39:13 -1
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg/f:DI 89 [ _8 ])
                (plus:DI (reg:DI 88 [ _7 ])
                    (reg/f:DI 108)))
            (clobber (reg:CC 17 flags))
        ]) "pipe-safer.c":39:13 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 fd+0 S8 A64])
            (reg:DI 88 [ _7 ]))
        (nil)))
(insn 28 27 29 5 (set (reg:SI 5 di)
        (reg:SI 86 [ _5 ])) "pipe-safer.c":39:19 -1
     (nil))
(call_insn 29 28 30 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fd_safer") [flags 0x41]  <function_decl 0x784c3d966100 fd_safer>) [0 fd_safer S1 A8])
            (const_int 0 [0]))) "pipe-safer.c":39:19 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 30 29 31 5 (set (reg:SI 90 [ _9 ])
        (reg:SI 0 ax)) "pipe-safer.c":39:19 -1
     (nil))
(insn 31 30 32 5 (set (mem:SI (reg/f:DI 89 [ _8 ]) [1 *_8+0 S4 A32])
        (reg:SI 90 [ _9 ])) "pipe-safer.c":39:17 -1
     (nil))
(insn 32 31 33 5 (set (reg:SI 109)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])) "pipe-safer.c":40:17 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 91 [ _10 ])
        (sign_extend:DI (reg:SI 109))) "pipe-safer.c":40:17 -1
     (nil))
(insn 34 33 35 5 (parallel [
            (set (reg:DI 92 [ _11 ])
                (ashift:DI (reg:DI 91 [ _10 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "pipe-safer.c":40:17 -1
     (nil))
(insn 35 34 36 5 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 fd+0 S8 A64])) "pipe-safer.c":40:17 -1
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg/f:DI 93 [ _12 ])
                (plus:DI (reg:DI 92 [ _11 ])
                    (reg/f:DI 110)))
            (clobber (reg:CC 17 flags))
        ]) "pipe-safer.c":40:17 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 fd+0 S8 A64])
            (reg:DI 92 [ _11 ]))
        (nil)))
(insn 37 36 40 5 (set (reg:SI 94 [ _13 ])
        (mem:SI (reg/f:DI 93 [ _12 ]) [1 *_12+0 S4 A32])) "pipe-safer.c":40:17 -1
     (nil))
(insn 40 37 41 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 94 [ _13 ])
            (const_int 0 [0]))) "pipe-safer.c":40:14 -1
     (nil))
(jump_insn 41 40 42 5 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "pipe-safer.c":40:14 -1
     (nil)
 -> 63)
(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 43 42 44 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x784c3d9e1a00 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) "pipe-safer.c":42:23 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 44 43 45 6 (set (reg/f:DI 95 [ _14 ])
        (reg:DI 0 ax)) "pipe-safer.c":42:23 -1
     (nil))
(insn 45 44 46 6 (set (reg:SI 111)
        (mem:SI (reg/f:DI 95 [ _14 ]) [1 *_14+0 S4 A32])) "pipe-safer.c":42:19 -1
     (nil))
(insn 46 45 47 6 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 e+0 S4 A32])
        (reg:SI 111)) "pipe-safer.c":42:19 -1
     (nil))
(insn 47 46 48 6 (set (reg:SI 112)
        (const_int 1 [0x1])) "pipe-safer.c":43:27 -1
     (nil))
(insn 48 47 49 6 (parallel [
            (set (reg:SI 96 [ _15 ])
                (minus:SI (reg:SI 112)
                    (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) "pipe-safer.c":43:27 -1
     (nil))
(insn 49 48 50 6 (set (reg:DI 97 [ _16 ])
        (sign_extend:DI (reg:SI 96 [ _15 ]))) "pipe-safer.c":43:27 -1
     (nil))
(insn 50 49 51 6 (parallel [
            (set (reg:DI 98 [ _17 ])
                (ashift:DI (reg:DI 97 [ _16 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "pipe-safer.c":43:24 -1
     (nil))
(insn 51 50 52 6 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 fd+0 S8 A64])) "pipe-safer.c":43:24 -1
     (nil))
(insn 52 51 53 6 (parallel [
            (set (reg/f:DI 99 [ _18 ])
                (plus:DI (reg:DI 98 [ _17 ])
                    (reg/f:DI 113)))
            (clobber (reg:CC 17 flags))
        ]) "pipe-safer.c":43:24 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 fd+0 S8 A64])
            (reg:DI 98 [ _17 ]))
        (nil)))
(insn 53 52 54 6 (set (reg:SI 100 [ _19 ])
        (mem:SI (reg/f:DI 99 [ _18 ]) [1 *_18+0 S4 A32])) "pipe-safer.c":43:15 -1
     (nil))
(insn 54 53 55 6 (set (reg:SI 5 di)
        (reg:SI 100 [ _19 ])) "pipe-safer.c":43:15 -1
     (nil))
(call_insn 55 54 56 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x784c3d98d600 close>) [0 close S1 A8])
            (const_int 0 [0]))) "pipe-safer.c":43:15 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(call_insn/u 56 55 57 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x784c3d9e1a00 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) "pipe-safer.c":44:15 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 57 56 58 6 (set (reg/f:DI 101 [ _20 ])
        (reg:DI 0 ax)) "pipe-safer.c":44:15 -1
     (nil))
(insn 58 57 59 6 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 e+0 S4 A32])) "pipe-safer.c":44:21 -1
     (nil))
(insn 59 58 60 6 (set (mem:SI (reg/f:DI 101 [ _20 ]) [1 *_20+0 S4 A32])
        (reg:SI 114)) "pipe-safer.c":44:21 -1
     (nil))
(insn 60 59 61 6 (set (reg:SI 102 [ _22 ])
        (const_int -1 [0xffffffffffffffff])) "pipe-safer.c":45:22 -1
     (nil))
(jump_insn 61 60 62 6 (set (pc)
        (label_ref 80)) "pipe-safer.c":45:22 -1
     (nil)
 -> 80)
(barrier 62 61 63)
(code_label 63 62 64 7 4 (nil) [1 uses])
(note 64 63 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "pipe-safer.c":37:27 -1
     (nil))
(code_label 66 65 67 8 3 (nil) [1 uses])
(note 67 66 71 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 71 67 72 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])
            (const_int 1 [0x1]))) "pipe-safer.c":37:21 -1
     (nil))
(jump_insn 72 71 73 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "pipe-safer.c":37:21 -1
     (nil)
 -> 68)
(note 73 72 74 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 9 (set (reg:SI 102 [ _22 ])
        (const_int 0 [0])) "pipe-safer.c":49:14 -1
     (nil))
(jump_insn 75 74 76 9 (set (pc)
        (label_ref 80)) "pipe-safer.c":49:14 -1
     (nil)
 -> 80)
(barrier 76 75 77)
(code_label 77 76 78 10 2 (nil) [1 uses])
(note 78 77 79 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 10 (set (reg:SI 102 [ _22 ])
        (const_int -1 [0xffffffffffffffff])) "pipe-safer.c":55:10 -1
     (nil))
(code_label 80 79 81 11 5 (nil) [2 uses])
(note 81 80 82 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 86 11 (set (reg:SI 103 [ <retval> ])
        (reg:SI 102 [ _22 ])) "pipe-safer.c":56:1 -1
     (nil))
(insn 86 82 87 11 (set (reg/i:SI 0 ax)
        (reg:SI 103 [ <retval> ])) "pipe-safer.c":56:1 -1
     (nil))
(insn 87 86 0 11 (use (reg/i:SI 0 ax)) "pipe-safer.c":56:1 -1
     (nil))
